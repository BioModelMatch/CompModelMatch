---
http_interactions:
- request:
    method: get
    uri: https://doi.crossref.org/openurl?format=unixref&id=doi:10.1136/gutjnl-2018-317872&noredirect=true&pid=sowen@cs.man.ac.uk
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Crossref-Deployment-Name:
      - qs4-1
      Content-Type:
      - text/xml;charset=UTF-8
      Content-Language:
      - en-US
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 13 Nov 2019 08:16:13 GMT
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 13 Nov 2019 08:16:13 GMT
recorded_with: VCR 2.9.3
