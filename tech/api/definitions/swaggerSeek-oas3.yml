openapi: 3.0.0
info:
  version: "0.1-oas3"
  title: JSON API to FAIRDOM SEEK
  license:
    name: The 3-Clause BSD License
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  contact:
    name: SEEK support
    url: 'http://groups.google.com/group/seek4science'
    email: support@fair-dom.org
  description: >-
    The JSON API to FAIRDOM SEEK is a [JSON API](http://jsonapi.org)

    specification describing how to read and write to a SEEK instance.


    The API is defined in the [OpenAPI

    specification](https://swagger.io/specification) currently in [version

    2](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md)


    Example IPython notebooks showing use of the API are available on
    [GitHub](https://github.com/hleonov/ipython_for_SEEK-API).


    ---


    ## Policy


    A Policy specifies the visibility of an object to people using SEEK. A
    [**Project**](#tag/projects) may specify the default policy for objects
    belonging to that [**Project**](#tag/projects)


    The **Policy** specifies the visibility of the object to non-registered
    people or [**People**](#tag/people) not allowed special access.


    The access may be one of (in order of increasing "power"):


    * no_access

    * view

    * download

    * edit

    * manage


    In addition a **Policy** may give special access to specific
    [**People**](#tag/people), People working at an
    [**Institution**](#tag/institutions) or working on a
    [**Project**](#tag/projects).


    ---


    ## License


    The license specifies the license that will apply to any
    [**DataFiles**](#tag/dataFiles), [**Models**](#tag/models),
    [**SOPs**](#tag/sops), [**Documents**](#tag/documents) and
    [**Presentations**](#tag/presentations) associated with a
    [**Project**](#tag/projects).


    The license can currently be:


    * [CC0-1.0](https://creativecommons.org/publicdomain/zero/1.0/) - CC0 1.0

    * [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/) - Creative
    Commons Attribution 4.0

    * [CC-BY-SA-4.0](https://creativecommons.org/licenses/by-sa/4.0/) - Creative
    Commons Attribution Share-Alike 4.0

    * [ODC-BY-1.0](http://www.opendefinition.org/licenses/odc-by) - Open Data
    Commons Attribution License 1.0

    * [ODbL-1.0](http://www.opendefinition.org/licenses/odc-odbl) - Open Data
    Commons Open Database License 1.0

    * [ODC-PDDL-1.0](http://www.opendefinition.org/licenses/odc-pddl) - Open
    Data Commons Public Domain Dedication and Licence 1.0

    * notspecified - License Not Specified

    * other-at - Other (Attribution)

    * other-open - Other (Open)

    * other-pd - Other (Public Domain)

    * [AFL-3.0](http://www.opensource.org/licenses/AFL-3.0) - Academic Free
    License 3.0

    * [Against-DRM](http://www.opendefinition.org/licenses/against-drm) -
    Against DRM

    * [CC-BY-NC-4.0](https://creativecommons.org/licenses/by-nc/4.0/) - Creative
    Commons Attribution-NonCommercial 4.0

    * [DSL](http://www.opendefinition.org/licenses/dsl) - Design Science License

    * [FAL-1.3](http://www.opendefinition.org/licenses/fal) - Free Art License
    1.3

    *
    [GFDL-1.3-no-cover-texts-no-invariant-sections](http://www.opendefinition.org/licenses/gfdl)
    - GNU Free Documentation License 1.3 with no cover texts and no invariant
    sections

    * [geogratis](http://geogratis.gc.ca/geogratis/licenceGG) - Geogratis

    *
    [hesa-withrights](http://www.hesa.ac.uk/index.php?option=com_content&task=view&id=2619&Itemid=209)
    - Higher Education Statistics Agency Copyright with data.gov.uk rights

    * localauth-withrights - Local Authority Copyright with data.gov.uk rights

    * [MirOS](http://www.opensource.org/licenses/MirOS) - MirOS Licence

    * [NPOSL-3.0](http://www.opensource.org/licenses/NPOSL-3.0) - Non-Profit
    Open Software License 3.0

    * [OGL-UK-1.0](http://reference.data.gov.uk/id/open-government-licence) -
    Open Government Licence 1.0 (United Kingdom)

    *
    [OGL-UK-2.0](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/)
    - Open Government Licence 2.0 (United Kingdom)

    *
    [OGL-UK-3.0](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/)
    - Open Government Licence 3.0 (United Kingdom)

    * [OGL-Canada-2.0](http://data.gc.ca/eng/open-government-licence-canada) -
    Open Government License 2.0 (Canada)

    * [OSL-3.0](http://www.opensource.org/licenses/OSL-3.0) - Open Software
    License 3.0

    *
    [dli-model-use](http://data.library.ubc.ca/datalib/geographic/DMTI/license.html)
    - Statistics Canada: Data Liberation Initiative (DLI) - Model Data Use
    Licence

    * [Talis](http://www.opendefinition.org/licenses/tcl) - Talis Community
    License

    * ukclickusepsi - UK Click Use PSI

    * ukcrown-withrights - UK Crown Copyright with data.gov.uk rights

    * [ukpsi](http://www.opendefinition.org/licenses/ukpsi) - UK PSI Public
    Sector Information


    ---


    ## ContentBlob


    The content of a [**DataFile**](#tag/dataFiles),
    [**Document**](#tag/documents), [**Model**](#tag/models),
    [**SOP**](#tag/sops) or [**Presentation**](#tag/presentations) is specified
    as a set of **ContentBlobs**.


    When a resource with content is created, it is possible to specify a
    ContentBlob either as:


    * A remote ContentBlob with:
      * **URI to the content's location**
      * The original filename for the content
      * The content type of the remote content as a [MIME media type](https://en.wikipedia.org/wiki/Media_type)
    * A placeholder that will be filled with uploaded content
      * **The original filename for the content**
      * **The content type of the content as a [MIME media type](https://en.wikipedia.org/wiki/Media_type)**

    The creation of the resource will return a JSON document containing
    ContentBlobs corresponding to the remote ContentBlob and to the ContentBlob
    placeholder. The blobs contain a URI to their location.


    A placeholder can then be satisfied by uploading a file to the location URI.
    For example by a placeholder such as


    ```

    "content_blobs": [
      {
        "original_filename": "a_pdf_file.pdf",
        "content_type": "application/pdf",
        "link": "http://www.fairdomhub.org/data_files/57/content_blobs/313"
      }
    ],

    ```


    may be satisfied by uploading a file to
    http://www.fairdomhub.org/data_files/57/content_blobs/313 using the
    [uploadDataFileContent](#operation/uploadDataFileContent) operation


    The content of a resource may be downloaded by first *reading* the resource
    and then *downloading* the ContentBlobs from their URI.


    ---
  x-logo:
    url: ./definitions/seek.png
    backgroundColor: '#FFFFFF'
security:
  - basicAuth: []
tags:
  - name: list
    description: >-
      **List** operations return a JSON object containing a list of all the
      objects of the specified class to which the authenticated user has access.


      Success response codes:

      * 200 OK


      Error response codes:
    x-traitTag: true
  - name: create
    description: >
      A **Create** operation creates a new instance of the specified class. The
      instance is populated with the content of the body of the API call.


      The **Create** call returns a JSON object representing the newly created
      instance.


      Success response codes:

      * 201 Created


      Error response codes:

      * 400 Bad request

      * 403 Forbidden

      * 422 Unprocessable entity
    x-traitTag: true
  - name: read
    description: >
      A **Read** operation will return information about the instance
      identified, provided the authenticated user has access to it.


      The **Read** operation returns a JSON object representing the instance.


      Success response codes:


      * 200 OK


      Error response codes:

      * 403 Forbidden

      * 404 Not found
    x-traitTag: true
  - name: update
    description: >
      An **Update** operation will modify the information held about the
      specified instance. This operation is only available if the authenticated
      user has access to the object.


      Success response codes:

      * 200 OK


      Error response codes:

      * 403 Forbidden

      * 404 Not found

      * 422 Unprocessable entity
    x-traitTag: true
  - name: delete
    description: >
      A **Delete** operation will delete the specified instance, if the
      authenticated user has sufficient access to it.


      Success response codes:

      * 200 OK


      Error response codes:

      * 403 Forbidden

      * 404 Not found
    x-traitTag: true
  - name: upload
    description: >
      **Upload** operations are used to satisfy the required content of
      previously created resources such as [**DataFile**](#tag/dataFiles),
      [**Document**](#tag/documents), [**Model**](#tag/models),
      [**SOP**](#tag/sops) or [**Presentation**](#tag/presentations). See
      [**ContentBlob**](#section/ContentBlob) for more details.
    x-traitTag: true
  - name: download
    description: >
      **Download** operations are used to retrieve the content of resources such
      as [**DataFile**](#tag/dataFiles), [**Document**](#tag/documents),
      [**Model**](#tag/models), [**SOP**](#tag/sops) or
      [**Presentation**](#tag/presentations). See
      [**ContentBlob**](#section/ContentBlob) for more details.
    x-traitTag: true
  - name: search
    description: ''
  - name: institutions
    description: >
      An **Institition** in SEEK is where someone is employed or works. It is
      normal for an **Institution** to have a physical location - a set of
      buildings in which [**People**](#tag/people) work.


      SEEK does not impose any constraints on the granularity of the
      **Institution** so it may represent a whole university or company, or be
      limited to a specific site.


      An **Institution** has the following associated information:


      * **The title of the Institution**

      * A reference to an avatar / logo for the **Institution**

      * The two letter country code

      * The name of the city where the **Institution** has its headquarters

      * The address of the **Institution** within the city

      * A URI to the webpage for the **Institution**


      A response for an **Institution** such as that for a
      [**Create**](#tag/create), [**Read**](#tag/read) or
      [**Update**](#tag/update) includes the additional information


      * References to registered [**People**](#tag/people) who work at the
      **Institution**

      * References to the [**Projects**](#tag/projects) in which the
      **Institution** is a partner.
  - name: people
    description: >-
      A **Person** in SEEK is someone who participates directly or indirectly in
      the scientific research described within SEEK. A person may:


      * work at one or more [**Institutions**](#tag/institutions)

      * work on one or more [**Projects**](#tag/projects)


      A **Person** can have helped to carry out
      [**Investigations**](#tag/investigatioons), [**Studies**](#tag/studies)
      and [**Assays**](#tag/assays), and to have been involved in the creation
      of resources such as [**DataFles**](#tag/dataFiles).


      A **Person** has the following associated information:


      * **The person's first name**

      * **The person's last name**

      * A personal description

      * An email address for the **Person**

      * A URI to a webpage about the **Person**

      * The [ORCID](https://orcid.org/) for the **Person**

      * A list of strings describing the expertise of the **Person**

      * A list of strings describing the tools that the **Person** uses

      * The telephone number of the **Person**, including country code

      * The [Skype](https://www.skype.com) name of the **Person**


      A response for a **Person** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * A URI to an image used as the **Person's** avatar

      * The **Person's** title, made from their first and last name

      * A list of the [**Project**](#tag/projects) positions held by the
      **Person**


      * References to the [**Projects**](#tag/projects) in which the **Person**
      is involved

      * References to the [**Institutions**](#tag/institution) where the
      **Person** works

      * References to the [**Investigations**](#tag/investigation) in which the
      **Person** is involved

      * References to the [**Studies**](#tag/study) in which the **Person** is
      involved

      * References to the [**Assays**](#tag/assay) in which the **Person** is
      involved

      * References to the [**DataFiles**](#tag/dataFile) associated with the
      **Person**

      * References to the [**Documents**](#tag/document) associated with the
      **Person**

      * References to the [**Models**](#tag/model) associated with the
      **Person**

      * References to the [**SOPs**](#tag/sop) associated with the **Person**

      * References to the [**Publications**](#tag/publication) associated with
      the **Person**

      * References to the [**Presentations**](#tag/presentation) associated with
      the **Person**

      * References to the [**Events**](#tag/event) associated with the
      **Person**


      **Note that in the Person response the email address is encoded in
      mbox_sha1sum**
  - name: programmes
    description: >
      **Programmes** are an umbrella group for one or more
      [**Projects**](#tag/projects). They are usually, but not always,
      associated with a particular funded piece of research.


      A **Programme** has the following associated information:


      * ** The title of the Programme **

      * A description of the **Programme**

      * A URI to a webpage about the **Programme**

      * A string containing details about the funding of the **Programme**

      * A list of the funding codes for the **Programme**


      * References to the [**People**](#tag/people) who are administrators for
      the **Programme**

      * References to [**Projects**](#tag/peojects) that are part of the
      **Programme**


      A response for a **Programme** such as that for a
      [**Create**](#tag/create), [**Read**](#tag/read) or
      [**Update**](#tag/update) includes the additional information


      * References to [**People**](#tag/people) who work on the **Programme**
      and are not administrators

      * References to [**Institutions**](#tag/institutions) that are involved in
      the **Programme**

      * References to [**Investigations**](#tag/investigations) that are part of
      the **Programme**

      * References to [**Studies**](#tag/studies) that are part of the
      **Programme**

      * References to [**Assays**](#tag/assays) that are part of the
      **Programme**

      * References to [**DataFiles**](#tag/dataFiles) that belong to
      [**Projects**](#tag/projects) that are part of the **Programme**

      * References to [**Documents**](#tag/documents) that belong to
      [**Projects**](#tag/projects) that are part of the **Programme**

      * References to [**Models**](#tag/models) that belong to
      [**Projects**](#tag/projects) that are part of the **Programme**

      * References to [**Sops**](#tag/sops) that belong to
      [**Projects**](#tag/projects) that are part of the **Programme**

      * References to [**Publications**](#tag/publications) that belong to
      [**Projects**](#tag/projects) that are part of the **Programme**

      * References to [**Presentations**](#tag/presentations) that belong to
      [**Projects**](#tag/projects) that are part of the **Programme**

      * References to [**Events**](#tag/events) that are held by or attended by
      [**Projects**](#tag/projects) that are part of the **Programme**
  - name: projects
    description: >
      A **Project** is an area of research carried out as part of a
      [**Programme**](#tag/programmes) and consisting of one or more
      [**Investigations**](#tag/investigations).


      A **Project** has the following associated information:


      * **The title of the Project**

      * A reference to an avatar / logo for the **Project**

      * A description of the **Project**

      * A URI to a webpage about the **Project**

      * A URI to the wiki of the **Project**

      * The default [**Policy**](#section/Policy) applied to objects belonging
      to the **Project**

      * The default [**License**](#section/License) applied to objects belonging
      to the **Project**


      * References to the [**Programmes**](#tag/programmes) that the **Project**
      is part of

      * References to the [**Organisms**](#tag/organisms) studied by the
      **Project**


      A response for a **Project** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * References to [**People**](#tag/people) who work on the **Project**

      * References to [**Institutions**](#tag/institutions) that are involved in
      the **Project**

      * References to [**Investigations**](#tag/investigations) that are part of
      the **Project**

      * References to [**Studies**](#tag/studies) that are part of the
      **Project**

      * References to [**Assays**](#tag/assays) that are part of the **Project**

      * References to [**DataFiles**](#tag/dataFiles) that belong to the
      [**Project**](#tag/projects)

      * References to [**Documents**](#tag/documents) that belong to the
      [**Project**](#tag/projects)

      * References to [**Models**](#tag/models) that belong to the
      [**Project**](#tag/projects)

      * References to [**Sops**](#tag/sops) that belong to the
      [**Project**](#tag/projects)

      * References to [**Publications**](#tag/publications) that belong to the
      [**Project**](#tag/projects)

      * References to [**Presentations**](#tag/presentations) that belong to the
      [**Project**](#tag/projects)

      * References to [**Events**](#tag/events) that are held by or attended by
      the [**Project**](#tag/projects)
  - name: investigations
    description: >
      **Investigations** are high level descriptions of the research carried out
      by a particular [**Project**](#tag/projects). They typically reflect the
      general aims of the [**Project**](#tag/projects), for example, carbon
      metabolism or anaerobic/aerobic transitions.


      An **Investigation** has the following associated information:


      * **The title of the Investigation**

      * A description of the **Investigation**

      * A string listing other creators of the **Investigation**

      * The sharing [**Policy**](#section/Policy) of the **Investigation**

      * References to the [**People**](#tag/people) who created the
      **Investigation**

      * References to the [**Projects**](#tag/projects) which the
      **Investigation** is part of

      * References to [**Publications**](#tag/publications) about the
      **Investigation**


      A response for an **Investigation** such as that for a
      [**Create**](#tag/create), [**Read**](#tag/read) or
      [**Update**](#tag/update) includes the additional information


      * A reference to the [**Person**](#tag/people) who registered (submitted)
      the **Investigation** into SEEK

      * References to [**Studies**](#tag/studies) that are part of the
      **Investigation**

      * References to [**Assays**](#tag/assays) that are part of the
      **Investigation**

      * References to [**DataFiles**](#tag/dataFiles) that belong to the
      **Investigation**

      * References to [**Documents**](#tag/documents) that belong to the
      **Investigation**

      * References to [**Models**](#tag/models) that belong to the
      **Investigation**

      * References to [**Sops**](#tag/sops) that belong to the **Investigation**

      * References to [**Publications**](#tag/publications) that belong to the
      **Investigation**
  - name: studies
    description: >
      A **Study** is a series of experiments (or [**Assays**](#tag/assays) )
      which can be combined to answer a particular biological question. These
      experiments might be a series of the same type of [**Assay**](#tag/assays)
      (for example, microarrays for different conditions), or they may be a
      collection of different types of [**Assay**](#tag/assays) (e.g. a
      combination of array and mass spec measurements).


      A **Study** has the following associated information:


      * **The title of the Study**

      * A description of the **Study**

      * A string listing experimentalists of the **Study**

      * A string listing other creators of the **Study**

      * A string containing the id of the [**Person**](#tag/people) responsible
      for the **Study**

      * The sharing [**Policy**](#section/Policy) of the **Study**

      * References to the [**People**](#tag/people) who created the **Study**

      ** A reference to the [Investigation](#tag/investigations) containing the
      Study**

      * References to [**Publications**](#tag/publications) about the **Study**


      A response for a **Study** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * A reference to the [**Person**](#tag/people) who registered (submitted)
      the **Study** into SEEK

      * References to the [**Projects**](#tag/projects) that indirectly contain
      the **Study**

      * References to the [**Assays**](#tag/assays) that belong to the
      **Stuady**

      * References to [**DataFiles**](#tag/dataFiles) that belong to the
      **Study**

      * References to [**Documents**](#tag/documents) that belong to the
      **Study**

      * References to [**Models**](#tag/models) that belong to the **Study**

      * References to [**Sops**](#tag/sops) that belong to the **Study**

      * References to [**Publications**](#tag/publications) that belong to the
      **Study**
  - name: assays
    description: >
      An **Assay** describes a particular experiment. It allows you to associate
      [**DataFiles**](#tag/dataFiles), [**SOPs**](#tag/sops) and
      [**Models**](#tag/models) together as well as describing the type of
      **Assay** and any technology required to perform the experiment.


      An **Assay** has the following associated information:


      * **The title of the Assay**

      * A description of the **Assay**

      * A string listing other creators of the **Assay**

      * A string containing the abbreviated form of the kind of **Assay** -
      normally *EXP* for experimental or *MOD* for modelling

      * A URI to the type of **Assay** resolving to an entry in the [JERM
      ontology](http://www.mygrid.org.uk/ontology/JERMOntology)

      * A URI to the technology used in the **Assay** resolving to an entry in
      the [JERM ontology](http://www.mygrid.org.uk/ontology/JERMOntology)

      * The sharing [**Policy**](#section/Policy) of the **Assay**

      * References to the [**People**](#tag/people) who created the **Assay**

      * A singleton reference to the [**Study**](#tag/studies) which the
      **Assay** is part of

      * References to [**Publications**](#tag/publications) about the **Assay**

      * References to [**DataFiles**](#tag/dataFiles) that belong to the
      **Assay**

      * References to [**Documents**](#tag/documents) that belong to the
      **Assay**

      * References to [**Models**](#tag/models) that belong to the **Assay**

      * References to [**Sops**](#tag/sops) that belong to the **Assay**

      * References to the [**Organisms**](#tag/organisms) studied in the
      **Assay**


      A response for an **Assay** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * A singleton reference to the [**Investigation**](#tag/investigations)
      which the **Assay** is part of

      * References to the [**Projects**](#tag/projects) that indirectly contain
      the **Assay**
  - name: dataFiles
    description: >
      A **dataFile** can be any file containing data relevant to the
      [**Assay**](#tag/assays) (raw data, processed data, calibration
      information etc). They can be in any format (word files, e-lab notebooks,
      code, annotated spreadsheets etc).


      **Although dataFiles are versioned, this is out of scope for the current
      release of the API.**


      A **DataFile** has the following associated information:


      * **The title of the DataFile**

      * **The specification for the [ContentBlobs](#section/ContentBlob) in the
      DataFile**

      * **References to the [Projects](#tag/projects) documented**

      * A string containing a list of tags for the **DataFile**

      * A description of the **DataFile**

      * The [**License**](#section/Licence) applied to the **DataFile**

      * The sharing [**Policy**](#section/Policy) applied to the **DataFile**

      * A string listing other creators of the **DataFile**

      * References to the [**People**](#tag/people) who wrote the **DataFile**

      * References to the [**Assays**](#tag/assays) associated with the
      **DataFile**

      * References to the [**Publications**](#tag/publications) associated with
      the **DataFile**

      * References to the [**Events**](#tag/events) associated with the
      **DataFile**


      A response for a **DataFile** such as that for a
      [**Create**](#tag/create), [**Read**](#tag/read) or
      [**Update**](#tag/update) includes the additional information


      * ** An array of the versions of the DataFile**

      * ** A number indicating the latest version**

      * ** The time when the DataFile was created**

      * ** The last time the DataFile was updated**

      * A reference to the [**Person**](#tag/people) who submitted the
      **DataFile**

      * References to the [**Investigations**](#tag/investigations) associated
      with the **DataFile**

      * References to the [**Studies**](#tag/studies) associated with the
      **DataFile**
  - name: documents
    description: >
      A **Document** is any documentation that describes an
      [**Investigation**](#tag/investigations), [**Study**](#tag/studies) or
      [**Assay**](#tag/assays). The content of a **Document** is descriptive and
      it must not contain any data that is consumed or produced by an
      [**Assay**](#tag/assays).


      **Although documents are versioned, this is out of scope for the current
      release of the API.**


      A **Document** has the following associated information:


      * **The title of the Document**

      * **The specification for the [ContentBlobs](#section/ContentBlob) in the
      Document**

      * **References to the [Projects](#tag/projects) documented**

      * A string containing a list of tags for the **Document**

      * A description of the **Document**

      * The [**License**](#section/Licence) applied to the **Document**

      * The sharing [**Policy**](#section/Policy) applied to the **Document**

      * A string listing other creators of the **Document**

      * References to the [**People**](#tag/people) who wrote the **Document**

      * References to the [**Assays**](#tag/assays) documented


      A response for a **Document** such as that for a
      [**Create**](#tag/create), [**Read**](#tag/read) or
      [**Update**](#tag/update) includes the additional information


      * ** An array of the versions of the Document**

      * ** A number indicating the latest version**

      * ** The time when the Document was created**

      * ** The last time the Document was updated**

      * A reference to the [**Person**](#tag/people) who submitted the
      **Document**

      * References to the [**Investigations**](#tag/investigations) associated
      with the **Document**

      * References to the [**Studies**](#tag/studies) associated with the
      **Document**

      * References to the [**Publications**](#tag/publications) associated with
      the **Document**
  - name: models
    description: >
      A **Model** is a computer model of a biological or biochemical network or
      process.Some **Models** may be simulated using the JWSOnline system.


      **Although models are versioned, this is out of scope for the current
      release of the API.**


      A **Model** has the following associated information:


      * **The title of the Model**

      * **The specification for the [ContentBlobs](#section/ContentBlob) in the
      Model**

      * **References to the [Projects](#tag/projects) documented**

      * A string containing a list of tags for the **Model**

      * A description of the **Model**

      * The [**License**](#section/Licence) applied to the **Model**

      * The sharing [**Policy**](#section/Policy) applied to the **Model**

      * A string listing other creators of the **Model**

      * A string specifying the **Model** type

      * A string specifying the **Model** format

      * A string specifying the execution environment of the **Model**

      * References to the [**People**](#tag/people) who wrote the **Model**

      * References to the [**Assays**](#tag/assays) associated with the
      **Model**

      * References to the [**Publications**](#tag/publications) associated with
      the **Model**


      A response for a **Model** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * ** An array of the versions of the Model**

      * ** A number indicating the latest version**

      * ** The time when the Model was created**

      * ** The last time the Model was updated**

      * A reference to the [**Person**](#tag/people) who submitted the **Model**

      * References to the [**Investigations**](#tag/investigations) associated
      with the **Model**

      * References to the [**Studies**](#tag/studies) associated with the
      **Model**
  - name: publications
    description: >
      A **Publication** is a publication about a
      [**Project**](#tag/projects.md), It normally has a
      [DOI](http://www.doi.org/) or [PubMed
      ID](https://en.wikipedia.org/wiki/Wikipedia:PMID).


      The response to a read of a **Publication** includes the following
      information:


      * **The title of the Publication**

      * **The journal in which the Publication is published**

      * **A string containing the date of publication**

      * **The PubMed ID**

      * **The preferred string for citing the Publication**

      * **A link to the Publication**

      * The DOI of the **Publication**

      * A list of strings for the authors

      * The sharing [**Policy**](#section/Policy) for the **Publication**

      * References to the [**People**](#tag/people) who wrote the
      **Publication**

      * References to the [**Projects**](#tag/projects) described in the
      **Publication**

      * References to the [**Investigations**](#tag/investigations) described in
      the **Publication**

      * References to the [**Studies**](#tag/studies) described in the
      **Publication**

      * References to the [**Assays**](#tag/assays) described in the
      **Publication**

      * References to [**DataFiles**](#tag/dataFiles) that were used in the work
      described in the **Publication**

      * References to [**Models**](#tag/models) that were used in the work
      described in the **Publication**

      * References to related **Publications**

      * References to [**Presentations**](#tag/presentations) associated with
      the **Publication**

      * References to [**Events**](#tag/events) associated with the
      **Publication**
  - name: sops
    description: >
      **SOPs** are standard operating procedures which describe the protocol
      required to reproduce an [**Assay**](#tag/assays). They can be in any
      format (word files, e-lab notebooks, code, annotated spreadsheets etc).
      Relevant **SOPs** can be linked directly to the [**Assay**](#tag/assays).


      **Although SOPs are versioned, this is out of scope for the current
      release of the API.**


      A **SOP** has the following associated information:


      * **The title of the SOP**

      * **The specification for the [ContentBlobs](#section/ContentBlob) in the
      SOP**

      * **References to the [Projects](#tag/projects) relevant to the SOP**

      * A string containing a list of tags for the **SOP**

      * A description of the **SOP**

      * The [**License**](#section/Licence) applied to the **SOP**

      * The sharing [**Policy**](#section/Policy) applied to the **SOP**

      * A string listing other creators of the **SOP**

      * References to the [**People**](#tag/people) who wrote the **SOP**

      * References to the [**Assays**](#tag/assays) relevant to the SOP


      A response for a **SOP** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * ** An array of the versions of the SOP**

      * ** A number indicating the latest version**

      * ** The time when the SOP was created**

      * ** The last time the SOP was updated**

      * A reference to the [**Person**](#tag/people) who submitted the **SOP**

      * References to the [**Investigations**](#tag/investigations) associated
      with the **SOP**

      * References to the [**Studies**](#tag/studies) associated with the
      **SOP**

      * References to the [**Publications**](#tag/publications) associated with
      the **SOP**
  - name: events
    description: >-
      An **Event** is an event that is associated with one or more
      [**Projects**](#tag/projects), happening on specified dates and at a
      specific, actual or virtual, location.


      An **Event** has the following associated information:


      * **The title of the Event**

      * **The start date of the Event**

      * A description of the **Event**

      * A URI to a webpage about the **Event**

      * The two letter country code for where the **Event** is

      * The name of the city where the **Event** takes place

      * The address within the city where the **Event** takes place

      * The end date of the **Event**

      * The sharing [**Policy**](#section/Policy) for the **Event**

      * **References to the [Projects](#tag/projects) associated with the
      Event**

      * References to any [**DataFiles**](#tag/dataFiles)  associated with the
      **Event**

      * References to any [**Publications**](#tag/publications)  associated with
      the **Event**

      * References to any [**Presentations**](#tag/presentations)  associated
      with the **Event**


      A response for an **Event** such as that for a [**Create**](#tag/create),
      [**Read**](#tag/read) or [**Update**](#tag/update) includes the additional
      information


      * Reference to the [**Person**](#tag/people) who submitted the **Event**
  - name: presentations
    description: >-
      A **Presentation** is a presentation about one or more
      [**Projects**](#tag/projects).


      **Although presentations are versioned, this is out of scope for the
      current release of the API.**


      A **Presentation** has the following associated information:


      * **The title of the Presentation**

      * **The specification for the [ContentBlobs](#section/ContentBlob) in the
      Presentation**

      * **References to the [Projects](#tag/projects) documented**

      * A string containing a list of tags for the **Presentation**

      * A description of the **Presentation**

      * The [**License**](#section/Licence) applied to the **Presentation**

      * The sharing [**Policy**](#section/Policy) applied to the
      **Presentation**

      * A string listing other creators of the **Presentation**

      * References to the [**People**](#tag/people) who wrote the
      **Presentation**

      * References to the [**Assays**](#tag/assays) associated with the
      **Presentation**

      * References to the [**Publications**](#tag/publications) associated with
      the **Presentation**

      * References to the [**Events**](#tag/events) associated with the
      **Presentation**


      A response for a **Presentation** such as that for a
      [**Create**](#tag/create), [**Read**](#tag/read) or
      [**Update**](#tag/update) includes the additional information


      * ** An array of the versions of the Presentation**

      * ** A number indicating the latest version**

      * ** The time when the Presentation was created**

      * ** The last time the Presentation was updated**

      * A reference to the [**Person**](#tag/people) who submitted the
      **Presentation**

      * References to the [**Investigations**](#tag/investigations) associated
      with the **Presentation**

      * References to the [**Studies**](#tag/studies) associated with the
      **Presentation**
  - name: organisms
    description: >
      An **Organism** is a organism as identified by an entry in the [NCBI
      ontology](http://www.ncbi.nlm.nih.gov/taxonomy).


      The response to a read of an **Organism** includes the following
      information:


      * **The title of the Organism**

      * **A URI referencing an ontology entry describing the Organism**

      * **The common abbreviation for the ontology**

      * **References to [Projects](#tag/projects) that use the Organism**

      * **References to [Assays](#tag/assays) that use the Organism**

      * **References to [Models](#tag/models) that simulate the Organism**
  - name: sampleTypes
    description: >
      A **SampleType** is a definition of the information that is held about a
      physical or virtual sample.


      **In the current release of the API it is only possible to list references
      to the SampleTypes. Additional functionality will be available in future
      versions.**
x-tagGroups:
  - name: operation types
    tags:
      - list
      - create
      - read
      - update
      - delete
      - upload
      - download
  - name: Search
    tags:
      - search
  - name: Yellow Pages
    tags:
      - institutions
      - people
      - programmes
      - projects
  - name: Experiments
    tags:
      - investigations
      - studies
      - assays
  - name: Assets
    tags:
      - dataFiles
      - documents
      - models
      - publications
      - sops
  - name: Activities
    tags:
      - events
      - presentations
  - name: Samples
    tags:
      - organisms
      - sampleTypes
paths:
  /search:
    parameters:
      - name: q
        in: query
        required: true
        description: |
          The text to search for
        schema:
          type: string
          default: lactate inhibition
      - name: search_type
        in: query
        required: false
        description: The type of resource to return
        schema:
          type: string
          enum:
            - assays
            - data_files
            - events
            - institutions
            - investigations
            - models
            - people
            - presentations
            - programmes
            - projects
            - publications
            - sample_types
            - sops
            - studies
          default: data_files
    get:
      operationId: search
      description: |
        **search** returns a list of references to resources

        * of the specified type
        * that are visible to the authenticated user, and
        * contain the specified test
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1213'
                        type: data_files
                        attributes:
                          title: Lactate flux inhibition data
                        links:
                          self: /data_files/1213
                      - id: '70'
                        type: data_files
                        attributes:
                          title: >-
                            Characterization of kinetics of the lactate
                            dehydrogenase of S. pyogenes
                        links:
                          self: /data_files/70
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
  /assays:
    get:
      operationId: listAssays
      description: >
        The **listAssays** operation returns a JSON object containing a list of
        all the [**Assays**](#tag/assays) to which the authenticated user has
        accesss.
      tags:
        - list
        - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assaysResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: assays
                        attributes:
                          title: Standard-based Excel template for metabolomics data
                        links:
                          self: /assays/1
                      - id: '2'
                        type: assays
                        attributes:
                          title: Gene expression(Transcriptome)
                        links:
                          self: /assays/2
                      - id: '3'
                        type: assays
                        attributes:
                          title: metabolome-LCMS
                        links:
                          self: /assays/3
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
    post:
      operationId: createAssay
      description: >
        A **createAssay** operation creates a new instance of a
        [**Assay**](#tag/assays). The instance is populated with the content of
        the body of the API call.


        The **createAssay** operation returns a JSON object representing the
        newly created [**Assay**](#tag/assays) and redirects to its URL.
      tags:
        - create
        - assays
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assayResponse'
              examples:
                response:
                  value:
                    data:
                      id: '54'
                      type: assays
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                type: projects
                                id: '442'
                              access: manage
                        title: A Maximal experimental Assay
                        description: A Western Blot Assay
                        other_creators: Anonymous creator
                        assay_class:
                          title: Experimental assay
                          key: EXP
                          description: An experimental assay class description
                        assay_type:
                          label: null
                          uri: >-
                            http://www.mygrid.org.uk/ontology/JERMOntology#Transcriptomics
                        technology_type:
                          label: null
                          uri: >-
                            http://www.mygrid.org.uk/ontology/JERMOntology#RNA-Seq
                      relationships:
                        creators:
                          data:
                            - id: '287'
                              type: people
                        submitter:
                          data:
                            - id: '287'
                              type: people
                        organisms:
                          data:
                            - id: '3'
                              type: organisms
                        people:
                          data:
                            - id: '287'
                              type: people
                        projects:
                          data:
                            - id: '436'
                              type: projects
                        investigation:
                          data:
                            id: '66'
                            type: investigations
                        study:
                          data:
                            id: '66'
                            type: studies
                        data_files:
                          data:
                            - id: '16'
                              type: data_files
                        models:
                          data:
                            - id: '5'
                              type: models
                        sops:
                          data:
                            - id: '4'
                              type: sops
                        publications:
                          data:
                            - id: '16'
                              type: publications
                        documents:
                          data:
                            - id: '32'
                              type: documents
                      links:
                        self: /assays/54
                      meta:
                        created: '2018-04-27T14:27:53.800Z'
                        modified: '2018-04-27T14:27:54.372Z'
                        api_version: '0.1'
                        uuid: 18867f90-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assayPost'
        description: The assay to create.
  '/assays/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The assay to be fetched, updated or deleted'
        schema:
          type: integer
          default: 267
    patch:
      operationId: updateAssay
      description: >
        An **updateAssay** operation will modify the information held about the
        specified [**Assay**](#tag/assays). This operation is only available if
        the authenticated user has access to the [**Assay**](#tag/assays).


        The **updateAssay** operation returns a JSON object representing the
        modified [**Assay**](#tag/assays).
      tags:
        - update
        - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assayResponse'
              examples:
                response:
                  value:
                    data:
                      id: '72'
                      type: assays
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                type: projects
                                id: '585'
                              access: manage
                        title: A Maximal Assay
                        description: A Western Blot Assay
                        other_creators: Anonymous creator
                        assay_class:
                          title: Experimental assay
                          key: EXP
                          description: An experimental assay class description
                        assay_type:
                          label: null
                          uri: >-
                            http://www.mygrid.org.uk/ontology/JERMOntology#Transcriptomics
                        technology_type:
                          label: null
                          uri: >-
                            http://www.mygrid.org.uk/ontology/JERMOntology#RNA-Seq
                      relationships:
                        creators:
                          data:
                            - id: '391'
                              type: people
                        submitter:
                          data:
                            - id: '391'
                              type: people
                        organisms:
                          data:
                            - id: '4'
                              type: organisms
                        people:
                          data:
                            - id: '391'
                              type: people
                        projects:
                          data:
                            - id: '583'
                              type: projects
                        investigation:
                          data:
                            id: '94'
                            type: investigations
                        study:
                          data:
                            id: '94'
                            type: studies
                        data_files:
                          data:
                            - id: '18'
                              type: data_files
                        models:
                          data:
                            - id: '8'
                              type: models
                        sops:
                          data:
                            - id: '6'
                              type: sops
                        publications:
                          data:
                            - id: '18'
                              type: publications
                        documents:
                          data:
                            - id: '34'
                              type: documents
                      links:
                        self: /assays/72
                      meta:
                        created: '2018-04-27T14:28:46.000Z'
                        modified: '2018-04-27T14:28:51.457Z'
                        api_version: '0.1'
                        uuid: 37b79600-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assayPatch'
        description: The assay to patch
    get:
      operationId: readAssay
      description: >
        A **readAssay** operation will return information about the
        [Assay](#tag/assays) identified, provided the authenticated user has
        access to it.


        The **readAssay** operation returns a JSON object representing the
        [**Assay**](#tag/assays).
      tags:
        - read
        - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assayResponse'
              examples:
                response:
                  value:
                    data:
                      id: '267'
                      type: assays
                      attributes:
                        title: Culturing and synchronisation of P. falciparum
                        description: null
                        assay_class:
                          title: Experimental Assay
                          key: EXP
                          description: null
                        assay_type:
                          label: Experimental Assay Type
                          uri: >-
                            http://jermontology.org/ontology/JERMOntology#Experimental_assay_type
                        technology_type:
                          label: Technology Type
                          uri: >-
                            http://jermontology.org/ontology/JERMOntology#Technology_type
                      relationships:
                        creators:
                          data: []
                        submitter:
                          data:
                            - id: '411'
                              type: people
                        organisms:
                          data: []
                        people:
                          data:
                            - id: '411'
                              type: people
                        projects:
                          data:
                            - id: '17'
                              type: projects
                        investigation:
                          data:
                            id: '56'
                            type: investigations
                        study:
                          data:
                            id: '118'
                            type: studies
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /assays/267
                      meta:
                        created: '2014-08-15T13:01:52.000Z'
                        modified: '2017-11-08T14:21:08.000Z'
                        api_version: '0.1'
                        uuid: 510b329d-1628-4e19-9ecb-4efd8966baa6
                        base_url: 'https://fairdomhub.org'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: deleteAssay
      description: >
        A **deleteAssay** operation will delete the specified
        [**Assay**](#tag/assays), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - assays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /data_files:
    get:
      operationId: listDataFiles
      description: >
        The **listDataFiles** operation returns a JSON object containing a list
        of all the [**DataFiles**](#tag/dataFiles) to which the authenticated
        user has accesss.
      tags:
        - list
        - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataFilesResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: data_files
                        attributes:
                          title: Growth-rate dependent catabolic flux disitribution
                        links:
                          self: /data_files/1
                      - id: '2'
                        type: data_files
                        attributes:
                          title: >-
                            Excel sheet template : concentrations of
                            intracellular metabolites
                        links:
                          self: /data_files/2
                      - id: '6'
                        type: data_files
                        attributes:
                          title: 0804_shake-flask-sigB-starvation
                        links:
                          self: /data_files/6
                      - id: '8'
                        type: data_files
                        attributes:
                          title: Transcriptomics Template (ArrayExpress Format)
                        links:
                          self: /data_files/8
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createDataFile
      description: >
        A **createDataFile** operation creates a new instance of a
        [**DataFile**](#tag/dataFiles). The instance is populated with the
        content of the body of the API call.


        The **createDataFile** operation returns a JSON object representing the
        newly created [**DataFile**](#tag/dataFiles) and redirects to its URL.
      tags:
        - create
        - dataFiles
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataFileResponse'
              examples:
                response:
                  value:
                    data:
                      id: '57'
                      type: data_files
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                type: projects
                                id: '2058'
                              access: edit
                        title: A Maximal Data File
                        description: This is the description
                        license: CC-BY-4.0
                        latest_version: 1
                        tags:
                          - tag1
                          - tag2
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/data_files/57?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:43:12.000Z'
                        updated_at: '2018-04-27T14:43:12.000Z'
                        content_blobs:
                          - original_filename: a_pdf_file.pdf
                            url: null
                            md5sum: null
                            sha1sum: null
                            content_type: application/pdf
                            link: >-
                              http://localhost:3000/data_files/57/content_blobs/313
                            size: null
                        other_creators: 'John Smith, Jane Smith'
                      relationships:
                        creators:
                          data:
                            - id: '1369'
                              type: people
                        submitter:
                          data:
                            - id: '1368'
                              type: people
                        people:
                          data:
                            - id: '1368'
                              type: people
                            - id: '1369'
                              type: people
                        projects:
                          data:
                            - id: '2058'
                              type: projects
                        investigations:
                          data:
                            - id: '298'
                              type: investigations
                        studies:
                          data:
                            - id: '250'
                              type: studies
                        assays:
                          data:
                            - id: '186'
                              type: assays
                        publications:
                          data:
                            - id: '87'
                              type: publications
                        events:
                          data:
                            - id: '70'
                              type: events
                      links:
                        self: /data_files/57?version=1
                      meta:
                        created: '2018-04-27T14:43:12.273Z'
                        modified: '2018-04-27T14:43:13.177Z'
                        api_version: '0.1'
                        uuid: 3bf3e270-2c57-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataFilePost'
        description: The dataFile to create.
  '/data_files/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: The data file to fetch
        schema:
          type: integer
          default: 1152
    get:
      operationId: readDataFile
      description: >
        A **readDataFile** operation will return information about the
        [DataFile](#tag/dataFiles) identified, provided the authenticated user
        has access to it.


        The **readDataFile** operation returns a JSON object representing the
        [**DataFile**](#tag/dataFiles).
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the data file to get
          schema:
            type: integer
            default: 2
      tags:
        - read
        - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataFileResponse'
              examples:
                response:
                  value:
                    data:
                      id: '1152'
                      type: data_files
                      attributes:
                        tags: null
                        title: G3PDH Kinetic data
                        description: >-
                          Experimental data set for the kinetic characterisation
                          of G3PDH
                        license: null
                        latest_version: 2
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'https://fairdomhub.org/data_files/1152?version=1'
                          - version: 2
                            revision_comments: null
                            url: 'https://fairdomhub.org/data_files/1152?version=2'
                        version: 2
                        revision_comments: null
                        created_at: '2014-12-08T17:25:32.000Z'
                        updated_at: '2015-05-07T12:16:24.000Z'
                        content_blobs:
                          - original_filename: G3PDH_kinetics-SEEK.xls
                            url: null
                            md5sum: 54470f803b4e5348096c63bdda458ae6
                            sha1sum: 9a88d3c402fe060453001ac3d82974ee91f4095f
                            content_type: application/vnd.ms-excel
                            link: >-
                              https://fairdomhub.org/data_files/1152/content_blobs/1831
                            size: 100864
                      relationships:
                        creators:
                          data:
                            - id: '411'
                              type: people
                            - id: '49'
                              type: people
                        submitter:
                          data:
                            - id: '411'
                              type: people
                        people:
                          data:
                            - id: '49'
                              type: people
                            - id: '411'
                              type: people
                        projects:
                          data:
                            - id: '17'
                              type: projects
                        investigations:
                          data:
                            - id: '56'
                              type: investigations
                        studies:
                          data:
                            - id: '118'
                              type: studies
                        assays:
                          data:
                            - id: '253'
                              type: assays
                        publications:
                          data: []
                        events:
                          data: []
                      links:
                        self: /data_files/1152?version=2
                      meta:
                        created: '2014-08-11T06:32:28.000Z'
                        modified: '2015-03-03T09:54:27.000Z'
                        api_version: '0.1'
                        uuid: d6a8a3a9-44da-46c9-a36e-f6fad19de5f7
                        base_url: 'https://fairdomhub.org'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateDataFile
      description: >
        An **updateDataFile** operation will modify the information held about
        the specified [**DataFile**](#tag/dataFiles). This operation is only
        available if the authenticated user has access to the
        [**DataFile**](#tag/dataFiles).


        The **updateDataFile** operation returns a JSON object representing the
        modified [**DataFile**](#tag/dataFiles).
      tags:
        - update
        - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataFileResponse'
              examples:
                response:
                  value:
                    data:
                      id: '68'
                      type: data_files
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        title: A Data File_62
                        description: Study of the Human Genome
                        license: null
                        latest_version: 1
                        tags: null
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/data_files/68?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:43:48.000Z'
                        updated_at: '2018-04-27T14:43:52.000Z'
                        content_blobs:
                          - original_filename: a_pdf_file.pdf
                            url: null
                            md5sum: 565ae8a7a743c3bfd9f15c69647f5b8b
                            sha1sum: b9d2148740050b7f37975edd0fb97faa508ff767
                            content_type: application/pdf
                            link: >-
                              http://localhost:3000/data_files/68/content_blobs/324
                            size: 8827
                        other_creators: null
                      relationships:
                        creators:
                          data:
                            - id: '1413'
                              type: people
                        submitter:
                          data:
                            - id: '1412'
                              type: people
                        people:
                          data:
                            - id: '1412'
                              type: people
                            - id: '1413'
                              type: people
                        projects:
                          data:
                            - id: '2117'
                              type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data: []
                        events:
                          data: []
                      links:
                        self: /data_files/68?version=1
                      meta:
                        created: '2018-04-27T14:43:48.000Z'
                        modified: '2018-04-27T14:43:49.000Z'
                        api_version: '0.1'
                        uuid: 51b0b600-2c57-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataFilePatch'
        description: The data file to patch
    delete:
      operationId: deleteDataFile
      description: >
        A **deleteDataFile** operation will delete the specified
        [**DataFile**](#tag/dataFiles), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - dataFiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/data_files/{id}/content_blobs/{blob_id}':
    put:
      operationId: uploadDataFileContent
      description: Description of DataFileContent upload
      parameters:
        - name: id
          in: path
          required: true
          description: The data file content to upload
          schema:
            type: integer
            default: 1152
        - name: blob_id
          in: path
          required: true
          description: The content identifier to upload
          schema:
            type: integer
            default: 1831
      tags:
        - upload
        - dataFiles
      responses:
        '200':
          description: Success
      requestBody:
        $ref: '#/components/requestBodies/uploadDataFileContentBlobcontent'
  '/data_files/{id}/content_blobs/{blob_id}/download':
    parameters:
      - name: id
        in: path
        required: true
        description: The data file to fetch
        schema:
          type: integer
          default: 1152
      - name: blob_id
        in: path
        required: true
        description: The blob to download
        schema:
          type: integer
          default: 1831
    get:
      operationId: downloadDataFileContent
      description: Description of DataFileContent download
      tags:
        - download
        - dataFiles
      responses:
        '200':
          description: Success
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /documents:
    get:
      operationId: listDocuments
      description: >
        The **listDocuments** operation returns a JSON object containing a list
        of all the [**Documents**](#tag/documents) to which the authenticated
        user has accesss.
      tags:
        - list
        - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documentsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: documents
                        attributes:
                          title: OpenAPI Specification | Swagger
                        links:
                          self: /documents/1
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://testing.sysmo-db.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createDocument
      description: >
        A **createDocument** operation creates a new instance of a
        [**Document**](#tag/documents). The instance is populated with the
        content of the body of the API call.


        The **createDocument** operation returns a JSON object representing the
        newly created [**Document**](#tag/documents) and redirects to its URL.
      tags:
        - create
        - documents
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documentResponse'
              examples:
                response:
                  value:
                    data:
                      id: '14'
                      type: documents
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '359'
                                type: projects
                              access: edit
                        title: A Maximal Document
                        description: This is the description
                        license: CC-BY-4.0
                        latest_version: 1
                        tags:
                          - tag1
                          - tag2
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/documents/14?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:26:09.000Z'
                        updated_at: '2018-04-27T14:26:09.000Z'
                        content_blobs:
                          - original_filename: a_pdf_file.pdf
                            url: null
                            md5sum: null
                            sha1sum: null
                            content_type: application/pdf
                            link: >-
                              http://localhost:3000/documents/14/content_blobs/48
                            size: null
                        other_creators: 'John Smith, Jane Smith'
                      relationships:
                        creators:
                          data:
                            - id: '234'
                              type: people
                        submitter:
                          data:
                            - id: '233'
                              type: people
                        people:
                          data:
                            - id: '233'
                              type: people
                            - id: '234'
                              type: people
                        projects:
                          data:
                            - id: '359'
                              type: projects
                        investigations:
                          data:
                            - id: '51'
                              type: investigations
                        studies:
                          data:
                            - id: '51'
                              type: studies
                        assays:
                          data:
                            - id: '38'
                              type: assays
                        publications:
                          data: []
                      links:
                        self: /documents/14?version=1
                      meta:
                        created: '2018-04-27T14:26:09.713Z'
                        modified: '2018-04-27T14:26:10.078Z'
                        api_version: '0.1'
                        uuid: da7cb1a0-2c54-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentPost'
        description: The document to create.
  '/documents/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: The document to fetch
        schema:
          type: integer
          default: 1152
    get:
      operationId: readDocument
      description: >
        A **readDocument** operation will return information about the
        [Document](#tag/documents) identified, provided the authenticated user
        has access to it.


        The **readDocument** operation returns a JSON object representing the
        [**Document**](#tag/documents).
      tags:
        - read
        - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documentResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateDocument
      description: >
        An **updateDocument** operation will modify the information held about
        the specified [**Document**](#tag/documents). This operation is only
        available if the authenticated user has access to the
        [**Document**](#tag/documents).


        The **updateDocument** operation returns a JSON object representing the
        modified [**Document**](#tag/documents).
      tags:
        - update
        - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documentResponse'
              examples:
                response:
                  value:
                    data:
                      id: '25'
                      type: documents
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        title: This Document
                        description: A report about the thing that happened
                        license: null
                        latest_version: 1
                        tags: null
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/documents/25?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:27:09.000Z'
                        updated_at: '2018-04-27T14:27:15.000Z'
                        content_blobs:
                          - original_filename: file-17
                            url: null
                            md5sum: 443130e29a37e34e439a5b391efd1d42
                            sha1sum: 3da9d44ef741dda15ef1194e949f6c3b02c597bd
                            content_type: application/pdf
                            link: >-
                              http://localhost:3000/documents/25/content_blobs/59
                            size: 9
                        other_creators: null
                      relationships:
                        creators:
                          data:
                            - id: '262'
                              type: people
                        submitter:
                          data:
                            - id: '261'
                              type: people
                        people:
                          data:
                            - id: '261'
                              type: people
                            - id: '262'
                              type: people
                        projects:
                          data:
                            - id: '400'
                              type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data: []
                      links:
                        self: /documents/25?version=1
                      meta:
                        created: '2018-04-27T14:27:09.000Z'
                        modified: '2018-04-27T14:27:12.000Z'
                        api_version: '0.1'
                        uuid: fde626a0-2c54-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentPatch'
        description: The document to patch.
    delete:
      operationId: deleteDocument
      description: >
        A **deleteDocument** operation will delete the specified
        [**Document**](#tag/documents), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - documents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/documents/{id}/content_blobs/{blob_id}':
    put:
      operationId: uploadDocumentContent
      description: Description of Document Content upload
      parameters:
        - name: id
          in: path
          required: true
          description: The document content to upload
          schema:
            type: integer
            default: 1152
        - name: blob_id
          in: path
          required: true
          description: The content identifier to upload
          schema:
            type: integer
            default: 1831
      tags:
        - upload
        - documents
      responses:
        '200':
          description: Success
      requestBody:
        $ref: '#/components/requestBodies/uploadDataFileContentBlobcontent'
  '/documents/{id}/content_blobs/{blob_id}/download':
    parameters:
      - name: id
        in: path
        required: true
        description: The document to fetch
        schema:
          type: integer
          default: 1152
      - name: blob_id
        in: path
        required: true
        description: The blob to download
        schema:
          type: integer
          default: 1831
    get:
      operationId: downloadDocumentContent
      description: Description of Document Content download
      tags:
        - download
        - documents
      responses:
        '200':
          description: Success
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /events:
    get:
      operationId: listEvents
      description: >
        The **listEvents** operation returns a JSON object containing a list of
        all the [**Events**](#tag/events) to which the authenticated user has
        accesss.
      tags:
        - list
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: events
                        attributes:
                          title: SysMO Conference 2011
                        links:
                          self: /events/1
                      - id: '2'
                        type: events
                        attributes:
                          title: 'All Hands SySMO PALs  meeting '
                        links:
                          self: /events/2
                      - id: '4'
                        type: events
                        attributes:
                          title: SilicoTryp student & post-doc meeting
                        links:
                          self: /events/4
                      - id: '5'
                        type: events
                        attributes:
                          title: Bacell-meeting 1109-Groningen
                        links:
                          self: /events/5
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createEvent
      description: >
        A **createEvent** operation creates a new instance of a
        [**Event**](#tag/events). The instance is populated with the content of
        the body of the API call.


        The **createEvent** operation returns a JSON object representing the
        newly created [**Event**](#tag/events) and redirects to its URL.
      tags:
        - create
        - events
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventResponse'
              examples:
                response:
                  value:
                    data:
                      id: '3'
                      type: events
                      attributes:
                        policy:
                          access: view
                          permissions:
                            - resource:
                                id: '242'
                                type: projects
                              access: edit
                        title: A Maximal Event
                        description: This is the description
                        url: 'http://www.example.com/events/123'
                        address: Sofienstr 2
                        city: Heidelberg
                        country: Germany
                        start_date: '2017-01-01T00:20:00.000Z'
                        end_date: '2017-01-01T00:22:00.000Z'
                      relationships:
                        submitter:
                          data:
                            - id: '177'
                              type: people
                        projects:
                          data:
                            - id: '242'
                              type: projects
                        data_files:
                          data:
                            - id: '4'
                              type: data_files
                        publications:
                          data:
                            - id: '4'
                              type: publications
                        presentations:
                          data:
                            - id: '1'
                              type: presentations
                      links:
                        self: /events/3
                      meta:
                        created: '2018-04-27T14:25:05.300Z'
                        modified: '2018-04-27T14:25:05.300Z'
                        api_version: '0.1'
                        uuid: b410eb70-2c54-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventPost'
        description: The event to create.
  '/events/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: The event to fetch
        schema:
          type: integer
          default: 75
    get:
      operationId: readEvent
      description: >
        A **readEvent** operation will return information about the
        [Event](#tag/events) identified, provided the authenticated user has
        access to it.


        The **readEvent** operation returns a JSON object representing the
        [**Event**](#tag/events).
      tags:
        - read
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateEvent
      description: >
        An **updateEvent** operation will modify the information held about the
        specified [**Event**](#tag/events). This operation is only available if
        the authenticated user has access to the [**Event**](#tag/events).


        The **updateEvent** operation returns a JSON object representing the
        modified [**Event**](#tag/events).
      tags:
        - update
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventResponse'
              examples:
                response:
                  value:
                    data:
                      id: '14'
                      type: events
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        title: An Event
                        description: A thing that will happen
                        url: null
                        address: null
                        city: null
                        country: null
                        start_date: '2018-04-27T14:24:49.000Z'
                        end_date: '2018-04-28T14:24:49.000Z'
                      relationships:
                        submitter:
                          data:
                            - id: '205'
                              type: people
                        projects:
                          data:
                            - id: '310'
                              type: projects
                        data_files:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                      links:
                        self: /events/14
                      meta:
                        created: '2018-04-27T14:25:29.000Z'
                        modified: '2018-04-27T14:25:30.000Z'
                        api_version: '0.1'
                        uuid: c2d344b0-2c54-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventPatch'
        description: The event to update.
    delete:
      operationId: deleteEvent
      description: >
        A **deleteEvent** operation will delete the specified
        [**Event**](#tag/events), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /institutions:
    get:
      operationId: listInstitutions
      description: >
        The **listInstitutions** operation returns a JSON object containing a
        list of all the [**Institutions**](#tag/institutions) to which the
        authenticated user has accesss.
      tags:
        - list
        - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/institutionsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: institutions
                        attributes:
                          title: Institute of Physiology Academy of Sciences
                        links:
                          self: /institutions/1
                      - id: '2'
                        type: institutions
                        attributes:
                          title: Autonomous University of Barcelona
                        links:
                          self: /institutions/2
                      - id: '3'
                        type: institutions
                        attributes:
                          title: CSIC Granada
                        links:
                          self: /institutions/3
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createInstitution
      description: >
        A **createInstitution** operation creates a new instance of a
        [**Institution**](#tag/institutions). The instance is populated with the
        content of the body of the API call.


        The **createInstitution** operation returns a JSON object representing
        the newly created [**Institution**](#tag/institutions) and redirects to
        its URL.
      tags:
        - create
        - institutions
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/institutionResponse'
              examples:
                response:
                  value:
                    data:
                      id: '1063'
                      type: institutions
                      attributes:
                        avatar: null
                        title: 'Post An Institution: 886 Max'
                        country: Brazil
                        country_code: br
                        city: Manchester
                        address: >-
                          Manchester Centre for Integrative Systems Biology,
                          MIB/CEAS, The University of Manchester Faraday
                          Building, Sackville Street, Manchester M60 1QD United
                          Kingdom
                        web_page: 'http://www.mib.ac.uk/'
                      relationships:
                        people:
                          data: []
                        projects:
                          data: []
                      links:
                        self: /institutions/1063
                      meta:
                        created: '2018-04-27T14:38:14.497Z'
                        modified: '2018-04-27T14:38:14.497Z'
                        api_version: '0.1'
                        uuid: 8a81b740-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/institutionPost'
        description: The institution to create.
  '/institutions/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The institution to fetch, patch or delete'
        schema:
          type: integer
          default: 142
    get:
      operationId: readInstitution
      description: >
        A **readInstitution** operation will return information about the
        [Institution](#tag/institutions) identified, provided the authenticated
        user has access to it.


        The **readInstitution** operation returns a JSON object representing the
        [**Institution**](#tag/institutions).
      tags:
        - read
        - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/institutionResponse'
              examples:
                response:
                  value:
                    data:
                      id: '70'
                      type: institutions
                      attributes:
                        avatar: null
                        title: Some university
                        country: FR
                        city: null
                        address: null
                        web_page: null
                      relationships:
                        people:
                          data: []
                        projects:
                          data: []
                      links:
                        self: /institutions/70
                      meta:
                        created: '2018-04-12T09:46:10.695Z'
                        modified: '2018-04-12T09:46:10.695Z'
                        api_version: '0.1'
                        uuid: 414f8a70-2064-0136-17ed-54bed9b4c528
                        base_url: 'https://testing.sysmo-db.org'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateInstitution
      description: >
        An **updateInstitution** operation will modify the information held
        about the specified [**Institution**](#tag/institutions). This operation
        is only available if the authenticated user has access to the
        [**Institution**](#tag/institutions).


        The **updateInstitution** operation returns a JSON object representing
        the modified [**Institution**](#tag/institutions).
      tags:
        - update
        - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/institutionResponse'
              examples:
                response:
                  value:
                    data:
                      id: '1094'
                      type: institutions
                      attributes:
                        avatar: null
                        title: Patched institution
                        country: Germany
                        country_code: de
                        city: Heidelberg
                        address: NoName street 23
                        web_page: 'http://my.Institution.com'
                      relationships:
                        people:
                          data: []
                        projects:
                          data: []
                      links:
                        self: /institutions/1094
                      meta:
                        created: '2018-04-27T14:38:21.000Z'
                        modified: '2018-04-27T14:38:23.245Z'
                        api_version: '0.1'
                        uuid: 8e95da20-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/institutionPatch'
        description: The data with which to update the institution.
    delete:
      operationId: deleteInstitution
      description: >
        A **deleteInstitution** operation will delete the specified
        [**Institution**](#tag/institutions), if the authenticated user has
        sufficient access to it.
      tags:
        - delete
        - institutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /investigations:
    get:
      operationId: listInvestigations
      description: >
        The **listInvestigations** operation returns a JSON object containing a
        list of all the [**Investigations**](#tag/investigations) to which the
        authenticated user has accesss.
      tags:
        - list
        - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/investigationsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: investigations
                        attributes:
                          title: Creating data sheet template for 'omics data
                        links:
                          self: /investigations/1
                      - id: '2'
                        type: investigations
                        attributes:
                          title: >-
                            The transition from growing to non-growing Bacillus
                            subtilis cells
                        links:
                          self: /investigations/2
                      - id: '3'
                        type: investigations
                        attributes:
                          title: >-
                            Systems Biology of Clostridium acetobutylicum - a
                            possible answer to dwindling crude oil reserves
                        links:
                          self: /investigations/3
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createInvestigation
      description: >
        A **createInvestigation** operation creates a new instance of a
        [**Investigation**](#tag/investigations). The instance is populated with
        the content of the body of the API call.


        The **createInvestigation** operation returns a JSON object representing
        the newly created [**Investigation**](#tag/investigations) and redirects
        to its URL.
      tags:
        - create
        - investigations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/investigationResponse'
              examples:
                response:
                  value:
                    data:
                      id: '122'
                      type: investigations
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '809'
                                type: projects
                              access: manage
                            - resource:
                                id: '859'
                                type: projects
                              access: manage
                        title: A Maximal Investigation
                        description: This is a more complex investigation
                        other_creators: 'Max Blumenthal, Ed Snowden'
                      relationships:
                        creators:
                          data:
                            - id: '555'
                              type: people
                        submitter:
                          data:
                            - id: '555'
                              type: people
                        people:
                          data:
                            - id: '555'
                              type: people
                        projects:
                          data:
                            - id: '809'
                              type: projects
                            - id: '859'
                              type: projects
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                            - id: '23'
                              type: publications
                        documents:
                          data: []
                      links:
                        self: /investigations/122
                      meta:
                        created: '2018-04-27T14:31:15.345Z'
                        modified: '2018-04-27T14:31:15.859Z'
                        api_version: '0.1'
                        uuid: 90a27200-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/investigationPost'
        description: The investigation to create.
  '/investigations/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The investigation to fetch, patch or delete'
        schema:
          type: integer
          default: 56
    get:
      operationId: readInvestigation
      description: >
        A **readInvestigation** operation will return information about the
        [Investigation](#tag/investigations) identified, provided the
        authenticated user has access to it.


        The **readInvestigation** operation returns a JSON object representing
        the [**Investigation**](#tag/investigations).
      tags:
        - read
        - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/investigationResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateInvestigation
      description: >
        An **updateInvestigation** operation will modify the information held
        about the specified [**Investigation**](#tag/investigations). This
        operation is only available if the authenticated user has access to the
        [**Investigation**](#tag/investigations).


        The **updateInvestigation** operation returns a JSON object representing
        the modified [**Investigation**](#tag/investigations).
      tags:
        - update
        - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/investigationResponse'
              examples:
                response:
                  value:
                    data:
                      id: '196'
                      type: investigations
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '1293'
                                type: projects
                              access: manage
                            - resource:
                                id: '1343'
                                type: projects
                              access: manage
                        title: A Maximal Investigation
                        description: This is a more complex investigation
                        other_creators: 'Max Blumenthal, Ed Snowden'
                      relationships:
                        creators:
                          data:
                            - id: '838'
                              type: people
                        submitter:
                          data:
                            - id: '838'
                              type: people
                        people:
                          data:
                            - id: '838'
                              type: people
                        projects:
                          data:
                            - id: '1293'
                              type: projects
                            - id: '1343'
                              type: projects
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                            - id: '41'
                              type: publications
                        documents:
                          data: []
                      links:
                        self: /investigations/196
                      meta:
                        created: '2018-04-27T14:35:11.000Z'
                        modified: '2018-04-27T14:35:19.217Z'
                        api_version: '0.1'
                        uuid: 1d766430-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/investigationPatch'
        description: The investigation to patch.
    delete:
      operationId: deleteInvestigation
      description: >
        A **deleteInvestigation** operation will delete the specified
        [**Investigation**](#tag/investigations), if the authenticated user has
        sufficient access to it.
      tags:
        - delete
        - investigations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /models:
    get:
      operationId: listModels
      description: >
        The **listModels** operation returns a JSON object containing a list of
        all the [**Models**](#tag/models) to which the authenticated user has
        accesss.
      tags:
        - list
        - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '16'
                        type: models
                        attributes:
                          title: >-
                            Basic kinetic model of Escherichia coli's electron
                            transport chain (ETC)
                        links:
                          self: /models/16
                      - id: '18'
                        type: models
                        attributes:
                          title: >-
                            Development of agent-based models describing the
                            response of Escherichia coli to changes in oxygen
                            availability
                        links:
                          self: /models/18
                      - id: '20'
                        type: models
                        attributes:
                          title: sigB-response_starvation_shakeflask
                        links:
                          self: /models/20
                      - id: '21'
                        type: models
                        attributes:
                          title: Model for ED pathway in Sulfolobus solfataricus
                        links:
                          self: /models/21
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createModel
      description: >
        A **createModel** operation creates a new instance of a
        [**Model**](#tag/models). The instance is populated with the content of
        the body of the API call.


        The **createModel** operation returns a JSON object representing the
        newly created [**Model**](#tag/models) and redirects to its URL.
      tags:
        - create
        - models
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelResponse'
              examples:
                response:
                  value:
                    data:
                      id: '60'
                      type: models
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '1548'
                                type: projects
                              access: edit
                        title: A Maximal Model
                        description: This is the description
                        license: CC-BY-4.0
                        latest_version: 1
                        tags:
                          - tag1
                          - tag2
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/models/60?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:37:09.000Z'
                        updated_at: '2018-04-27T14:37:09.000Z'
                        content_blobs:
                          - original_filename: docs.pdf
                            url: null
                            md5sum: null
                            sha1sum: null
                            content_type: application/pdf
                            link: 'http://localhost:3000/models/60/content_blobs/230'
                            size: null
                          - original_filename: the_model.xml
                            url: null
                            md5sum: null
                            sha1sum: null
                            content_type: application/xml
                            link: 'http://localhost:3000/models/60/content_blobs/231'
                            size: null
                        other_creators: 'John Smith, Jane Smith'
                        model_type: Linear equations
                        model_format: SBML
                        environment: JWS Online
                      relationships:
                        creators:
                          data:
                            - id: '992'
                              type: people
                        submitter:
                          data:
                            - id: '991'
                              type: people
                        people:
                          data:
                            - id: '991'
                              type: people
                            - id: '992'
                              type: people
                        projects:
                          data:
                            - id: '1548'
                              type: projects
                        investigations:
                          data:
                            - id: '228'
                              type: investigations
                        studies:
                          data:
                            - id: '192'
                              type: studies
                        assays:
                          data:
                            - id: '153'
                              type: assays
                        publications:
                          data:
                            - id: '52'
                              type: publications
                      links:
                        self: /models/60?version=1
                      meta:
                        created: '2018-04-27T14:37:08.942Z'
                        modified: '2018-04-27T14:37:09.687Z'
                        api_version: '0.1'
                        uuid: 635ea0d0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelPost'
        description: The model to create.
  '/models/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The model to fetch, patch or delete'
        schema:
          type: integer
          default: 139
    get:
      operationId: readModel
      description: >
        A **readModel** operation will return information about the
        [Model](#tag/models) identified, provided the authenticated user has
        access to it.


        The **readModel** operation returns a JSON object representing the
        [**Model**](#tag/models).
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the model to get
          schema:
            type: integer
            default: 2
      tags:
        - read
        - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateModel
      description: >
        An **updateModel** operation will modify the information held about the
        specified [**Model**](#tag/models). This operation is only available if
        the authenticated user has access to the [**Model**](#tag/models).


        The **updateModel** operation returns a JSON object representing the
        modified [**Model**](#tag/models).
      tags:
        - update
        - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modelResponse'
              examples:
                response:
                  value:
                    data:
                      id: '71'
                      type: models
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        title: A Model 64
                        description: A simulation of a thing
                        license: null
                        latest_version: 1
                        tags: null
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/models/71?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:38:03.000Z'
                        updated_at: '2018-04-27T14:38:06.000Z'
                        content_blobs:
                          - original_filename: cronwright.xml
                            url: null
                            md5sum: 6b9283ed4ca52a081398b715aaeb8113
                            sha1sum: 454e4b6067f577b680bb8538772b12ebcdb6c4a4
                            content_type: text/xml
                            link: 'http://localhost:3000/models/71/content_blobs/242'
                            size: 5933
                        other_creators: null
                        model_type: null
                        model_format: SBML
                        environment: null
                      relationships:
                        creators:
                          data:
                            - id: '1036'
                              type: people
                        submitter:
                          data:
                            - id: '1035'
                              type: people
                        people:
                          data:
                            - id: '1035'
                              type: people
                            - id: '1036'
                              type: people
                        projects:
                          data:
                            - id: '1607'
                              type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data: []
                      links:
                        self: /models/71?version=1
                      meta:
                        created: '2018-04-27T14:38:03.000Z'
                        modified: '2018-04-27T14:38:04.000Z'
                        api_version: '0.1'
                        uuid: 83ed6ca0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelPatch'
        description: The model to patch.
    delete:
      operationId: deleteModel
      description: >
        A **deleteModel** operation will delete the specified
        [**Model**](#tag/models), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - models
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/models/{id}/content_blobs/{blob_id}':
    put:
      operationId: uploadModelContent
      description: Description of Model Content upload
      parameters:
        - name: id
          in: path
          required: true
          description: The model content to upload
          schema:
            type: integer
            default: 1152
        - name: blob_id
          in: path
          required: true
          description: The content identifier to upload
          schema:
            type: integer
            default: 1831
      tags:
        - upload
        - models
      responses:
        '200':
          description: Success
      requestBody:
        $ref: '#/components/requestBodies/uploadDataFileContentBlobcontent'
  '/models/{id}/content_blobs/{blob_id}/download':
    parameters:
      - name: id
        in: path
        required: true
        description: The model to fetch
        schema:
          type: integer
          default: 139
      - name: blob_id
        in: path
        required: true
        description: The blob to download
        schema:
          type: integer
          default: 1850
    get:
      operationId: downloadModelContent
      description: Description of Model Content download
      tags:
        - read
        - models
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
  /organisms:
    get:
      operationId: listOrganisms
      description: >
        The **listOrganisms** operation returns a JSON object containing a list
        of all the [**Organisms**](#tag/organisms) to which the authenticated
        user has accesss.
      tags:
        - list
        - organisms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organismsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1933753700'
                        type: organisms
                        attributes:
                          title: Acidithiobacillus caldus
                        links:
                          self: /organisms/1933753700
                      - id: '1933753714'
                        type: organisms
                        attributes:
                          title: Arabidopsis thaliana
                        links:
                          self: /organisms/1933753714
                      - id: '1933753716'
                        type: organisms
                        attributes:
                          title: Arabidopsis thaliana
                        links:
                          self: /organisms/1933753716
                      - id: '1933753708'
                        type: organisms
                        attributes:
                          title: Bacillus methanolicus
                        links:
                          self: /organisms/1933753708
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
  '/organisms/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The organism to fetch, patch or delete'
        schema:
          type: integer
          default: 1933753696
    get:
      operationId: readOrganism
      description: >
        A **readOrganism** operation will return information about the
        [Organism](#tag/organisms) identified, provided the authenticated user
        has access to it.


        The **readOrganism** operation returns a JSON object representing the
        [**Organism**](#tag/organisms).
      tags:
        - read
        - organisms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organismResponse'
              examples:
                response:
                  value:
                    data:
                      id: '1933753696'
                      type: organisms
                      attributes:
                        title: Plasmodium falciparum
                        concept_uri: 'http://purl.bioontology.org/ontology/NCBITAXON/5833'
                        ontology_id: NCBITAXON
                      relationships:
                        projects:
                          data:
                            - id: '17'
                              type: projects
                        assays:
                          data:
                            - id: '294'
                              type: assays
                            - id: '295'
                              type: assays
                            - id: '296'
                              type: assays
                        models:
                          data:
                            - id: '175'
                              type: models
                            - id: '176'
                              type: models
                            - id: '177'
                              type: models
                      links:
                        self: /organisms/1933753696
                      meta:
                        created: '2015-03-03T09:52:07.000Z'
                        modified: '2015-03-03T09:52:07.000Z'
                        api_version: '0.1'
                        uuid: 335d74e0-a6be-0135-6773-549f350973c0
                        base_url: 'https://fairdomhub.org'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /people:
    get:
      operationId: listPeople
      description: >
        The **listPeople** operation returns a JSON object containing a list of
        all the [**People**](#tag/people) to which the authenticated user has
        accesss.
      tags:
        - list
        - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peopleResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '364'
                        type: people
                        attributes:
                          title: Hadas Leonov
                        links:
                          self: /people/364
                      - id: '321'
                        type: people
                        attributes:
                          title: Finn Bacall
                        links:
                          self: /people/321
                      - id: '134'
                        type: people
                        attributes:
                          title: Stuart Owen
                        links:
                          self: /people/134
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://testing.sysmo-db.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createPerson
      description: >
        A **createPerson** operation creates a new instance of a
        [**Person**](#tag/people). The instance is populated with the content of
        the body of the API call.


        The **createPerson** operation returns a JSON object representing the
        newly created [**Person**](#tag/people) and redirects to its URL.
      tags:
        - create
        - people
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personResponse'
              examples:
                response:
                  value:
                    data:
                      id: '441'
                      type: people
                      attributes:
                        avatar: null
                        title: Post Last
                        description: A person with all possible details
                        first_name: Post
                        last_name: Last
                        web_page: 'http://www.website.com'
                        orcid: 'http://orcid.org/0000-0001-9842-9718'
                        mbox_sha1sum: d6b1a16fb3c8678069841a2e47f0f5bdd5103a6e
                        phone: 34-167-552266
                        skype_name: postedSkype
                        expertise:
                          - modeling
                          - programming
                        tools:
                          - CeriusII
                          - Gromacs
                          - Python
                        project_positions: null
                      relationships:
                        projects:
                          data: []
                        institutions:
                          data: []
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /people/441
                      meta:
                        created: '2018-04-27T14:29:10.153Z'
                        modified: '2018-04-27T14:29:10.153Z'
                        api_version: '0.1'
                        uuid: 460c1550-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personPost'
        description: The person to create.
  '/people/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The person to fetch, patch or delete'
        schema:
          type: integer
          default: 433
    get:
      operationId: readPerson
      description: >
        A **readPerson** operation will return information about the
        [Person](#tag/people) identified, provided the authenticated user has
        access to it.


        The **readPerson** operation returns a JSON object representing the
        [**Person**](#tag/people).
      tags:
        - read
        - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personResponse'
              examples:
                response:
                  value:
                    data:
                      id: '132'
                      type: people
                      attributes:
                        avatar: /people/132/avatars/4
                        title: Katy Wolstencroft
                        description: >-
                          I am a Research Fellow at the University of
                          Manchester, working in Bioinformatics and Computer
                          Science. I am also a guest researcher at the Vrije
                          Universiteit.My research interests include scientific
                          workflows, semantic discovery, and applying ontology
                          technologies to biological data
                        first_name: Katy
                        last_name: Wolstencroft
                        web_page: null
                        orcid: null
                        mbox_sha1sum: 3dabdf312876f4b139507ce80b36e872e10164ae
                        phone: '48229'
                        skype_name: null
                        expertise:
                          - Biochemistry
                          - Bioinformatics
                          - Data Management
                        tools:
                          - Data Management
                          - Databases
                          - Ontologies
                          - Taverna
                          - Transcriptomics
                          - Web services
                          - Workflows
                        project_positions: null
                      relationships:
                        projects:
                          data:
                            - id: '12'
                              type: projects
                            - id: '15'
                              type: projects
                        institutions:
                          data:
                            - id: '7'
                              type: institutions
                            - id: '62'
                              type: institutions
                        investigations:
                          data:
                            - id: '2'
                              type: investigations
                            - id: '4'
                              type: investigations
                        studies:
                          data:
                            - id: '4'
                              type: studies
                            - id: '7'
                              type: studies
                        assays:
                          data:
                            - id: '2'
                              type: assays
                            - id: '3'
                              type: assays
                            - id: '4'
                              type: assays
                            - id: '6'
                              type: assays
                            - id: '10'
                              type: assays
                            - id: '11'
                              type: assays
                            - id: '12'
                              type: assays
                            - id: '13'
                              type: assays
                        data_files:
                          data:
                            - id: '4'
                              type: data_files
                            - id: '5'
                              type: data_files
                            - id: '6'
                              type: data_files
                            - id: '8'
                              type: data_files
                            - id: '15'
                              type: data_files
                            - id: '17'
                              type: data_files
                        models:
                          data:
                            - id: '19'
                              type: models
                            - id: '20'
                              type: models
                        sops:
                          data:
                            - id: '13'
                              type: sops
                            - id: '15'
                              type: sops
                        publications:
                          data:
                            - id: '3'
                              type: publications
                            - id: '5'
                              type: publications
                            - id: '7'
                              type: publications
                            - id: '9'
                              type: publications
                            - id: '11'
                              type: publications
                            - id: '13'
                              type: publications
                            - id: '14'
                              type: publications
                            - id: '15'
                              type: publications
                            - id: '34'
                              type: publications
                            - id: '38'
                              type: publications
                            - id: '39'
                              type: publications
                        presentations:
                          data:
                            - id: '7'
                              type: presentations
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /people/132
                      meta:
                        created: '2009-01-15T12:24:02.000Z'
                        modified: '2014-04-09T11:24:47.000Z'
                        api_version: '0.1'
                        uuid: 7989c509-5ac4-47bf-b161-30193b131379
                        base_url: 'https://testing.sysmo-db.org'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updatePerson
      description: >
        An **updatePerson** operation will modify the information held about the
        specified [**Person**](#tag/people). This operation is only available if
        the authenticated user has access to the [**Person**](#tag/people).


        The **updatePerson** operation returns a JSON object representing the
        modified [**Person**](#tag/people).
      tags:
        - update
        - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personResponse'
              examples:
                response:
                  value:
                    data:
                      id: '472'
                      type: people
                      attributes:
                        avatar: null
                        title: Patched Name
                        description: A person with all possible details
                        first_name: Patched
                        last_name: Name
                        web_page: 'http://www.website.com'
                        orcid: 'http://orcid.org/0000-0001-9842-9718'
                        mbox_sha1sum: 5f9cd9691c643af7e4506ff02cdb6629b9bb880f
                        phone: 34-167-552266
                        skype_name: patchedSkype
                        expertise:
                          - modeling
                          - programming
                        tools:
                          - CeriusII
                          - Gromacs
                          - Python
                        project_positions:
                          - project_id: '676'
                            position_id: '1'
                            position_name: A Role
                      relationships:
                        projects:
                          data:
                            - id: '676'
                              type: projects
                        institutions:
                          data:
                            - id: '473'
                              type: institutions
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /people/472
                      meta:
                        created: '2018-04-27T14:29:35.000Z'
                        modified: '2018-04-27T14:29:39.205Z'
                        api_version: '0.1'
                        uuid: 552d8ab0-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personPatch'
        description: The data with which to update the person.
    delete:
      operationId: deletePerson
      description: >
        A **deletePerson** operation will delete the specified
        [**Person**](#tag/people), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - people
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /presentations:
    get:
      operationId: listPresentations
      description: >
        The **listPresentations** operation returns a JSON object containing a
        list of all the [**Presentations**](#tag/presentations) to which the
        authenticated user has accesss.
      tags:
        - list
        - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/presentationsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '2'
                        type: presentations
                        attributes:
                          title: >-
                            Feed-back regulation of the anabolic (ProB) and
                            osmoadaptive (ProJ) glutamate kinases: predicted
                            role of a flexible protein loop.
                        links:
                          self: /presentations/2
                      - id: '3'
                        type: presentations
                        attributes:
                          title: >-
                            Balancing the osmotic gradient: adaptation of the
                            cytoplasmic solute pool via de novo synthesis and
                            compatible solute uptake in response to
                            hyper-osmolarity.
                        links:
                          self: /presentations/3
                      - id: '4'
                        type: presentations
                        attributes:
                          title: >-
                            Towards system understanding of B. subtilis -
                            integrating fluxes and cellular components under
                            salt stress
                        links:
                          self: /presentations/4
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createPresentation
      description: >
        A **createPresentation** operation creates a new instance of a
        [**Presentation**](#tag/presentations). The instance is populated with
        the content of the body of the API call.


        The **createPresentation** operation returns a JSON object representing
        the newly created [**Presentation**](#tag/presentations) and redirects
        to its URL.
      tags:
        - create
        - presentations
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/presentationResponse'
              examples:
                response:
                  value:
                    data:
                      id: '36'
                      type: presentations
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '1836'
                                type: projects
                              access: edit
                        title: A Maximal Presentation
                        description: This is the description
                        license: CC-BY-4.0
                        latest_version: 1
                        tags:
                          - tag1
                          - tag2
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/presentations/36?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:40:02.000Z'
                        updated_at: '2018-04-27T14:40:02.000Z'
                        content_blobs:
                          - original_filename: a_pdf_file.pdf
                            url: null
                            md5sum: null
                            sha1sum: null
                            content_type: application/pdf
                            link: >-
                              http://localhost:3000/presentations/36/content_blobs/264
                            size: null
                        other_creators: 'John Smith, Jane Smith'
                      relationships:
                        creators:
                          data:
                            - id: '1206'
                              type: people
                        submitter:
                          data:
                            - id: '1205'
                              type: people
                        people:
                          data:
                            - id: '1205'
                              type: people
                            - id: '1206'
                              type: people
                        projects:
                          data:
                            - id: '1836'
                              type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data:
                            - id: '71'
                              type: publications
                        events:
                          data:
                            - id: '54'
                              type: events
                      links:
                        self: /presentations/36?version=1
                      meta:
                        created: '2018-04-27T14:40:02.790Z'
                        modified: '2018-04-27T14:40:03.363Z'
                        api_version: '0.1'
                        uuid: caf4e8a0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/presentationPost'
        description: The presentation to create.
  '/presentations/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The presentation to fetch, patch or delete'
        schema:
          type: integer
          default: 253
    get:
      operationId: readPresentation
      description: >
        A **readPresentation** operation will return information about the
        [Presentation](#tag/presentations) identified, provided the
        authenticated user has access to it.


        The **readPresentation** operation returns a JSON object representing
        the [**Presentation**](#tag/presentations).
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the presentation to get
          schema:
            type: integer
            default: 1
      tags:
        - read
        - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/presentationResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updatePresentation
      description: >
        An **updatePresentation** operation will modify the information held
        about the specified [**Presentation**](#tag/presentations). This
        operation is only available if the authenticated user has access to the
        [**Presentation**](#tag/presentations).


        The **updatePresentation** operation returns a JSON object representing
        the modified [**Presentation**](#tag/presentations).
      tags:
        - update
        - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/presentationResponse'
              examples:
                response:
                  value:
                    data:
                      id: '47'
                      type: presentations
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        title: A Presentation 44
                        description: A report about the thing that happened
                        license: null
                        latest_version: 1
                        tags: null
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/presentations/47?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:40:42.000Z'
                        updated_at: '2018-04-27T14:40:47.000Z'
                        content_blobs:
                          - original_filename: test.pdf
                            url: null
                            md5sum: 5b153092cb9837ee9dc6665518e68047
                            sha1sum: da439390f7d1cd5e459c008103c4f1582658888a
                            content_type: application/pdf
                            link: >-
                              http://localhost:3000/presentations/47/content_blobs/275
                            size: 10
                        other_creators: null
                      relationships:
                        creators:
                          data:
                            - id: '1250'
                              type: people
                        submitter:
                          data:
                            - id: '1249'
                              type: people
                        people:
                          data:
                            - id: '1249'
                              type: people
                            - id: '1250'
                              type: people
                        projects:
                          data:
                            - id: '1895'
                              type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data: []
                        events:
                          data: []
                      links:
                        self: /presentations/47?version=1
                      meta:
                        created: '2018-04-27T14:40:42.000Z'
                        modified: '2018-04-27T14:40:43.000Z'
                        api_version: '0.1'
                        uuid: e27753f0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/presentationPatch'
        description: The presentation to update.
    delete:
      operationId: deletePresentation
      description: >
        A **deletePresentation** operation will delete the specified
        [**Presentation**](#tag/presentations), if the authenticated user has
        sufficient access to it.
      tags:
        - delete
        - presentations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/presentations/{id}/content_blobs/{blob_id}':
    put:
      operationId: uploadPresentationContent
      description: Description of Presentation Content upload
      parameters:
        - name: id
          in: path
          required: true
          description: The presentation content to upload
          schema:
            type: integer
            default: 1152
        - name: blob_id
          in: path
          required: true
          description: The content identifier to upload
          schema:
            type: integer
            default: 1831
      tags:
        - upload
        - presentations
      responses:
        '200':
          description: Success
      requestBody:
        $ref: '#/components/requestBodies/uploadDataFileContentBlobcontent'
  '/presentations/{id}/content_blobs/{blob_id}/download':
    parameters:
      - name: id
        in: path
        required: true
        description: The presentation to fetch
        schema:
          type: integer
          default: 377
      - name: blob_id
        in: path
        required: true
        description: The blob to download
        schema:
          type: integer
          default: 3215
    get:
      operationId: downloadPresentationContent
      description: Description of Presentation Content download
      tags:
        - download
        - presentations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /programmes:
    get:
      operationId: listProgrammes
      description: >
        The **listProgrammes** operation returns a JSON object containing a list
        of all the [**Programmes**](#tag/programmes) to which the authenticated
        user has accesss.
      tags:
        - list
        - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/programmesResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: programmes
                        attributes:
                          title: SysMO
                        links:
                          self: /programmes/1
                      - id: '2'
                        type: programmes
                        attributes:
                          title: 'e:Bio'
                        links:
                          self: /programmes/2
                      - id: '3'
                        type: programmes
                        attributes:
                          title: >-
                            SARCHI: Mechanistic modelling of health and
                            epidemiology
                        links:
                          self: /programmes/3
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createProgramme
      description: >
        A **createProgramme** operation creates a new instance of a
        [**Programme**](#tag/programmes). The instance is populated with the
        content of the body of the API call.


        The **createProgramme** operation returns a JSON object representing the
        newly created [**Programme**](#tag/programmes) and redirects to its URL.
      tags:
        - create
        - programmes
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/programmeResponse'
              examples:
                response:
                  value:
                    data:
                      id: '3'
                      type: programmes
                      attributes:
                        avatar: null
                        title: Post programme Max
                        description: A very exciting programme
                        web_page: 'http://www.synbiochem.co.uk'
                        funding_details: Someone is funding this for me
                        funding_codes:
                          - BMBF
                          - DFG
                      relationships:
                        administrators:
                          data:
                            - id: '486'
                              type: people
                            - id: '487'
                              type: people
                        people:
                          data: []
                        projects:
                          data:
                            - id: '692'
                              type: projects
                        institutions:
                          data: []
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /programmes/3
                      meta:
                        created: '2018-04-27T14:29:53.193Z'
                        modified: '2018-04-27T14:29:53.193Z'
                        api_version: '0.1'
                        uuid: 5fb40220-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/programmePost'
        description: The programme to create.
  '/programmes/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The programme to fetch, patch or delete'
        schema:
          type: integer
          default: 3
    get:
      operationId: readProgramme
      description: >
        A **readProgramme** operation will return information about the
        [Programme](#tag/programmes) identified, provided the authenticated user
        has access to it.


        The **readProgramme** operation returns a JSON object representing the
        [**Programme**](#tag/programmes).
      tags:
        - read
        - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/programmeResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateProgramme
      description: >
        An **updateProgramme** operation will modify the information held about
        the specified [**Programme**](#tag/programmes). This operation is only
        available if the authenticated user has access to the
        [**Programme**](#tag/programmes).


        The **updateProgramme** operation returns a JSON object representing the
        modified [**Programme**](#tag/programmes).
      tags:
        - update
        - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/programmeResponse'
              examples:
                response:
                  value:
                    data:
                      id: '18'
                      type: programmes
                      attributes:
                        avatar: null
                        title: Changed title
                        description: A very exciting programme patched!
                        web_page: 'http://www.synbiochem.co.uk'
                        funding_details: Someone ELSE is funding this for me
                        funding_codes:
                          - AVH
                      relationships:
                        administrators:
                          data:
                            - id: '510'
                              type: people
                        people:
                          data: []
                        projects:
                          data:
                            - id: '731'
                              type: projects
                        institutions:
                          data: []
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /programmes/18
                      meta:
                        created: '2018-04-27T14:30:16.000Z'
                        modified: '2018-04-27T14:30:19.653Z'
                        api_version: '0.1'
                        uuid: 6d7b2ed0-2c55-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/programmePatch'
        description: The data with which to update the programme.
    delete:
      operationId: deleteProgramme
      description: >
        A **deleteProgramme** operation will delete the specified
        [**Programme**](#tag/programmes), if the authenticated user has
        sufficient access to it.
      tags:
        - delete
        - programmes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /projects:
    get:
      operationId: listProjects
      description: >
        The **listProjects** operation returns a JSON object containing a list
        of all the [**Projects**](#tag/projects) to which the authenticated user
        has accesss.
      tags:
        - list
        - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: projects
                        attributes:
                          title: BaCell-SysMO
                        links:
                          self: /projects/1
                      - id: '2'
                        type: projects
                        attributes:
                          title: COSMIC
                        links:
                          self: /projects/2
                      - id: '3'
                        type: projects
                        attributes:
                          title: SUMO
                        links:
                          self: /projects/3
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createProject
      description: >
        A **createProject** operation creates a new instance of a
        [**Project**](#tag/projects). The instance is populated with the content
        of the body of the API call.


        The **createProject** operation returns a JSON object representing the
        newly created [**Project**](#tag/projects) and redirects to its URL.
      tags:
        - create
        - projects
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectResponse'
              examples:
                response:
                  value:
                    data:
                      id: '1926'
                      type: projects
                      attributes:
                        avatar: null
                        title: Post Project Max
                        description: A Taverna project
                        web_page: 'http://www.taverna.org.uk'
                        wiki_page: 'http://www.mygrid.org.uk'
                        default_license: Other (Open)
                        default_policy:
                          access: no_access
                          permissions:
                            - resource:
                                id: '1273'
                                type: people
                              access: manage
                            - resource:
                                id: '1924'
                                type: projects
                              access: download
                            - resource:
                                id: '1297'
                                type: institutions
                              access: view
                      relationships:
                        organisms:
                          data:
                            - id: '5'
                              type: organisms
                        people:
                          data: []
                        institutions:
                          data: []
                        programmes:
                          data:
                            - id: '27'
                              type: programmes
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /projects/1926
                      meta:
                        created: '2018-04-27T14:41:00.267Z'
                        modified: '2018-04-27T14:41:00.267Z'
                        api_version: '0.1'
                        uuid: ed4723e0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectPost'
        description: The project to create.
  '/projects/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The project to fetch, patch or delete'
        schema:
          type: integer
          default: 17
    get:
      operationId: readProject
      description: >
        A **readProject** operation will return information about the
        [Project](#tag/projects) identified, provided the authenticated user has
        access to it.


        The **readProject** operation returns a JSON object representing the
        [**Project**](#tag/projects).
      tags:
        - read
        - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateProject
      description: >
        An **updateProject** operation will modify the information held about
        the specified [**Project**](#tag/projects). This operation is only
        available if the authenticated user has access to the
        [**Project**](#tag/projects).


        The **updateProject** operation returns a JSON object representing the
        modified [**Project**](#tag/projects).
      tags:
        - update
        - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectResponse'
              examples:
                response:
                  value:
                    data:
                      id: '1953'
                      type: projects
                      attributes:
                        avatar: null
                        title: Updated Project
                        description: with a new description!
                        web_page: 'http://www.taverna.org.uk'
                        wiki_page: 'http://www.mygrid.org.uk'
                        default_license: Other (Open)
                        default_policy:
                          access: no_access
                          permissions:
                            - resource:
                                type: people
                                id: '1296'
                              access: manage
                            - resource:
                                type: projects
                                id: '1956'
                              access: download
                            - resource:
                                type: institutions
                                id: '1321'
                              access: view
                      relationships:
                        organisms:
                          data:
                            - id: '6'
                              type: organisms
                        people:
                          data: []
                        institutions:
                          data: []
                        programmes:
                          data:
                            - id: '28'
                              type: programmes
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                        documents:
                          data: []
                      links:
                        self: /projects/1953
                      meta:
                        created: '2018-04-27T14:41:23.000Z'
                        modified: '2018-04-27T14:41:26.457Z'
                        api_version: '0.1'
                        uuid: fadec2a0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectPatch'
        description: The data with which to update the project.
    delete:
      operationId: deleteProject
      description: >
        A **deleteProject** operation will delete the specified
        [**Project**](#tag/projects), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /publications:
    get:
      operationId: listPublications
      description: >
        The **listPublications** operation returns a JSON object containing a
        list of all the [**Publications**](#tag/publications) to which the
        authenticated user has accesss.
      tags:
        - list
        - publications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicationsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: publications
                        attributes:
                          title: >-
                            Quantitative proteomic analysis of Sulfolobus
                            solfataricus membrane proteins
                        links:
                          self: /publications/1
                      - id: '2'
                        type: publications
                        attributes:
                          title: >-
                            Genome-scale reconstruction and analysis of the
                            Pseudomonas putida KT2440 metabolic network
                            facilitates applications in biotechnology
                        links:
                          self: /publications/2
                      - id: '4'
                        type: publications
                        attributes:
                          title: >-
                            Functional analysis of new transporters involved in
                            stress tolerance inPseudomonas putidaDOT-T1E
                        links:
                          self: /publications/4
                      - id: '5'
                        type: publications
                        attributes:
                          title: >-
                            Identification and characterization of the PhhR
                            regulon inPseudomonas putida
                        links:
                          self: /publications/5
                      - id: '7'
                        type: publications
                        attributes:
                          title: >-
                            Metabolic modeling and analysis of the metabolic
                            switch in Streptomyces coelicolor
                        links:
                          self: /publications/7
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
  '/publications/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The publication to fetch, patch or delete'
        schema:
          type: integer
          default: 240
    get:
      operationId: readPublication
      description: >
        A **readPublication** operation will return information about the
        [Publication](#tag/publications) identified, provided the authenticated
        user has access to it.


        The **readPublication** operation returns a JSON object representing the
        [**Publication**](#tag/publications).
      tags:
        - read
        - publications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicationResponse'
              examples:
                response:
                  value:
                    data:
                      id: '240'
                      type: publications
                      attributes:
                        title: >-
                          Construction and validation of a detailed kinetic
                          model of glycolysis in
                                        Plasmodium falciparum
                        journal: FEBS J
                        published_date: '2015-04-01'
                        doi: 10.1111/febs.13237
                        pubmed_id: null
                        abstract: >-
                          The enzymes in the Embden–Meyerhof–Parnas pathway of
                          Plasmodium falciparum trophozoites were kinetically
                          characterized and their integrated activities analyzed
                          in a mathematical model. For validation of the model,
                          we compared model predictions for steady-state fluxes
                          and metabolite concentrations of the hexose phosphates
                          with experimental values for intact parasites. The
                          model, which is completely based on kinetic parameters
                          that were measured for the individual enzymes, gives
                          an accurate prediction of the steady-state fluxes and
                          intermediate concentrations. This is the first
                          detailed kinetic model for glucose metabolism in P.
                          falciparum, one of the most prolific malaria-causing
                          protozoa, and the high predictive power of the model
                          makes it a strong tool for future drug target
                          identification studies. The modelling workflow is
                          transparent and reproducible, and completely
                          documented in the SEEK platform, where all
                          experimental data and model files are available for
                          download.
                        citation: 'FEBS J 282(8) : 1481'
                        link_to_pub: 'https://www.ncbi.nlm.nih.gov/pubmed/'
                        authors:
                          - Gerald Penkler
                          - Francois du Toit
                          - Waldo Adams
                          - Marina Rautenbach
                          - Daniel C. Palm
                          - Dawie Van Niekerk
                          - Jacky Snoep
                      relationships:
                        people:
                          data:
                            - id: '49'
                              type: people
                            - id: '411'
                              type: people
                        projects:
                          data:
                            - id: '17'
                              type: projects
                        investigations:
                          data:
                            - id: '56'
                              type: investigations
                        studies:
                          data:
                            - id: '118'
                              type: studies
                            - id: '119'
                              type: studies
                            - id: '138'
                              type: studies
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        publications:
                          data: []
                        presentations:
                          data: []
                        events:
                          data: []
                      links:
                        self: /publications/240
                      meta:
                        created: '2015-07-09T15:30:55.000Z'
                        modified: '2016-09-19T13:34:11.000Z'
                        api_version: '0.1'
                        uuid: 69bebf90-087d-0133-36e3-549f350973c0
                        base_url: 'https://fairdomhub.org'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /sample_types:
    get:
      operationId: listSampleTypes
      description: >
        The **listSampleTypes** operation returns a JSON object containing a
        list of all the [**SampleTypes**](#tag/sampleTypes) to which the
        authenticated user has accesss.
      tags:
        - list
        - sampleTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sampleTypesResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: sample_types
                        attributes:
                          title: SysMO Biosample
                        links:
                          self: /sample_types/1
                      - id: '2'
                        type: sample_types
                        attributes:
                          title: YEAST_chemostat_steady_state_culture
                        links:
                          self: /sample_types/2
                      - id: '3'
                        type: sample_types
                        attributes:
                          title: chemostat_yeast_anaerobic
                        links:
                          self: /sample_types/3
                      - id: '4'
                        type: sample_types
                        attributes:
                          title: test for SysMetEx1
                        links:
                          self: /sample_types/4
                      - id: '8'
                        type: sample_types
                        attributes:
                          title: SysMetEx_Cell_Culture
                        links:
                          self: /sample_types/8
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
  /sops:
    get:
      operationId: listSops
      description: >
        The **listSops** operation returns a JSON object containing a list of
        all the [**Sops**](#tag/sops) to which the authenticated user has
        accesss.
      tags:
        - list
        - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sopsResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '4'
                        type: sops
                        attributes:
                          title: Fluorescent probe labeling for microarrays
                        links:
                          self: /sops/4
                      - id: '5'
                        type: sops
                        attributes:
                          title: >-
                            Guidelines for Writing Standard Operating Procedures
                            (SOP)
                        links:
                          self: /sops/5
                      - id: '16'
                        type: sops
                        attributes:
                          title: >-
                            Flash-labeling of tetra-cyc-modified proteins in
                            E.coli
                        links:
                          self: /sops/16
                      - id: '17'
                        type: sops
                        attributes:
                          title: >-
                            Measuring the mobility of soluble and aggergating
                            protein using fluorescence recovery after
                            photobleaching (FRAP) in normal and osmotically
                            stressed cells.
                        links:
                          self: /sops/17
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createSop
      description: >
        A **createSop** operation creates a new instance of a
        [**Sop**](#tag/sops). The instance is populated with the content of the
        body of the API call.


        The **createSop** operation returns a JSON object representing the newly
        created [**Sop**](#tag/sops) and redirects to its URL.
      tags:
        - create
        - sops
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sopResponse'
              examples:
                response:
                  value:
                    data:
                      id: '39'
                      type: sops
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '1973'
                                type: projects
                              access: edit
                        title: A Maximal SOP
                        description: This is the description
                        license: CC-BY-4.0
                        latest_version: 1
                        tags:
                          - tag1
                          - tag2
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/sops/39?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:41:44.000Z'
                        updated_at: '2018-04-27T14:41:44.000Z'
                        content_blobs:
                          - original_filename: a_pdf_file.pdf
                            url: null
                            md5sum: null
                            sha1sum: null
                            content_type: application/pdf
                            link: 'http://localhost:3000/sops/39/content_blobs/286'
                            size: null
                        other_creators: 'John Smith, Jane Smith'
                      relationships:
                        creators:
                          data:
                            - id: '1308'
                              type: people
                        submitter:
                          data:
                            - id: '1307'
                              type: people
                        people:
                          data:
                            - id: '1307'
                              type: people
                            - id: '1308'
                              type: people
                        projects:
                          data:
                            - id: '1973'
                              type: projects
                        investigations:
                          data:
                            - id: '283'
                              type: investigations
                        studies:
                          data:
                            - id: '235'
                              type: studies
                        assays:
                          data:
                            - id: '171'
                              type: assays
                        publications:
                          data: []
                      links:
                        self: /sops/39?version=1
                      meta:
                        created: '2018-04-27T14:41:43.969Z'
                        modified: '2018-04-27T14:41:44.691Z'
                        api_version: '0.1'
                        uuid: 074effb0-2c57-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sopPost'
        description: The sop to create.
  '/sops/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The SOP to fetch, patch or delete'
        schema:
          type: integer
          default: 203
    get:
      operationId: readSop
      description: >
        A **readSop** operation will return information about the
        [Sop](#tag/sops) identified, provided the authenticated user has access
        to it.


        The **readSop** operation returns a JSON object representing the
        [**Sop**](#tag/sops).
      parameters:
        - name: version
          in: query
          required: true
          description: The version of the sop to get
          schema:
            type: integer
            default: 1
      tags:
        - read
        - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sopResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateSop
      description: >
        An **updateSop** operation will modify the information held about the
        specified [**Sop**](#tag/sops). This operation is only available if the
        authenticated user has access to the [**Sop**](#tag/sops).


        The **updateSop** operation returns a JSON object representing the
        modified [**Sop**](#tag/sops).
      tags:
        - update
        - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sopResponse'
              examples:
                response:
                  value:
                    data:
                      id: '49'
                      type: sops
                      attributes:
                        policy:
                          access: manage
                          permissions: []
                        title: This Sop
                        description: Protocol
                        license: null
                        latest_version: 1
                        tags: null
                        versions:
                          - version: 1
                            revision_comments: null
                            url: 'http://localhost:3000/sops/49?version=1'
                        version: 1
                        revision_comments: null
                        created_at: '2018-04-27T14:42:16.000Z'
                        updated_at: '2018-04-27T14:42:21.000Z'
                        content_blobs:
                          - original_filename: file-97
                            url: null
                            md5sum: 479e5c9c6807e8de11ab91b273c0eae7
                            sha1sum: 2977f9e45eb27e83c8389ea18e663ab7d840b19c
                            content_type: application/pdf
                            link: 'http://localhost:3000/sops/49/content_blobs/296'
                            size: 10
                        other_creators: null
                      relationships:
                        creators:
                          data:
                            - id: '1333'
                              type: people
                        submitter:
                          data:
                            - id: '1332'
                              type: people
                        people:
                          data:
                            - id: '1332'
                              type: people
                            - id: '1333'
                              type: people
                        projects:
                          data:
                            - id: '2010'
                              type: projects
                        investigations:
                          data: []
                        studies:
                          data: []
                        assays:
                          data: []
                        publications:
                          data: []
                      links:
                        self: /sops/49?version=1
                      meta:
                        created: '2018-04-27T14:42:15.000Z'
                        modified: '2018-04-27T14:42:17.000Z'
                        api_version: '0.1'
                        uuid: 1a593b30-2c57-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sopPatch'
        description: The sop to update.
    delete:
      operationId: deleteSop
      description: >
        A **deleteSop** operation will delete the specified
        [**Sop**](#tag/sops), if the authenticated user has sufficient access to
        it.
      tags:
        - delete
        - sops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/sops/{id}/content_blobs/{blob_id}':
    put:
      operationId: uploadSopContent
      description: Description of Sop Content upload
      parameters:
        - name: id
          in: path
          required: true
          description: The sop content to upload
          schema:
            type: integer
            default: 1152
        - name: blob_id
          in: path
          required: true
          description: The content identifier to upload
          schema:
            type: integer
            default: 1831
      tags:
        - upload
        - sops
      responses:
        '200':
          description: Success
      requestBody:
        $ref: '#/components/requestBodies/uploadDataFileContentBlobcontent'
  '/sops/{id}/content_blobs/{blob_id}/download':
    parameters:
      - name: id
        in: path
        required: true
        description: The SOP to fetch
        schema:
          type: integer
          default: 203
      - name: blob_id
        in: path
        required: true
        description: The blob to download
        schema:
          type: integer
          default: 1806
    get:
      operationId: downloadSopContent
      description: Description of Sop Content download
      tags:
        - download
        - sops
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /studies:
    get:
      operationId: listStudies
      description: >
        The **listStudys** operation returns a JSON object containing a list of
        all the Studys to which the authenticated user has accesss.
      tags:
        - list
        - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studiesResponse'
              examples:
                response:
                  value:
                    data:
                      - id: '1'
                        type: studies
                        attributes:
                          title: Creating template for metabolomics data
                        links:
                          self: /studies/1
                      - id: '2'
                        type: studies
                        attributes:
                          title: Biphase Batch Fermentation(2009/02/04)
                        links:
                          self: /studies/2
                      - id: '3'
                        type: studies
                        attributes:
                          title: >-
                            Investigation of different pH values for metabolic
                            shift
                        links:
                          self: /studies/3
                    jsonapi:
                      version: '1.0'
                    meta:
                      base_url: 'https://fairdomhub.org'
                      api_version: '0.1'
        '501':
          $ref: '#/components/responses/NotImplemented'
    post:
      operationId: createStudy
      description: >
        A **createStudy** operation creates a new instance of a
        [**Study**](#tag/studys). The instance is populated with the content of
        the body of the API call.


        The **createStudy** operation returns a JSON object representing the
        newly created [**Study**](#tag/studys) and redirects to its URL.
      tags:
        - create
        - studies
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyResponse'
              examples:
                response:
                  value:
                    data:
                      id: '208'
                      type: studies
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '1672'
                                type: projects
                              access: view
                        title: A Maximal Study
                        description: The Study of many things
                        experimentalists: Wet lab people
                        other_creators: Marie Curie
                        person_responsible_id: '1092'
                      relationships:
                        creators:
                          data:
                            - id: '1092'
                              type: people
                        submitter:
                          data:
                            - id: '1092'
                              type: people
                        people:
                          data:
                            - id: '1092'
                              type: people
                        projects:
                          data:
                            - id: '1672'
                              type: projects
                        investigation:
                          data:
                            id: '243'
                            type: investigations
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                            - id: '64'
                              type: publications
                        documents:
                          data: []
                      links:
                        self: /studies/208
                      meta:
                        created: '2018-04-27T14:38:32.768Z'
                        modified: '2018-04-27T14:38:33.012Z'
                        api_version: '0.1'
                        uuid: 956368a0-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyPost'
        description: The study to create.
  '/studies/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: 'The study to fetch, patch or delete'
        schema:
          type: integer
          default: 138
    get:
      operationId: readStudy
      description: >
        A **readStudy** operation will return information about the
        [Study](#tag/studys) identified, provided the authenticated user has
        access to it.


        The **readStudy** operation returns a JSON object representing the
        [**Study**](#tag/studys).
      tags:
        - read
        - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: updateStudy
      description: >
        An **updateStudy** operation will modify the information held about the
        specified [**Study**](#tag/studys). This operation is only available if
        the authenticated user has access to the [**Study**](#tag/studys).


        The **updateStudy** operation returns a JSON object representing the
        modified [**Study**](#tag/studys).
      tags:
        - update
        - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyResponse'
              examples:
                response:
                  value:
                    data:
                      id: '227'
                      type: studies
                      attributes:
                        policy:
                          access: download
                          permissions:
                            - resource:
                                id: '1777'
                                type: projects
                              access: view
                        title: A Maximal Study
                        description: The Study of many things
                        experimentalists: Wet lab people
                        other_creators: Marie Curie
                        person_responsible_id: '1161'
                      relationships:
                        creators:
                          data:
                            - id: '1161'
                              type: people
                        submitter:
                          data:
                            - id: '1161'
                              type: people
                        people:
                          data:
                            - id: '1161'
                              type: people
                        projects:
                          data:
                            - id: '1777'
                              type: projects
                        investigation:
                          data:
                            id: '272'
                            type: investigations
                        assays:
                          data: []
                        data_files:
                          data: []
                        models:
                          data: []
                        sops:
                          data: []
                        publications:
                          data:
                            - id: '66'
                              type: publications
                        documents:
                          data: []
                      links:
                        self: /studies/227
                      meta:
                        created: '2018-04-27T14:39:15.000Z'
                        modified: '2018-04-27T14:39:20.814Z'
                        api_version: '0.1'
                        uuid: aedad830-2c56-0136-ec2f-08002734982f
                        base_url: 'http://localhost:3000'
                    jsonapi:
                      version: '1.0'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyPatch'
        description: The study to update.
    delete:
      operationId: deleteStudy
      description: >
        A **deleteStudy** operation will delete the specified
        [**Study**](#tag/studys), if the authenticated user has sufficient
        access to it.
      tags:
        - delete
        - studies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
servers:
  - url: 'https://www.fairdomhub.org/'
components:
  responses:
    NotImplemented:
      description: Not implemented
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bad_request'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unprocessable_entity'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/not_found'
  requestBodies:
    uploadDataFileContentBlobcontent:
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
      description: The blob content to upload
  securitySchemes:
    basicAuth:
      type: http
      description: >-
        The JSON API uses [Basic access

        authentication](https://en.wikipedia.org/wiki/Basic_access_authentication)

        where the *username* and *password* correspond to a registered user on

        the SEEK that is being accessed.


        The **List** and **Read** API calls may be used without authentication.
        In

        that case, they will only list, or allow reading of, publicly viewable

        objects.
      scheme: basic
  schemas:
    error:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
    errors_array:
      type: array
      minItems: 0
      items:
        $ref: '#/components/schemas/error'
    errors:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/errors_array'
    ok:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/nonEmptyString'
      required:
        - status
      additionalProperties: false
      example:
        status: ok
    not_implemented:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/errors_array'
    unprocessable_entity:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/errors_array'
      example:
        errors:
          - detail: >-
              id specified by the PUT request does not match object-id in the
              JSON input
    bad_request:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/errors_array'
      example:
        errors:
          - title: You do not have permission
            detail: No permission
    forbidden:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/errors_array'
    not_found:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/errors_array'
      example:
        errors:
          - title: Not found
            detail: 'Couldn''t find Institution with ''id''=[70]'
    dateTimeString:
      type: string
      minLength: 1
      format: date-time
    nonEmptyString:
      type: string
      minLength: 1
    nullableNonEmptyString:
      allOf:
        - $ref: '#/components/schemas/nonEmptyString'
      nullable: true
    otherCreatorsString:
      type: string
      minLength: 1
    nullableOtherCreatorsString:
      allOf:
        - $ref: '#/components/schemas/otherCreatorsString'
      nullable: true
    nonEmptyStringList:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/nonEmptyString'
    projectPosition:
      type: object
      properties:
        project_id:
          type: string
        position_id:
          type: string
        project_name:
          type: string
    nonEmptyProjectPositionsList:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/projectPosition'
    nullableProjectPositionsList:
      allOf:
        - $ref: '#/components/schemas/nonEmptyProjectPositionsList'
      nullable: true
    nullableNonEmptyStringList:
      allOf:
        - $ref: '#/components/schemas/nonEmptyStringList'
      nullable: true
    uriString:
      type: string
      minLength: 1
      format: uri
    nullableUriString:
      allOf:
        - $ref: '#/components/schemas/uriString'
      nullable: true
    nullableInteger:
      allOf:
        - type: integer
      nullable: true
    license:
      type: string
      minLength: 1
    nullableLicense:
      allOf:
        - $ref: '#/components/schemas/license'
      nullable: true
    md5sumString:
      type: string
      minLength: 32
      maxLength: 32
      pattern: '[0-9a-f]{32}'
    nullableMd5sumString:
      allOf:
        - $ref: '#/components/schemas/md5sumString'
      nullable: true
    sha1sumString:
      type: string
      minLength: 5
      maxLength: 40
      pattern: '[0-9a-f]{5,40}'
    nullableSha1sumString:
      allOf:
        - $ref: '#/components/schemas/sha1sumString'
      nullable: true
    countryString:
      type: string
    nullableCountryString:
      allOf:
        - $ref: '#/components/schemas/countryString'
      nullable: true
    countryCodeString:
      minLength: 2
      maxLength: 2
      type: string
    nullableCountryCodeString:
      allOf:
        - $ref: '#/components/schemas/countryCodeString'
      nullable: true
    versionNumber:
      type: string
      minLength: 1
      enum:
        - '1.0'
    JsonApiVersion:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/versionNumber'
      required:
        - version
      additionalProperties: false
    linksType:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/uriString'
      required:
        - self
      additionalProperties: false
    metaType:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/dateTimeString'
        modified:
          $ref: '#/components/schemas/dateTimeString'
        uuid:
          $ref: '#/components/schemas/nonEmptyString'
        base_url:
          $ref: '#/components/schemas/uriString'
        api_version:
          $ref: '#/components/schemas/nonEmptyString'
      required:
        - created
        - modified
        - uuid
        - base_url
        - api_version
      additionalProperties: false
    baseMetaType:
      type: object
      properties:
        base_url:
          $ref: '#/components/schemas/uriString'
        api_version:
          $ref: '#/components/schemas/nonEmptyString'
      required:
        - base_url
        - api_version
      additionalProperties: false
    policy:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/accessType'
        permissions:
          type: array
          minItems: 0
          uniqueItems: true
          items:
            properties:
              resource:
                $ref: '#/components/schemas/permissionResource'
              access:
                $ref: '#/components/schemas/accessType'
            required:
              - resource
              - access
            additionalProperties: false
      required:
        - access
        - permissions
      additionalProperties: false
    accessType:
      type: string
      minLength: 1
      enum:
        - manage
        - edit
        - download
        - view
        - no_access
    anyType:
      type: string
      minLength: 1
      enum:
        - assays
        - content_blobs
        - data_files
        - documents
        - events
        - institutions
        - models
        - organisms
        - people
        - presentations
        - programmes
        - projects
        - publications
        - sample_types
        - sops
        - studies
    permissionResource:
      properties:
        type:
          $ref: '#/components/schemas/permissionResourceType'
        id:
          $ref: '#/components/schemas/nonEmptyString'
      additionalProperties: false
    permissionResourceType:
      type: string
      minLength: 1
      enum:
        - people
        - favourite_groups
        - work_groups
        - projects
        - programmes
        - institutions
    contributedTypeAttributes:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/tagsType'
        title:
          $ref: '#/components/schemas/nonEmptyString'
        description:
          $ref: '#/components/schemas/nullableNonEmptyString'
        license:
          $ref: '#/components/schemas/nullableLicense'
        latest_version:
          type: number
        versions:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            properties:
              version:
                type: number
              revision_comments:
                $ref: '#/components/schemas/nullableNonEmptyString'
              url:
                $ref: '#/components/schemas/uriString'
            required:
              - version
              - revision_comments
              - url
            additionalProperties: false
        version:
          type: number
        revision_comments:
          $ref: '#/components/schemas/nullableNonEmptyString'
        created_at:
          $ref: '#/components/schemas/dateTimeString'
        updated_at:
          $ref: '#/components/schemas/dateTimeString'
        content_blobs:
          $ref: '#/components/schemas/contentBlobsList'
        policy:
          $ref: '#/components/schemas/policy'
        other_creators:
          $ref: '#/components/schemas/nullableOtherCreatorsString'
      required:
        - title
        - license
        - latest_version
        - versions
        - version
        - created_at
        - updated_at
        - content_blobs
      additionalProperties: false
    modelAttributes:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/tagsType'
        title:
          $ref: '#/components/schemas/nonEmptyString'
        description:
          $ref: '#/components/schemas/nullableNonEmptyString'
        license:
          $ref: '#/components/schemas/nullableLicense'
        latest_version:
          type: number
        versions:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            properties:
              version:
                type: number
              revision_comments:
                $ref: '#/components/schemas/nullableNonEmptyString'
              url:
                $ref: '#/components/schemas/uriString'
            required:
              - version
              - revision_comments
              - url
            additionalProperties: false
        version:
          type: number
        revision_comments:
          $ref: '#/components/schemas/nullableNonEmptyString'
        created_at:
          $ref: '#/components/schemas/dateTimeString'
        updated_at:
          $ref: '#/components/schemas/dateTimeString'
        content_blobs:
          $ref: '#/components/schemas/contentBlobsList'
        model_type:
          $ref: '#/components/schemas/nullableNonEmptyString'
        model_format:
          $ref: '#/components/schemas/nullableNonEmptyString'
        environment:
          $ref: '#/components/schemas/nullableNonEmptyString'
        policy:
          $ref: '#/components/schemas/policy'
        other_creators:
          $ref: '#/components/schemas/nullableOtherCreatorsString'
      required:
        - title
        - license
        - latest_version
        - versions
        - version
        - created_at
        - updated_at
        - content_blobs
        - model_type
        - model_format
        - environment
      additionalProperties: false
    assayType:
      type: string
      minLength: 1
      enum:
        - assays
    assayReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/assayReferences'
      required:
        - data
      additionalProperties: false
    assayAttributes:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/tagsType'
        title:
          $ref: '#/components/schemas/nonEmptyString'
        description:
          $ref: '#/components/schemas/nullableNonEmptyString'
        assay_class:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
            key:
              $ref: '#/components/schemas/nonEmptyString'
            description:
              type: string
          required:
            - title
            - key
          additionalProperties: false
        assay_type:
          type: object
          properties:
            label:
              $ref: '#/components/schemas/nonEmptyString'
            uri:
              $ref: '#/components/schemas/uriString'
          required:
            - label
            - uri
          additionalProperties: false
        technology_type:
          type: object
          properties:
            label:
              $ref: '#/components/schemas/nonEmptyString'
            uri:
              $ref: '#/components/schemas/uriString'
          required:
            - label
            - uri
      required:
        - title
        - description
        - assay_class
        - assay_type
        - technology_type
      additionalProperties: false
    contentBlobType:
      type: string
      minLength: 1
      enum:
        - content_blobs
    dataFileType:
      type: string
      minLength: 1
      enum:
        - data_files
    dataFileReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/dataFileReferences'
      required:
        - data
      additionalProperties: false
    documentType:
      type: string
      minLength: 1
      enum:
        - documents
    documentReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/documentReferences'
      required:
        - data
      additionalProperties: false
    eventType:
      type: string
      minLength: 1
      enum:
        - events
    eventReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/eventReferences'
      required:
        - data
      additionalProperties: false
    investigationType:
      type: string
      minLength: 1
      enum:
        - investigations
    investigationReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/investigationReferences'
      required:
        - data
      additionalProperties: false
    investigationSingletonReference:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/investigationReference'
      required:
        - data
      additionalProperties: false
    institutionType:
      type: string
      minLength: 1
      enum:
        - institutions
    institutionReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/institutionReferences'
      required:
        - data
      additionalProperties: false
    modelType:
      type: string
      minLength: 1
      enum:
        - models
    modelReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/modelReferences'
      required:
        - data
      additionalProperties: false
    organismType:
      type: string
      minLength: 1
      enum:
        - organisms
    organismReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/organismType'
      required:
        - id
        - type
      additionalProperties: false
    organismReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/organismReferences'
      required:
        - data
      additionalProperties: false
    peopleType:
      type: string
      minLength: 1
      enum:
        - people
    peopleReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/peopleType'
      required:
        - id
        - type
      additionalProperties: false
    peopleReferenceList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/peopleReferences'
      required:
        - data
      additionalProperties: false
    presentationType:
      type: string
      minLength: 1
      enum:
        - presentations
    presentationReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/presentationReferences'
      required:
        - data
      additionalProperties: false
    programmeType:
      type: string
      minLength: 1
      enum:
        - programmes
    programmeReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/programmeReferences'
      required:
        - data
      additionalProperties: false
    programmeDataType:
      type: object
      properties:
        avatar:
          $ref: '#/components/schemas/nullableUriString'
        title:
          $ref: '#/components/schemas/nonEmptyString'
        description:
          $ref: '#/components/schemas/nullableNonEmptyString'
        web_page:
          $ref: '#/components/schemas/nullableUriString'
        funding_details:
          $ref: '#/components/schemas/nullableNonEmptyString'
        funding_codes:
          $ref: '#/components/schemas/tagsType'
      required:
        - avatar
        - title
        - description
        - web_page
        - funding_details
        - funding_codes
      additionalProperties: false
    projectType:
      type: string
      minLength: 1
      enum:
        - projects
    projectReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/projectReferences'
      required:
        - data
      additionalProperties: false
    publicationType:
      type: string
      minLength: 1
      enum:
        - publications
    publicationReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/publicationReferences'
      required:
        - data
      additionalProperties: false
    sampleTypeType:
      type: string
      minLength: 1
      enum:
        - sample_types
    sampleTypeReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/sampleTypeType'
      required:
        - id
        - type
      additionalProperties: false
    sampleTypeReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sampleTypeReferences'
      required:
        - data
      additionalProperties: false
    sopType:
      type: string
      minLength: 1
      enum:
        - sops
    sopReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sopReferences'
      required:
        - data
      additionalProperties: false
    studyType:
      type: string
      minLength: 1
      enum:
        - studies
    studyReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/studyType'
      required:
        - id
        - type
      additionalProperties: false
    studyReferencesList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/studyReferences'
      required:
        - data
      additionalProperties: false
    studySingletonReference:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/studyReference'
      required:
        - data
      additionalProperties: false
    tagsType:
      $ref: '#/components/schemas/nullableNonEmptyStringList'
    anySkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/anyType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    anySkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/anySkeleton'
    anyReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/anyType'
      required:
        - id
        - type
      additionalProperties: false
    anySingletonReference:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/anyReference'
      required:
        - data
      additionalProperties: false
    assayReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/assayType'
      required:
        - id
        - type
      additionalProperties: false
    assayReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/assayReference'
    assaySkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/assayType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    assaySkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/assaySkeleton'
    dataFileReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/dataFileReference'
    dataFileReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/dataFileType'
      required:
        - id
        - type
      additionalProperties: false
    dataFileSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/dataFileType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    dataFileSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/dataFileSkeleton'
    documentReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/documentReference'
    documentReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/documentType'
      required:
        - id
        - type
      additionalProperties: false
    eventReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/eventReference'
    eventReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/eventType'
      required:
        - id
        - type
      additionalProperties: false
    investigationReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/investigationReference'
    investigationReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/investigationType'
      required:
        - id
        - type
      additionalProperties: false
    institutionReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/institutionReference'
    institutionReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/institutionType'
      required:
        - id
        - type
      additionalProperties: false
    modelReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/modelReference'
    modelReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/modelType'
      required:
        - id
        - type
      additionalProperties: false
    organismReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/organismReference'
    peopleReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/peopleReference'
    presentationReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/presentationReference'
    presentationReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/presentationType'
      required:
        - id
        - type
      additionalProperties: false
    programmeReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/programmeReference'
    programmeReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/programmeType'
      required:
        - id
        - type
      additionalProperties: false
    projectReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/projectReference'
    projectReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/projectType'
      required:
        - id
        - type
      additionalProperties: false
    publicationReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/publicationReference'
    publicationReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/publicationType'
      required:
        - id
        - type
      additionalProperties: false
    sampleTypeReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/sampleTypeReference'
    sopReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/sopReference'
    sopReference:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/sopType'
      required:
        - id
        - type
      additionalProperties: false
    studyReferences:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/studyReference'
    searchResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/anySkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    assayResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/assayType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                assay_class:
                  type: object
                  properties:
                    title:
                      $ref: '#/components/schemas/nonEmptyString'
                    key:
                      $ref: '#/components/schemas/nonEmptyString'
                    description:
                      $ref: '#/components/schemas/nullableNonEmptyString'
                  required:
                    - title
                    - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    label:
                      $ref: '#/components/schemas/nullableNonEmptyString'
                    uri:
                      $ref: '#/components/schemas/uriString'
                  required:
                    - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    label:
                      $ref: '#/components/schemas/nullableNonEmptyString'
                    uri:
                      $ref: '#/components/schemas/uriString'
                  required:
                    - uri
                  additionalProperties: false
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
                - assay_class
                - assay_type
                - technology_type
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                organisms:
                  $ref: '#/components/schemas/organismReferencesList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigation:
                  $ref: '#/components/schemas/investigationSingletonReference'
                study:
                  $ref: '#/components/schemas/studySingletonReference'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - creators
                - submitter
                - organisms
                - people
                - projects
                - investigation
                - study
                - data_files
                - documents
                - models
                - sops
                - publications
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    assayPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/assayType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                assay_class:
                  type: object
                  properties:
                    key:
                      $ref: '#/components/schemas/nonEmptyString'
                  required:
                    - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    uri:
                      $ref: '#/components/schemas/uriString'
                  required:
                    - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    uri:
                      $ref: '#/components/schemas/uriString'
                  required:
                    - uri
                  additionalProperties: false
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
                - assay_class
                - assay_type
                - technology_type
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                study:
                  $ref: '#/components/schemas/studySingletonReference'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                organisms:
                  $ref: '#/components/schemas/organismReferencesList'
              required:
                - study
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: assays
          attributes:
            title: A Maximal experimental Assay
            assay_class:
              key: EXP
            assay_type:
              uri: 'http://www.mygrid.org.uk/ontology/JERMOntology#Transcriptomics'
            technology_type:
              uri: 'http://www.mygrid.org.uk/ontology/JERMOntology#RNA-Seq'
            other_creators: Anonymous creator
            description: A Western Blot Assay
            policy:
              access: download
              permissions:
                - resource:
                    id: '442'
                    type: projects
                  access: manage
          relationships:
            study:
              data:
                id: '66'
                type: studies
            publications:
              data:
                - id: '16'
                  type: publications
            organisms:
              data:
                - id: '3'
                  type: organisms
            sops:
              data:
                - id: '4'
                  type: sops
            models:
              data:
                - id: '5'
                  type: models
            data_files:
              data:
                - id: '16'
                  type: data_files
            documents:
              data:
                - id: '32'
                  type: documents
            creators:
              data:
                - id: '287'
                  type: people
    assayPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/assayType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                assay_class:
                  type: object
                  properties:
                    key:
                      $ref: '#/components/schemas/nonEmptyString'
                  required:
                    - key
                  additionalProperties: false
                assay_type:
                  type: object
                  properties:
                    uri:
                      $ref: '#/components/schemas/uriString'
                  required:
                    - uri
                  additionalProperties: false
                technology_type:
                  type: object
                  properties:
                    uri:
                      $ref: '#/components/schemas/uriString'
                  required:
                    - uri
                  additionalProperties: false
                policy:
                  $ref: '#/components/schemas/policy'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                study:
                  $ref: '#/components/schemas/studySingletonReference'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                organisms:
                  $ref: '#/components/schemas/organismReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: assays
          id: '72'
          attributes:
            title: A Maximal Assay
            assay_class:
              key: EXP
            assay_type:
              uri: 'http://www.mygrid.org.uk/ontology/JERMOntology#Transcriptomics'
            technology_type:
              uri: 'http://www.mygrid.org.uk/ontology/JERMOntology#RNA-Seq'
            other_creators: Anonymous creator
            description: A Western Blot Assay
            policy:
              access: download
              permissions:
                - resource:
                    id: '585'
                    type: projects
                  access: manage
          relationships:
            study:
              data:
                id: '94'
                type: studies
            publications:
              data:
                - id: '18'
                  type: publications
            organisms:
              data:
                - id: '4'
                  type: organisms
            sops:
              data:
                - id: '6'
                  type: sops
            models:
              data:
                - id: '8'
                  type: models
            data_files:
              data:
                - id: '18'
                  type: data_files
            documents:
              data:
                - id: '34'
                  type: documents
            creators:
              data:
                - id: '391'
                  type: people
    getContentBlobsResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/nonEmptyString'
            attributes:
              type: object
              properties:
                original_filename:
                  $ref: '#/components/schemas/nonEmptyString'
                url:
                  $ref: '#/components/schemas/nullableUriString'
                md5sum:
                  $ref: '#/components/schemas/md5sumString'
                sha1sum:
                  $ref: '#/components/schemas/sha1sumString'
                content_type:
                  $ref: '#/components/schemas/contentBlobType'
              required:
                - original_filename
                - md5sum
                - sha1sum
                - content_type
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    dataFileResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/dataFileType'
            attributes:
              $ref: '#/components/schemas/contributedTypeAttributes'
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
                - events
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    dataFilePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/dataFileType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                content_blobs:
                  $ref: '#/components/schemas/contentBlobSlotsList'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: data_files
          attributes:
            title: A Maximal Data File
            description: This is the description
            tags:
              - tag1
              - tag2
            license: CC-BY-4.0
            other_creators: 'John Smith, Jane Smith'
            content_blobs:
              - original_filename: a_pdf_file.pdf
                content_type: application/pdf
            policy:
              access: download
              permissions:
                - resource:
                    id: '2058'
                    type: projects
                  access: edit
          relationships:
            creators:
              data:
                - id: '1369'
                  type: people
            projects:
              data:
                - id: '2058'
                  type: projects
            assays:
              data:
                - id: '186'
                  type: assays
            publications:
              data:
                - id: '87'
                  type: publications
            events:
              data:
                - id: '70'
                  type: events
    dataFilePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/dataFileType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: data_files
          id: '68'
          attributes:
            description: Study of the Human Genome
    documentResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/documentType'
            attributes:
              $ref: '#/components/schemas/contributedTypeAttributes'
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    documentPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/documentType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                content_blobs:
                  $ref: '#/components/schemas/contentBlobSlotsList'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: documents
          attributes:
            title: A Maximal Document
            description: This is the description
            tags:
              - tag1
              - tag2
            license: CC-BY-4.0
            other_creators: 'John Smith, Jane Smith'
            content_blobs:
              - original_filename: a_pdf_file.pdf
                content_type: application/pdf
            policy:
              access: download
              permissions:
                - resource:
                    id: '359'
                    type: projects
                  access: edit
          relationships:
            creators:
              data:
                - id: '234'
                  type: people
            projects:
              data:
                - id: '359'
                  type: projects
            assays:
              data:
                - id: '38'
                  type: assays
    documentPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/documentType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: documents
          id: '25'
          attributes:
            description: A report about the thing that happened
    eventResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/eventType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                url:
                  $ref: '#/components/schemas/nullableUriString'
                address:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                city:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                country:
                  $ref: '#/components/schemas/nullableCountryString'
                start_date:
                  $ref: '#/components/schemas/dateTimeString'
                end_date:
                  $ref: '#/components/schemas/dateTimeString'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
                - description
                - start_date
                - end_date
              additionalProperties: false
            relationships:
              type: object
              properties:
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
              required:
                - projects
                - data_files
                - publications
                - presentations
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    eventPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/eventType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                url:
                  $ref: '#/components/schemas/nullableUriString'
                address:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                city:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                country:
                  $ref: '#/components/schemas/nullableCountryString'
                start_date:
                  $ref: '#/components/schemas/dateTimeString'
                end_date:
                  $ref: '#/components/schemas/dateTimeString'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
                - start_date
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: events
          attributes:
            title: A Maximal Event
            description: This is the description
            policy:
              access: view
              permissions:
                - resource:
                    id: '242'
                    type: projects
                  access: edit
            url: 'http://www.example.com/events/123'
            address: Sofienstr 2
            city: Heidelberg
            country: Germany
            start_date: '2017-01-01T00:20:00.000Z'
            end_date: '2017-01-01T00:22:00.000Z'
          relationships:
            projects:
              data:
                - id: '242'
                  type: projects
            data_files:
              data:
                - id: '4'
                  type: data_files
            presentations:
              data:
                - id: '1'
                  type: presentations
            publications:
              data:
                - id: '4'
                  type: publications
    eventPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/eventType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                url:
                  $ref: '#/components/schemas/nullableUriString'
                address:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                city:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                country:
                  $ref: '#/components/schemas/nullableCountryString'
                start_date:
                  $ref: '#/components/schemas/dateTimeString'
                end_date:
                  $ref: '#/components/schemas/dateTimeString'
                policy:
                  $ref: '#/components/schemas/policy'
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: events
          id: '14'
          attributes:
            description: A thing that will happen
    institutionResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/institutionType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                country:
                  $ref: '#/components/schemas/nullableCountryString'
                country_code:
                  $ref: '#/components/schemas/nullableCountryCodeString'
                city:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                address:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
              required:
                - title
                - country
                - city
                - address
                - web_page
              additionalProperties: false
            relationships:
              type: object
              properties:
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
              required:
                - people
                - projects
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    institutionPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/institutionType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                country:
                  $ref: '#/components/schemas/nullableCountryString'
                city:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                address:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
              required:
                - title
              additionalProperties: false
          required:
            - type
            - attributes
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: institutions
          attributes:
            title: 'Post An Institution: 886 Max'
            country: Brazil
            city: Manchester
            address: >-
              Manchester Centre for Integrative Systems Biology, MIB/CEAS, The
              University of Manchester Faraday Building, Sackville Street,
              Manchester M60 1QD United Kingdom
            web_page: 'http://www.mib.ac.uk/'
    institutionPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/institutionType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                country:
                  $ref: '#/components/schemas/nullableCountryString'
                city:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                address:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
              additionalProperties: false
          required:
            - id
            - type
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: institutions
          id: '1094'
          attributes:
            title: Patched institution
            web_page: 'http://my.Institution.com'
            country: Germany
            city: Heidelberg
            address: NoName street 23
    investigationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/investigationType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    investigationPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/investigationType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                policy:
                  $ref: '#/components/schemas/policy'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: investigations
          id: '196'
          attributes:
            title: A Maximal Investigation
            policy:
              access: download
              permissions:
                - resource:
                    id: '1293'
                    type: projects
                  access: manage
                - resource:
                    id: '1343'
                    type: projects
                  access: manage
            description: This is a more complex investigation
            other_creators: 'Max Blumenthal, Ed Snowden'
          relationships:
            projects:
              data:
                - id: '1293'
                  type: projects
                - id: '1343'
                  type: projects
            publications:
              data:
                - id: '41'
                  type: publications
            creators:
              data:
                - id: '838'
                  type: people
    investigationPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/investigationType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: investigations
          attributes:
            title: A Maximal Investigation
            policy:
              access: download
              permissions:
                - resource:
                    id: '809'
                    type: projects
                  access: manage
                - resource:
                    id: '859'
                    type: projects
                  access: manage
            description: This is a more complex investigation
            other_creators: 'Max Blumenthal, Ed Snowden'
          relationships:
            projects:
              data:
                - id: '809'
                  type: projects
                - id: '859'
                  type: projects
            publications:
              data:
                - id: '23'
                  type: publications
            creators:
              data:
                - id: '555'
                  type: people
    modelResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/modelType'
            attributes:
              $ref: '#/components/schemas/modelAttributes'
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    modelPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/modelType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                content_blobs:
                  $ref: '#/components/schemas/contentBlobSlotsList'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                model_type:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                model_format:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                environment:
                  $ref: '#/components/schemas/nullableNonEmptyString'
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: models
          attributes:
            title: A Maximal Model
            description: This is the description
            tags:
              - tag1
              - tag2
            license: CC-BY-4.0
            other_creators: 'John Smith, Jane Smith'
            content_blobs:
              - original_filename: docs.pdf
                content_type: application/pdf
              - original_filename: the_model.xml
                content_type: application/xml
            policy:
              access: download
              permissions:
                - resource:
                    id: '1548'
                    type: projects
                  access: edit
            model_type: Linear equations
            model_format: SBML
            environment: JWS Online
          relationships:
            creators:
              data:
                - id: '992'
                  type: people
            projects:
              data:
                - id: '1548'
                  type: projects
            assays:
              data:
                - id: '153'
                  type: assays
            publications:
              data:
                - id: '52'
                  type: publications
    modelPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/modelType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                model_type:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                model_format:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                environment:
                  $ref: '#/components/schemas/nullableNonEmptyString'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: models
          id: '71'
          attributes:
            description: A simulation of a thing
    organismResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/organismType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                concept_uri:
                  $ref: '#/components/schemas/uriString'
                ontology_id:
                  $ref: '#/components/schemas/nonEmptyString'
              required:
                - title
                - concept_uri
                - ontology_id
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
              required:
                - projects
                - assays
                - models
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    personResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/peopleType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                first_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                last_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                orcid:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                mbox_sha1sum:
                  $ref: '#/components/schemas/nullableSha1sumString'
                expertise:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                tools:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                phone:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                skype_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                project_positions:
                  $ref: '#/components/schemas/nullableProjectPositionsList'
              required:
                - title
                - first_name
                - last_name
                - mbox_sha1sum
              additionalProperties: false
            relationships:
              type: object
              properties:
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                institutions:
                  $ref: '#/components/schemas/institutionReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - projects
                - institutions
                - investigations
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
                - presentations
                - events
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    personPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/peopleType'
            attributes:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                first_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                last_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                email:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                orcid:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                expertise:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                tools:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                phone:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                skype_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                project_positions:
                  $ref: '#/components/schemas/nullableProjectPositionsList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          id: '472'
          type: people
          attributes:
            first_name: Patched
            last_name: Name
            email: patched@email.com
            description: A person with all possible details
            web_page: 'http://www.website.com'
            orcid: 'http://orcid.org/0000-0001-9842-9718'
            phone: 34-167-552266
            skype_name: patchedSkype
            expertise:
              - modeling
              - programming
            tools:
              - CeriusII
              - Gromacs
              - Python
            project_positions:
              - project_id: '676'
                position_id: '1'
    personPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/peopleType'
            attributes:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                first_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                last_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                email:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                orcid:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                expertise:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                tools:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                phone:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                skype_name:
                  $ref: '#/components/schemas/nullableNonEmptyString'
              required:
                - first_name
                - last_name
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: people
          attributes:
            first_name: Post
            last_name: Last
            email: maxPosttest264@test.com
            description: A person with all possible details
            web_page: 'http://www.website.com'
            orcid: 'http://orcid.org/0000-0001-9842-9718'
            phone: 34-167-552266
            skype_name: postedSkype
            expertise:
              - modeling
              - programming
            tools:
              - CeriusII
              - Gromacs
              - Python
    presentationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/presentationType'
            attributes:
              $ref: '#/components/schemas/contributedTypeAttributes'
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
                - events
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    presentationPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/presentationType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                content_blobs:
                  $ref: '#/components/schemas/contentBlobSlotsList'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: presentations
          attributes:
            title: A Maximal Presentation
            description: This is the description
            tags:
              - tag1
              - tag2
            license: CC-BY-4.0
            other_creators: 'John Smith, Jane Smith'
            content_blobs:
              - original_filename: a_pdf_file.pdf
                content_type: application/pdf
            policy:
              access: download
              permissions:
                - resource:
                    id: '1836'
                    type: projects
                  access: edit
          relationships:
            creators:
              data:
                - id: '1206'
                  type: people
            projects:
              data:
                - id: '1836'
                  type: projects
            publications:
              data:
                - id: '71'
                  type: publications
            events:
              data:
                - id: '54'
                  type: events
    presentationPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/presentationType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: presentations
          id: '47'
          attributes:
            description: A report about the thing that happened
    programmeResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/programmeType'
            attributes:
              $ref: '#/components/schemas/programmeDataType'
            relationships:
              type: object
              properties:
                administrators:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                institutions:
                  $ref: '#/components/schemas/institutionReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - people
                - projects
                - institutions
                - investigations
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
                - presentations
                - events
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    programmePost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/programmeType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                funding_details:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                funding_codes:
                  $ref: '#/components/schemas/tagsType'
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                administrators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: programmes
          attributes:
            title: Post programme Max
            description: A very exciting programme
            web_page: 'http://www.synbiochem.co.uk'
            funding_details: Someone is funding this for me
            funding_codes:
              - BMBF
              - DFG
          relationships:
            projects:
              data:
                - id: '692'
                  type: projects
            administrators:
              data:
                - id: '486'
                  type: people
                - id: '487'
                  type: people
    programmePatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/programmeType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                funding_details:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                funding_codes:
                  $ref: '#/components/schemas/tagsType'
              additionalProperties: false
            relationships:
              type: object
              properties:
                administrators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          id: '18'
          type: programmes
          attributes:
            title: Changed title
            description: A very exciting programme patched!
            web_page: 'http://www.synbiochem.co.uk'
            funding_details: Someone ELSE is funding this for me
            funding_codes:
              - AVH
          relationships:
            projects:
              data:
                - id: '731'
                  type: projects
            administrators:
              data:
                - id: '510'
                  type: people
    projectResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/projectType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                wiki_page:
                  $ref: '#/components/schemas/nullableUriString'
                default_policy:
                  $ref: '#/components/schemas/policy'
                default_license:
                  $ref: '#/components/schemas/nullableLicense'
              required:
                - title
                - description
                - web_page
                - wiki_page
              additionalProperties: false
            relationships:
              type: object
              properties:
                organisms:
                  $ref: '#/components/schemas/organismReferencesList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                institutions:
                  $ref: '#/components/schemas/institutionReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
                programmes:
                  $ref: '#/components/schemas/programmeReferencesList'
              required:
                - organisms
                - people
                - institutions
                - investigations
                - studies
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
                - presentations
                - events
                - programmes
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    projectPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/projectType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                wiki_page:
                  $ref: '#/components/schemas/nullableUriString'
                default_policy:
                  $ref: '#/components/schemas/policy'
                default_license:
                  $ref: '#/components/schemas/nullableLicense'
              additionalProperties: false
            relationships:
              type: object
              properties:
                programmes:
                  $ref: '#/components/schemas/programmeReferencesList'
                organisms:
                  $ref: '#/components/schemas/organismReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          id: '1953'
          type: projects
          attributes:
            avatar: null
            title: Updated Project
            description: with a new description!
            web_page: 'http://www.taverna.org.uk'
            wiki_page: 'http://www.mygrid.org.uk'
            default_license: Other (Open)
            default_policy:
              access: no_access
              permissions:
                - resource:
                    id: '1296'
                    type: people
                  access: manage
                - resource:
                    id: '1956'
                    type: projects
                  access: download
                - resource:
                    id: '1321'
                    type: institutions
                  access: view
          relationships:
            programmes:
              data:
                - id: '28'
                  type: programmes
            organisms:
              data:
                - id: '6'
                  type: organisms
    projectPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/projectType'
            attributes:
              type: object
              properties:
                avatar:
                  $ref: '#/components/schemas/nullableUriString'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                web_page:
                  $ref: '#/components/schemas/nullableUriString'
                wiki_page:
                  $ref: '#/components/schemas/nullableUriString'
                default_policy:
                  $ref: '#/components/schemas/policy'
                default_license:
                  $ref: '#/components/schemas/nullableLicense'
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                programmes:
                  $ref: '#/components/schemas/programmeReferencesList'
                organisms:
                  $ref: '#/components/schemas/organismReferencesList'
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: projects
          attributes:
            avatar: null
            title: Post Project Max
            description: A Taverna project
            web_page: 'http://www.taverna.org.uk'
            wiki_page: 'http://www.mygrid.org.uk'
            default_license: Other (Open)
            default_policy:
              access: no_access
              permissions:
                - resource:
                    id: '1273'
                    type: people
                  access: manage
                - resource:
                    id: '1924'
                    type: projects
                  access: download
                - resource:
                    id: '1297'
                    type: institutions
                  access: view
          relationships:
            programmes:
              data:
                - id: '27'
                  type: programmes
            organisms:
              data:
                - id: '5'
                  type: organisms
    publicationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/publicationType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                journal:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                published_date:
                  $ref: '#/components/schemas/nonEmptyString'
                doi:
                  $ref: '#/components/schemas/nullableUriString'
                pubmed_id:
                  $ref: '#/components/schemas/nullableInteger'
                abstract:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                citation:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                link_to_pub:
                  $ref: '#/components/schemas/nullableUriString'
                authors:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
                - journal
                - published_date
                - pubmed_id
                - citation
                - link_to_pub
              additionalProperties: false
            relationships:
              type: object
              properties:
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
                presentations:
                  $ref: '#/components/schemas/presentationReferencesList'
                events:
                  $ref: '#/components/schemas/eventReferencesList'
              required:
                - people
                - projects
                - investigations
                - studies
                - assays
                - data_files
                - models
                - publications
                - presentations
                - events
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    sopResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/sopType'
            attributes:
              $ref: '#/components/schemas/contributedTypeAttributes'
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigations:
                  $ref: '#/components/schemas/investigationReferencesList'
                studies:
                  $ref: '#/components/schemas/studyReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - investigations
                - studies
                - assays
                - publications
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    sopPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/sopType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                content_blobs:
                  $ref: '#/components/schemas/contentBlobSlotsList'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              required:
                - title
                - content_blobs
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
              required:
                - projects
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: sops
          attributes:
            title: A Maximal SOP
            description: This is the description
            tags:
              - tag1
              - tag2
            license: CC-BY-4.0
            other_creators: 'John Smith, Jane Smith'
            content_blobs:
              - original_filename: a_pdf_file.pdf
                content_type: application/pdf
            policy:
              access: download
              permissions:
                - resource:
                    id: '1973'
                    type: projects
                  access: edit
          relationships:
            creators:
              data:
                - id: '1308'
                  type: people
            projects:
              data:
                - id: '1973'
                  type: projects
            assays:
              data:
                - id: '171'
                  type: assays
    sopPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/sopType'
            attributes:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/nullableNonEmptyStringList'
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                license:
                  $ref: '#/components/schemas/nullableLicense'
                policy:
                  $ref: '#/components/schemas/policy'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: sops
          id: '49'
          attributes:
            description: Protocol
    studyResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/studyType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                experimentalists:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                person_responsible_id:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
                - person_responsible_id
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                submitter:
                  $ref: '#/components/schemas/peopleReferenceList'
                people:
                  $ref: '#/components/schemas/peopleReferenceList'
                projects:
                  $ref: '#/components/schemas/projectReferencesList'
                investigation:
                  $ref: '#/components/schemas/investigationSingletonReference'
                assays:
                  $ref: '#/components/schemas/assayReferencesList'
                data_files:
                  $ref: '#/components/schemas/dataFileReferencesList'
                documents:
                  $ref: '#/components/schemas/documentReferencesList'
                models:
                  $ref: '#/components/schemas/modelReferencesList'
                sops:
                  $ref: '#/components/schemas/sopReferencesList'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - creators
                - submitter
                - people
                - projects
                - investigation
                - assays
                - data_files
                - documents
                - models
                - sops
                - publications
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false
    studyPost:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/studyType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                experimentalists:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                person_responsible_id:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                policy:
                  $ref: '#/components/schemas/policy'
              required:
                - title
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                investigation:
                  $ref: '#/components/schemas/investigationSingletonReference'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              required:
                - investigation
              additionalProperties: false
          required:
            - type
            - attributes
            - relationships
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: studies
          attributes:
            title: A Maximal Study
            description: The Study of many things
            experimentalists: Wet lab people
            person_responsible_id: '1092'
            other_creators: Marie Curie
            policy:
              access: download
              permissions:
                - resource:
                    id: '1672'
                    type: projects
                  access: view
          relationships:
            investigation:
              data:
                id: '243'
                type: investigations
            publications:
              data:
                - id: '64'
                  type: publications
            creators:
              data:
                - id: '1092'
                  type: people
    studyPatch:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/studyType'
            attributes:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/nonEmptyString'
                description:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                experimentalists:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                other_creators:
                  $ref: '#/components/schemas/nullableOtherCreatorsString'
                person_responsible_id:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                policy:
                  $ref: '#/components/schemas/policy'
              additionalProperties: false
            relationships:
              type: object
              properties:
                creators:
                  $ref: '#/components/schemas/peopleReferenceList'
                investigation:
                  $ref: '#/components/schemas/investigationSingletonReference'
                publications:
                  $ref: '#/components/schemas/publicationReferencesList'
              additionalProperties: false
          required:
            - id
            - type
          additionalProperties: false
      required:
        - data
      additionalProperties: false
      example:
        data:
          type: studies
          id: '227'
          attributes:
            title: A Maximal Study
            description: The Study of many things
            experimentalists: Wet lab people
            person_responsible_id: '1161'
            other_creators: Marie Curie
            policy:
              access: download
              permissions:
                - resource:
                    id: '1777'
                    type: projects
                  access: view
          relationships:
            investigation:
              data:
                id: '272'
                type: investigations
            publications:
              data:
                - id: '66'
                  type: publications
            creators:
              data:
                - id: '1161'
                  type: people
    assaysResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/assaySkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    dataFilesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/dataFileSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    documentSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/documentType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    documentSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/documentSkeleton'
    documentsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/documentSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    eventSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/eventType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    eventSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/eventSkeleton'
    eventsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/eventSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    institutionSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/institutionType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    institutionSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/institutionSkeleton'
    institutionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/institutionSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    investigationSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/investigationType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    investigationSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/investigationSkeleton'
    investigationsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/investigationSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    modelSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/modelType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    modelSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/modelSkeleton'
    modelsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/modelSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    organismSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/organismType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    organismSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/organismSkeleton'
    organismsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/organismSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    personSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/peopleType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    peopleSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/personSkeleton'
    peopleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/peopleSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    presentationSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/presentationType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    presentationSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/presentationSkeleton'
    presentationsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/presentationSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    programmeSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/programmeType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    programmeSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/programmeSkeleton'
    programmesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/programmeSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    projectSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/projectType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    projectSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/projectSkeleton'
    projectsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/projectSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    publicationSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/publicationType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    publicationSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/publicationSkeleton'
    publicationsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/publicationSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    sopSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/sopType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    sopSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/sopSkeleton'
    sopsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sopSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    sampleTypeSkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/sampleTypeType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    sampleTypeSkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/sampleTypeSkeleton'
    sampleTypesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sampleTypeSkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    studySkeleton:
      properties:
        id:
          $ref: '#/components/schemas/nonEmptyString'
        type:
          $ref: '#/components/schemas/studyType'
        attributes:
          type: object
          properties:
            title:
              $ref: '#/components/schemas/nonEmptyString'
          required:
            - title
          additionalProperties: false
        links:
          $ref: '#/components/schemas/linksType'
      required:
        - id
        - type
        - attributes
        - links
      additionalProperties: false
    studySkeletons:
      type: array
      minItems: 0
      uniqueItems: true
      items:
        $ref: '#/components/schemas/studySkeleton'
    studiesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/studySkeletons'
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
        meta:
          $ref: '#/components/schemas/baseMetaType'
      required:
        - data
        - jsonapi
        - meta
      additionalProperties: false
    ErrorResponse:
      required:
        - message
      additionalProperties: false
      properties:
        message:
          type: string
    contentBlobsList:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/contentBlob'
    contentBlobSlotsList:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/contentBlobSlot'
    contentBlobSlot:
      allOf:
        - $ref: '#/components/schemas/remoteContentBlob'
      nullable: true
    remoteContentBlob:
      properties:
        url:
          $ref: '#/components/schemas/nullableUriString'
        original_filename:
          $ref: '#/components/schemas/nullableNonEmptyString'
        content_type:
          $ref: '#/components/schemas/nullableNonEmptyString'
      required:
        - url
      additionalProperties: false
    contentBlobPlaceholder:
      properties:
        original_filename:
          $ref: '#/components/schemas/nullableNonEmptyString'
        content_type:
          $ref: '#/components/schemas/nullableNonEmptyString'
      required:
        - original_filename
        - content_type
      additionalProperties: false
    contentBlob:
      properties:
        original_filename:
          $ref: '#/components/schemas/nullableNonEmptyString'
        url:
          $ref: '#/components/schemas/nullableUriString'
        md5sum:
          $ref: '#/components/schemas/nullableMd5sumString'
        sha1sum:
          $ref: '#/components/schemas/nullableSha1sumString'
        content_type:
          $ref: '#/components/schemas/nullableNonEmptyString'
        link:
          $ref: '#/components/schemas/uriString'
        size:
          $ref: '#/components/schemas/nullableInteger'
      required:
        - original_filename
        - url
        - md5sum
        - sha1sum
        - content_type
        - link
        - size
      additionalProperties: false
    contentBlobResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/nonEmptyString'
            type:
              $ref: '#/components/schemas/contentBlobType'
            attributes:
              type: object
              properties:
                original_filename:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                url:
                  $ref: '#/components/schemas/nullableUriString'
                md5sum:
                  $ref: '#/components/schemas/nullableMd5sumString'
                sha1sum:
                  $ref: '#/components/schemas/nullableSha1sumString'
                content_type:
                  $ref: '#/components/schemas/nullableNonEmptyString'
                size:
                  $ref: '#/components/schemas/nullableInteger'
              required:
                - original_filename
                - url
                - md5sum
                - sha1sum
                - content_type
                - size
              additionalProperties: false
            relationships:
              type: object
              properties:
                asset:
                  $ref: '#/components/schemas/anySingletonReference'
              required:
                - asset
              additionalProperties: false
            links:
              $ref: '#/components/schemas/linksType'
            meta:
              $ref: '#/components/schemas/metaType'
          required:
            - id
            - type
            - attributes
            - relationships
            - links
            - meta
          additionalProperties: false
        jsonapi:
          $ref: '#/components/schemas/JsonApiVersion'
      required:
        - data
        - jsonapi
      additionalProperties: false