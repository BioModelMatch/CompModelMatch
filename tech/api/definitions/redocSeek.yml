swagger: '2.0'
info:
  version: '0.1'
  title: JSON API to FAIRDOM SEEK
  license:
    name: The 3-Clause BSD License
    url: https://opensource.org/licenses/BSD-3-Clause
  contact:
    name: SEEK support
    url: http://groups.google.com/group/seek4science
    email: support@fair-dom.org
  description:
    $ref: ../descriptions/api.md
  x-logo:
    url: ./definitions/seek.png
    backgroundColor: '#FFFFFF'
host: www.fairdomhub.org
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  basicAuth:
    type: basic
    description:
      $ref: ../descriptions/authentication.md
security:
- basicAuth: []
tags:
- name: list
  description:
    $ref: ../descriptions/list.md
  x-traitTag: true
- name: create
  description:
    $ref: ../descriptions/create.md
  x-traitTag: true
- name: read
  description:
    $ref: ../descriptions/read.md
  x-traitTag: true
- name: update
  description:
    $ref: ../descriptions/update.md
  x-traitTag: true
- name: delete
  description:
    $ref: ../descriptions/delete.md
  x-traitTag: true
- name: upload
  description:
    $ref: ../descriptions/upload.md
  x-traitTag: true
- name: download
  description:
    $ref: ../descriptions/download.md
  x-traitTag: true

- name: search
  description:
    $ref: ../descriptions/search.md
- name: institutions
  description:
    $ref: ../descriptions/institutions.md
- name: people
  description:
    $ref: ../descriptions/people.md
- name: programmes
  description:
    $ref: ../descriptions/programmes.md
- name: projects
  description:
    $ref: ../descriptions/projects.md

- name: investigations
  description:
    $ref: ../descriptions/investigations.md
- name: studies
  description:
    $ref: ../descriptions/studies.md
- name: assays
  description:
    $ref: ../descriptions/assays.md

- name: dataFiles
  description:
    $ref: ../descriptions/dataFiles.md
- name: documents
  description:
    $ref: ../descriptions/documents.md
- name: models
  description:
    $ref: ../descriptions/models.md
- name: publications
  description:
    $ref: ../descriptions/publications.md
- name: sops
  description:
    $ref: ../descriptions/sops.md

- name: events
  description:
    $ref: ../descriptions/events.md
- name: presentations
  description:
    $ref: ../descriptions/presentations.md

- name: organisms
  description:
    $ref: ../descriptions/organisms.md
- name: sampleTypes
  description:
    $ref: ../descriptions/sampleTypes.md

x-tagGroups:
- name: operation types
  tags:
  - list
  - create
  - read
  - update
  - delete
  - upload
  - download

- name: Search
  tags:
  - search

- name: Yellow Pages
  tags:
  - institutions
  - people
  - programmes
  - projects

- name: Experiments
  tags:
  - investigations
  - studies
  - assays

- name: Assets
  tags:
  - dataFiles
  - documents
  - models
  - publications
  - sops

- name: Activities
  tags:
  - events
  - presentations

- name: Samples
  tags:
  - organisms
  - sampleTypes

x-types:
  ListTypeT: &ListType
    '501':
      description: Not implemented

  CreateTypeT: &CreateType
    '400':
      description: Bad request
      schema:
        $ref: '#/definitions/bad_request'
    '403':
      description: Forbidden
      schema:
        $ref: '#/definitions/forbidden'
    '422':
      description: Unprocessable entity
      schema:
        $ref: '#/definitions/unprocessable_entity'
  ReadTypeT: &ReadType
    '403':
      description: Forbidden
      schema:
        $ref: '#/definitions/forbidden'
    '404':
      description: Not found
      schema:
        $ref: '#/definitions/not_found'

  UpdateTypeT: &UpdateType
    '403':
      description: Forbidden
      schema:
        $ref: '#/definitions/forbidden'
    '404':
      description: Not found
      schema:
        $ref: '#/definitions/not_found'
    '422':
      description: Unprocessable entity
      schema:
        $ref: '#/definitions/unprocessable_entity'

  DeleteTypeT: &DeleteType
    '403':
      description: Forbidden
      schema:
        $ref: '#/definitions/forbidden'
    '404':
      description: Not found
      schema:
        $ref: '#/definitions/not_found'

paths:
  /search:
    parameters:
    - name: q
      in: query
      required: true
      description: |
        The text to search for
      type: string
      default: lactate inhibition
    - name: search_type
      in: query
      required: false
      description: The type of resource to return
      type: string
      enum:
      - assays
      - data_files
      - events
      - institutions
      - investigations
      - models
      - people
      - presentations
      - programmes
      - projects
      - publications
      - sample_types
      - sops
      - studies
      default: data_files
    get:
      operationId: search
      description:
        $ref: ../descriptions/searchOperation.md
      tags:
      - search
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/searchResponse'
          examples:
            application/json:
              $ref: ../examples/searchResponse.yml
  /assays:
    get:
      operationId: listAssays
      description:
        $ref: ../descriptions/listAssays.md
      tags:
      - list
      - assays
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/assaysResponse'
          examples:
            application/json:
              $ref: ../examples/assaysResponse.yml
    post:
      operationId: createAssay
      description:
        $ref: ../descriptions/createAssay.md
      tags:
      - create
      - assays
      parameters:
      - in: body
        name: assay
        description: The assay to create.
        schema:
          $ref: '#/definitions/assayPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/assayResponse'
          examples:
            application/json:
              $ref: ../examples/assayPostResponse.yml
  /assays/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The assay to be fetched, updated or deleted
      type: integer
      default: 267
    patch:
      operationId: updateAssay
      description:
        $ref: ../descriptions/updateAssay.md
      tags:
      - update
      - assays
      parameters:
      - in: body
        name: assay
        description: The assay to patch
        schema:
          $ref: '#/definitions/assayPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/assayResponse'
          examples:
            application/json:
              $ref: ../examples/assayPatchResponse.yml
    get:
      operationId: readAssay
      description:
        $ref: ../descriptions/readAssay.md
      tags:
      - read
      - assays
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/assayResponse'
          examples:
            application/json:
              $ref: ../examples/assayResponse.yml
    delete:
      operationId: deleteAssay
      description:
        $ref: ../descriptions/deleteAssay.md
      tags:
      - delete
      - assays
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /data_files:
    get:
      operationId: listDataFiles
      description:
        $ref: ../descriptions/listDataFiles.md
      tags:
      - list
      - dataFiles
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dataFilesResponse'
          examples:
            application/json:
              $ref: ../examples/dataFilesResponse.yml
    post:
      operationId: createDataFile
      description:
        $ref: ../descriptions/createDataFile.md
      tags:
      - create
      - dataFiles
      parameters:
      - in: body
        name: dataFile
        description: The dataFile to create.
        schema:
          $ref: '#/definitions/dataFilePost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/dataFileResponse'
          examples:
            application/json:
              $ref: ../examples/dataFilePostResponse.yml
  /data_files/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The data file to fetch
      type: integer
      default: 1152
    get:
      operationId: readDataFile
      description:
        $ref: ../descriptions/readDataFile.md
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the data file to get
        type: integer
        default: 2
      tags:
      - read
      - dataFiles
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dataFileResponse'
          examples:
            application/json:
              $ref: ../examples/dataFileResponse.yml
    patch:
      operationId: updateDataFile
      description:
        $ref: ../descriptions/updateDataFile.md
      tags:
      - update
      - dataFiles
      parameters:
      - in: body
        name: data file
        description: The data file to patch
        schema:
          $ref: '#/definitions/dataFilePatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dataFileResponse'
          examples:
            application/json:
              $ref: ../examples/dataFilePatchResponse.yml
    delete:
      operationId: deleteDataFile
      description:
        $ref: ../descriptions/deleteDataFile.md
      tags:
      - delete
      - dataFiles
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /data_files/{id}/content_blobs/{blob_id}:
    put:
      operationId: uploadDataFileContent
      description:
        $ref: ../descriptions/uploadDataFileContent.md
      parameters:
      - name: id
        in: path
        required: true
        description: The data file content to upload
        type: integer
        default: 1152
      - name: blob_id
        in: path
        required: true
        description: The content identifier to upload
        type: integer
        default: 1831
      - in: body
        name: blobContent
        description: The blob content to upload
        schema:
          type: string
          format: binary
      consumes:
      - application/octet-stream
      produces:
      - '*/*'
      tags:
      - upload
      - dataFiles
      responses:
        '200':
          description: Success
  /data_files/{id}/content_blobs/{blob_id}/download:
    parameters:
    - name: id
      in: path
      required: true
      description: The data file to fetch
      type: integer
      default: 1152
    - name: blob_id
      in: path
      required: true
      description: The blob to download
      type: integer
      default: 1831
    get:
      operationId: downloadDataFileContent
      description:
        $ref: ../descriptions/downloadDataFileContent.md
      produces:
      - '*/*'
      tags:
      - download
      - dataFiles
      responses:
        <<: *ReadType
        '200':
          description: Success
  /documents:
    get:
      operationId: listDocuments
      description:
        $ref: ../descriptions/listDocuments.md
      tags:
      - list
      - documents
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/documentsResponse'
          examples:
            application/json:
              $ref: ../examples/documentsResponse.yml
    post:
      operationId: createDocument
      description:
        $ref: ../descriptions/createDocument.md
      tags:
      - create
      - documents
      parameters:
      - in: body
        name: document
        description: The document to create.
        schema:
          $ref: '#/definitions/documentPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/documentResponse'
          examples:
            application/json:
              $ref: ../examples/documentPostResponse.yml
  /documents/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The document to fetch
      type: integer
      default: 1152
    get:
      operationId: readDocument
      description:
        $ref: ../descriptions/readDocument.md
      tags:
      - read
      - documents
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/documentResponse'
          examples:
            application/json:
              $ref: ../examples/documentResponse.yml
    patch:
      operationId: updateDocument
      description:
        $ref: ../descriptions/updateDocument.md
      tags:
      - update
      - documents
      parameters:
      - in: body
        name: document
        description: The document to patch.
        schema:
          $ref: '#/definitions/documentPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/documentResponse'
          examples:
            application/json:
              $ref: ../examples/documentPatchResponse.yml
    delete:
      operationId: deleteDocument
      description:
        $ref: ../descriptions/deleteDocument.md
      tags:
      - delete
      - documents
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /documents/{id}/content_blobs/{blob_id}:
    put:
      operationId: uploadDocumentContent
      description:
        $ref: ../descriptions/uploadDocumentContent.md
      parameters:
      - name: id
        in: path
        required: true
        description: The document content to upload
        type: integer
        default: 1152
      - name: blob_id
        in: path
        required: true
        description: The content identifier to upload
        type: integer
        default: 1831
      - in: body
        name: blobContent
        description: The blob content to upload
        schema:
          type: string
          format: binary
      consumes:
      - application/octet-stream
      produces:
      - '*/*'
      tags:
      - upload
      - documents
      responses:
        '200':
          description: Success
  /documents/{id}/content_blobs/{blob_id}/download:
    parameters:
    - name: id
      in: path
      required: true
      description: The document to fetch
      type: integer
      default: 1152
    - name: blob_id
      in: path
      required: true
      description: The blob to download
      type: integer
      default: 1831
    get:
      operationId: downloadDocumentContent
      description:
        $ref: ../descriptions/downloadDocumentContent.md
      produces:
      - '*/*'
      tags:
      - download
      - documents
      responses:
        <<: *ReadType
        '200':
          description: Success
  /events:
    get:
      operationId: listEvents
      description:
        $ref: ../descriptions/listEvents.md
      tags:
      - list
      - events
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/eventsResponse'
          examples:
            application/json:
              $ref: ../examples/eventsResponse.yml
    post:
      operationId: createEvent
      description:
        $ref: ../descriptions/createEvent.md
      tags:
      - create
      - events
      parameters:
      - in: body
        name: sop
        description: The event to create.
        schema:
          $ref: '#/definitions/eventPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/eventResponse'
          examples:
            application/json:
              $ref: ../examples/eventPostResponse.yml
  /events/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The event to fetch
      type: integer
      default: 75
    get:
      operationId: readEvent
      description:
        $ref: ../descriptions/readEvent.md
      tags:
      - read
      - events
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/eventResponse'
          examples:
            application/json:
              $ref: ../examples/eventResponse.yml
    patch:
      operationId: updateEvent
      description:
        $ref: ../descriptions/updateEvent.md
      tags:
      - update
      - events
      parameters:
      - in: body
        name: sop
        description: The event to update.
        schema:
          $ref: '#/definitions/eventPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/eventResponse'
          examples:
            application/json:
              $ref: ../examples/eventPatchResponse.yml
    delete:
      operationId: deleteEvent
      description:
        $ref: ../descriptions/deleteEvent.md
      tags:
      - delete
      - events
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /institutions:
    get:
      operationId: listInstitutions
      description:
        $ref: ../descriptions/listInstitutions.md
      tags:
      - list
      - institutions
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/institutionsResponse'
          examples:
            application/json:
              $ref: ../examples/institutionsResponse.yml
    post:
      operationId: createInstitution
      description:
        $ref: ../descriptions/createInstitution.md
      tags:
      - create
      - institutions
      parameters:
      - in: body
        name: institution
        description: The institution to create.
        schema:
          $ref: '#/definitions/institutionPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/institutionResponse'
          examples:
            application/json:
              $ref: ../examples/institutionPostResponse.yml
  /institutions/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The institution to fetch, patch or delete
      type: integer
      default: 142
    get:
      operationId: readInstitution
      description:
        $ref: ../descriptions/readInstitution.md
      tags:
      - read
      - institutions
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/institutionResponse'
          examples:
            application/json:
              $ref: ../examples/institutionResponse.yml
    patch:
      operationId: updateInstitution
      description:
        $ref: ../descriptions/updateInstitution.md
      parameters:
      - in: body
        name: institution
        description: The data with which to update the institution.
        schema:
          $ref: '#/definitions/institutionPatch'
      tags:
      - update
      - institutions
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/institutionResponse'
          examples:
            application/json:
              $ref: ../examples/institutionPatchResponse.yml
    delete:
      operationId: deleteInstitution
      description:
        $ref: ../descriptions/deleteInstitution.md
      tags:
      - delete
      - institutions
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'

  /investigations:
    get:
      operationId: listInvestigations
      description:
        $ref: ../descriptions/listInvestigations.md
      tags:
      - list
      - investigations
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/investigationsResponse'
          examples:
            application/json:
              $ref: ../examples/investigationsResponse.yml
    post:
      operationId: createInvestigation
      description:
        $ref: ../descriptions/createInvestigation.md
      tags:
      - create
      - investigations
      parameters:
      - in: body
        name: investigation
        description: The investigation to create.
        schema:
          $ref: '#/definitions/investigationPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/investigationResponse'
          examples:
            application/json:
              $ref: ../examples/investigationPostResponse.yml
  /investigations/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The investigation to fetch, patch or delete
      type: integer
      default: 56
    get:
      operationId: readInvestigation
      description:
        $ref: ../descriptions/readInvestigation.md
      tags:
      - read
      - investigations
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/investigationResponse'
          examples:
            application/json:
              $ref: ../examples/investigationResponse.yml
    patch:
      operationId: updateInvestigation
      description:
        $ref: ../descriptions/updateInvestigation.md
      parameters:
      - in: body
        name: investigation
        description: The investigation to patch.
        schema:
          $ref: '#/definitions/investigationPatch'
      tags:
      - update
      - investigations
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/investigationResponse'
          examples:
            application/json:
              $ref: ../examples/investigationPatchResponse.yml
    delete:
      operationId: deleteInvestigation
      description:
        $ref: ../descriptions/deleteInvestigation.md
      tags:
      - delete
      - investigations
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /models:
    get:
      operationId: listModels
      description:
        $ref: ../descriptions/listModels.md
      tags:
      - list
      - models
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/modelsResponse'
          examples:
            application/json:
              $ref: ../examples/modelsResponse.yml
    post:
      operationId: createModel
      description:
        $ref: ../descriptions/createModel.md
      tags:
      - create
      - models
      parameters:
      - in: body
        name: model
        description: The model to create.
        schema:
          $ref: '#/definitions/modelPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/modelResponse'
          examples:
            application/json:
              $ref: ../examples/modelPostResponse.yml
  /models/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The model to fetch, patch or delete
      type: integer
      default: 139
    get:
      operationId: readModel
      description:
        $ref: ../descriptions/readModel.md
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the model to get
        type: integer
        default: 2
      tags:
      - read
      - models
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/modelResponse'
          examples:
            application/json:
              $ref: ../examples/modelResponse.yml
    patch:
      operationId: updateModel
      description:
        $ref: ../descriptions/updateModel.md
      tags:
      - update
      - models
      parameters:
      - in: body
        name: model
        description: The model to patch.
        schema:
          $ref: '#/definitions/modelPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/modelResponse'
          examples:
            application/json:
              $ref: ../examples/modelPatchResponse.yml
    delete:
      operationId: deleteModel
      description:
        $ref: ../descriptions/deleteModel.md
      tags:
      - delete
      - models
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /models/{id}/content_blobs/{blob_id}:
    put:
      operationId: uploadModelContent
      description:
        $ref: ../descriptions/uploadModelContent.md
      parameters:
      - name: id
        in: path
        required: true
        description: The model content to upload
        type: integer
        default: 1152
      - name: blob_id
        in: path
        required: true
        description: The content identifier to upload
        type: integer
        default: 1831
      - in: body
        name: blobContent
        description: The blob content to upload
        schema:
          type: string
          format: binary
      consumes:
      - application/octet-stream
      produces:
      - '*/*'
      tags:
      - upload
      - models
      responses:
        '200':
          description: Success
  /models/{id}/content_blobs/{blob_id}/download:
    parameters:
    - name: id
      in: path
      required: true
      description: The model to fetch
      type: integer
      default: 139
    - name: blob_id
      in: path
      required: true
      description: The blob to download
      type: integer
      default: 1850
    get:
      operationId: downloadModelContent
      description:
        $ref: ../descriptions/downloadModelContent.md
      tags:
      - read
      - models
      responses:
        '200':
          description: Success
          schema:
            type: file
  /organisms:
    get:
      operationId: listOrganisms
      description:
        $ref: ../descriptions/listOrganisms.md
      tags:
      - list
      - organisms
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/organismsResponse'
          examples:
            application/json:
              $ref: ../examples/organismsResponse.yml
  /organisms/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The organism to fetch, patch or delete
      type: integer
      default: 1933753696
    get:
      operationId: readOrganism
      description:
        $ref: ../descriptions/readOrganism.md
      tags:
      - read
      - organisms
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/organismResponse'
          examples:
            application/json:
              $ref: ../examples/organismResponse.yml
  /people:
    get:
      operationId: listPeople
      description:
        $ref: ../descriptions/listPeople.md
      tags:
      - list
      - people
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/peopleResponse'
          examples:
            application/json:
              $ref: ../examples/peopleResponse.yml
    post:
      operationId: createPerson
      description:
        $ref: ../descriptions/createPerson.md
      tags:
      - create
      - people
      parameters:
      - in: body
        name: person
        description: The person to create.
        schema:
          $ref: '#/definitions/personPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/personResponse'
          examples:
            application/json:
              $ref: ../examples/personPostResponse.yml
  /people/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The person to fetch, patch or delete
      type: integer
      default: 433
    get:
      operationId: readPerson
      description:
        $ref: ../descriptions/readPerson.md
      tags:
      - read
      - people
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/personResponse'
          examples:
            application/json:
              $ref: ../examples/personResponse.yml
    patch:
      operationId: updatePerson
      description:
        $ref: ../descriptions/updatePerson.md
      parameters:
      - in: body
        name: person
        description: The data with which to update the person.
        schema:
          $ref: '#/definitions/personPatch'
      tags:
      - update
      - people
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/personResponse'
          examples:
            application/json:
              $ref: ../examples/personPatchResponse.yml
    delete:
      operationId: deletePerson
      description:
        $ref: ../descriptions/deletePerson.md
      tags:
      - delete
      - people
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /presentations:
    get:
      operationId: listPresentations
      description:
        $ref: ../descriptions/listPresentations.md
      tags:
      - list
      - presentations
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/presentationsResponse'
          examples:
            application/json:
              $ref: ../examples/presentationsResponse.yml
    post:
      operationId: createPresentation
      description:
        $ref: ../descriptions/createPresentation.md
      tags:
      - create
      - presentations
      parameters:
      - in: body
        name: presentation
        description: The presentation to create.
        schema:
          $ref: '#/definitions/presentationPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/presentationResponse'
          examples:
            application/json:
              $ref: ../examples/presentationPostResponse.yml
  /presentations/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The presentation to fetch, patch or delete
      type: integer
      default: 253
    get:
      operationId: readPresentation
      description:
        $ref: ../descriptions/readPresentation.md
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the presentation to get
        type: integer
        default: 1
      tags:
      - read
      - presentations
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/presentationResponse'
          examples:
            application/json:
              $ref: ../examples/presentationResponse.yml
    patch:
      operationId: updatePresentation
      description:
        $ref: ../descriptions/updatePresentation.md
      tags:
      - update
      - presentations
      parameters:
      - in: body
        name: presentation
        description: The presentation to update.
        schema:
          $ref: '#/definitions/presentationPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/presentationResponse'
          examples:
            application/json:
              $ref: ../examples/presentationPatchResponse.yml
    delete:
      operationId: deletePresentation
      description:
        $ref: ../descriptions/deletePresentation.md
      tags:
      - delete
      - presentations
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /presentations/{id}/content_blobs/{blob_id}:
    put:
      operationId: uploadPresentationContent
      description:
        $ref: ../descriptions/uploadPresentationContent.md
      parameters:
      - name: id
        in: path
        required: true
        description: The presentation content to upload
        type: integer
        default: 1152
      - name: blob_id
        in: path
        required: true
        description: The content identifier to upload
        type: integer
        default: 1831
      - in: body
        name: blobContent
        description: The blob content to upload
        schema:
          type: string
          format: binary
      consumes:
      - application/octet-stream
      produces:
      - '*/*'
      tags:
      - upload
      - presentations
      responses:
        '200':
          description: Success
  /presentations/{id}/content_blobs/{blob_id}/download:
    parameters:
    - name: id
      in: path
      required: true
      description: The presentation to fetch
      type: integer
      default: 377
    - name: blob_id
      in: path
      required: true
      description: The blob to download
      type: integer
      default: 3215
    get:
      operationId: downloadPresentationContent
      description:
        $ref: ../descriptions/downloadPresentationContent.md
      tags:
      - download
      - presentations
      responses:
        <<: *ReadType
        '200':
          description: Success
          schema:
            type: file
  /programmes:
    get:
      operationId: listProgrammes
      description:
        $ref: ../descriptions/listProgrammes.md
      tags:
      - list
      - programmes
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/programmesResponse'
          examples:
            application/json:
              $ref: ../examples/programmesResponse.yml
    post:
      operationId: createProgramme
      description:
        $ref: ../descriptions/createProgramme.md
      tags:
      - create
      - programmes
      parameters:
      - in: body
        name: programme
        description: The programme to create.
        schema:
          $ref: '#/definitions/programmePost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/programmeResponse'
          examples:
            application/json:
              $ref: ../examples/programmePostResponse.yml
  /programmes/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The programme to fetch, patch or delete
      type: integer
      default: 3
    get:
      operationId: readProgramme
      description:
        $ref: ../descriptions/readProgramme.md
      tags:
      - read
      - programmes
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/programmeResponse'
          examples:
            application/json:
              $ref: ../examples/programmeResponse.yml
    patch:
      operationId: updateProgramme
      description:
        $ref: ../descriptions/updateProgramme.md
      parameters:
      - in: body
        name: programme
        description: The data with which to update the programme.
        schema:
          $ref: '#/definitions/programmePatch'
      tags:
      - update
      - programmes
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/programmeResponse'
          examples:
            application/json:
              $ref: ../examples/programmePatchResponse.yml
    delete:
      operationId: deleteProgramme
      description:
        $ref: ../descriptions/deleteProgramme.md
      tags:
      - delete
      - programmes
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /projects:
    get:
      operationId: listProjects
      description:
        $ref: ../descriptions/listProjects.md
      tags:
      - list
      - projects
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/projectsResponse'
          examples:
            application/json:
              $ref: ../examples/projectsResponse.yml
    post:
      operationId: createProject
      description:
        $ref: ../descriptions/createProject.md
      tags:
      - create
      - projects
      parameters:
      - in: body
        name: project
        description: The project to create.
        schema:
          $ref: '#/definitions/projectPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/projectResponse'
          examples:
            application/json:
              $ref: ../examples/projectPostResponse.yml
  /projects/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The project to fetch, patch or delete
      type: integer
      default: 17
    get:
      operationId: readProject
      description:
        $ref: ../descriptions/readProject.md
      tags:
      - read
      - projects
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/projectResponse'
          examples:
            application/json:
              $ref: ../examples/projectResponse.yml
    patch:
      operationId: updateProject
      description:
        $ref: ../descriptions/updateProject.md
      parameters:
      - in: body
        name: project
        description: The data with which to update the project.
        schema:
          $ref: '#/definitions/projectPatch'
      tags:
      - update
      - projects
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/projectResponse'
          examples:
            application/json:
              $ref: ../examples/projectPatchResponse.yml
    delete:
      operationId: deleteProject
      description:
        $ref: ../descriptions/deleteProject.md
      tags:
      - delete
      - projects
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /publications:
    get:
      operationId: listPublications
      description:
        $ref: ../descriptions/listPublications.md
      tags:
      - list
      - publications
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/publicationsResponse'
          examples:
            application/json:
              $ref: ../examples/publicationsResponse.yml
  /publications/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The publication to fetch, patch or delete
      type: integer
      default: 240
    get:
      operationId: readPublication
      description:
        $ref: ../descriptions/readPublication.md
      tags:
      - read
      - publications
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/publicationResponse'
          examples:
            application/json:
              $ref: ../examples/publicationResponse.yml
  /sample_types:
    get:
      operationId: listSampleTypes
      description:
        $ref: ../descriptions/listSampleTypes.md
      tags:
      - list
      - sampleTypes
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sampleTypesResponse'
          examples:
            application/json:
              $ref: ../examples/sampleTypesResponse.yml
  /sops:
    get:
      operationId: listSops
      description:
        $ref: ../descriptions/listSops.md
      tags:
      - list
      - sops
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sopsResponse'
          examples:
            application/json:
              $ref: ../examples/sopsResponse.yml
    post:
      operationId: createSop
      description:
        $ref: ../descriptions/createSop.md
      tags:
      - create
      - sops
      parameters:
      - in: body
        name: sop
        description: The sop to create.
        schema:
          $ref: '#/definitions/sopPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/sopResponse'
          examples:
            application/json:
              $ref: ../examples/sopPostResponse.yml
  /sops/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The SOP to fetch, patch or delete
      type: integer
      default: 203
    get:
      operationId: readSop
      description:
        $ref: ../descriptions/readSop.md
      parameters:
      - name: version
        in: query
        required: true
        description: The version of the sop to get
        type: integer
        default: 1
      tags:
      - read
      - sops
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sopResponse'
          examples:
            application/json:
              $ref: ../examples/sopResponse.yml
    patch:
      operationId: updateSop
      description:
        $ref: ../descriptions/updateSop.md
      tags:
      - update
      - sops
      parameters:
      - in: body
        name: sop
        description: The sop to update.
        schema:
          $ref: '#/definitions/sopPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sopResponse'
          examples:
            application/json:
              $ref: ../examples/sopPatchResponse.yml
    delete:
      operationId: deleteSop
      description:
        $ref: ../descriptions/deleteSop.md
      tags:
      - delete
      - sops
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
  /sops/{id}/content_blobs/{blob_id}:
    put:
      operationId: uploadSopContent
      description:
        $ref: ../descriptions/uploadSopContent.md
      parameters:
      - name: id
        in: path
        required: true
        description: The sop content to upload
        type: integer
        default: 1152
      - name: blob_id
        in: path
        required: true
        description: The content identifier to upload
        type: integer
        default: 1831
      - in: body
        name: blobContent
        description: The blob content to upload
        schema:
          type: string
          format: binary
      consumes:
      - application/octet-stream
      produces:
      - '*/*'
      tags:
      - upload
      - sops
      responses:
        '200':
          description: Success
  /sops/{id}/content_blobs/{blob_id}/download:
    parameters:
    - name: id
      in: path
      required: true
      description: The SOP to fetch
      type: integer
      default: 203
    - name: blob_id
      in: path
      required: true
      description: The blob to download
      type: integer
      default: 1806
    get:
      operationId: downloadSopContent
      description:
        $ref: ../descriptions/downloadSopContent.md
      tags:
      - download
      - sops
      responses:
        <<: *ReadType
        '200':
          description: Success
          schema:
            type: file
  /studies:
    get:
      operationId: listStudies
      description:
        $ref: ../descriptions/listStudies.md
      tags:
      - list
      - studies
      responses:
        <<: *ListType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/studiesResponse'
          examples:
            application/json:
              $ref: ../examples/studiesResponse.yml
    post:
      operationId: createStudy
      description:
        $ref: ../descriptions/createStudy.md
      tags:
      - create
      - studies
      parameters:
      - in: body
        name: study
        description: The study to create.
        schema:
          $ref: '#/definitions/studyPost'
      responses:
        <<: *CreateType
        '201':
          description: Created
          schema:
            $ref: '#/definitions/studyResponse'
          examples:
            application/json:
              $ref: ../examples/studyPostResponse.yml
  /studies/{id}:
    parameters:
    - name: id
      in: path
      required: true
      description: The study to fetch, patch or delete
      type: integer
      default: 138
    get:
      operationId: readStudy
      description:
        $ref: ../descriptions/readStudy.md
      tags:
      - read
      - studies
      responses:
        <<: *ReadType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/studyResponse'
          examples:
            application/json:
              $ref: ../examples/studyResponse.yml
    patch:
      operationId: updateStudy
      description:
        $ref: ../descriptions/updateStudy.md
      tags:
      - update
      - studies
      parameters:
      - in: body
        name: study
        description: The study to update.
        schema:
          $ref: '#/definitions/studyPatch'
      responses:
        <<: *UpdateType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/studyResponse'
          examples:
            application/json:
              $ref: ../examples/studyPatchResponse.yml
    delete:
      operationId: deleteStudy
      description:
        $ref: ../descriptions/deleteStudy.md
      tags:
      - delete
      - studies
      responses:
        <<: *DeleteType
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ok'
definitions:
  error:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
      code:
        type: string
      title:
        type: string
      detail:
        type: string
      source:
        type: object
        properties:
          pointer:
            type: string
  errors_array:
    type: array
    minItems: 0
    items:
      $ref: '#/definitions/error'
  errors:
    type: object
    properties:
      errors:
        $ref: '#/definitions/errors_array'
  dateTimeString:
    type: string
    minLength: 1
    format: date-time
  nonEmptyString:
    type: string
    minLength: 1
  nullableNonEmptyString:
    allOf:
    - $ref: '#/definitions/nonEmptyString'
    x-nullable: true
  otherCreatorsString:
    type: string
    minLength: 1
  nullableOtherCreatorsString:
    allOf:
    - $ref: '#/definitions/otherCreatorsString'
    x-nullable: true
  nonEmptyStringList:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/nonEmptyString'
  projectPosition:
    type: object
    properties:
      project_id:
        type: string
      position_id:
        type: string
      project_name:
        type: string
  nonEmptyProjectPositionsList:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/projectPosition'
  nullableProjectPositionsList:
    allOf:
    - $ref: '#/definitions/nonEmptyProjectPositionsList'
    x-nullable: true
  nullableNonEmptyStringList:
    allOf:
    - $ref: '#/definitions/nonEmptyStringList'
    x-nullable: true
  uriString:
    type: string
    minLength: 1
    format: uri
  nullableUriString:
    allOf:
    - $ref: '#/definitions/uriString'
    x-nullable: true
  nullableInteger:
    allOf:
    - type: integer
    x-nullable: true
  license:
    type: string
    minLength: 1
  nullableLicense:
    allOf:
    - $ref: '#/definitions/license'
    x-nullable: true
  md5sumString:
    type: string
    minLength: 32
    maxLength: 32
    pattern: '[0-9a-f]{32}'
  nullableMd5sumString:
    allOf:
    - $ref: '#/definitions/md5sumString'
    x-nullable: true
  sha1sumString:
    type: string
    minLength: 5
    maxLength: 40
    pattern: '[0-9a-f]{5,40}'
  nullableSha1sumString:
    allOf:
    - $ref: '#/definitions/sha1sumString'
    x-nullable: true
  countryString:
    type: string
  nullableCountryString:
    allOf:
    - $ref: '#/definitions/countryString'
    x-nullable: true
  countryCodeString:
    minLength: 2
    maxLength: 2
    type: string
  nullableCountryCodeString:
    allOf:
    - $ref: '#/definitions/countryCodeString'
    x-nullable: true
  versionNumber:
    type: string
    minLength: 1
    enum:
    - '1.0'
  JsonApiVersion:
    type: object
    properties:
      version:
        $ref: '#/definitions/versionNumber'
    required:
    - version
    additionalProperties: false
  linksType:
    type: object
    properties:
      self:
        $ref: '#/definitions/uriString'
    required:
    - self
    additionalProperties: false
  metaType:
    type: object
    properties:
      created:
        $ref: '#/definitions/dateTimeString'
      modified:
        $ref: '#/definitions/dateTimeString'
      uuid:
        $ref: '#/definitions/nonEmptyString'
      base_url:
        $ref: '#/definitions/uriString'
      api_version:
        ref: '#/definitions/nonEmptyString'
    required:
    - created
    - modified
    - uuid
    - base_url
    - api_version
    additionalProperties: false
  baseMetaType:
    type: object
    properties:
      base_url:
        $ref: '#/definitions/uriString'
      api_version:
        ref: '#/definitions/nonEmptyString'
    required:
    - base_url
    - api_version
    additionalProperties: false
  ok:
    type: object
    properties:
      status:
        $ref: '#/definitions/nonEmptyString'
    required:
    - status
    additionalProperties: false
    example:
      status: ok
  not_implemented:
    type: object
    properties:
      errors:
        $ref: '#/definitions/errors_array'
  unprocessable_entity:
    type: object
    properties:
      errors:
        $ref: '#/definitions/errors_array'
    example:
      errors:
      - detail: id specified by the PUT request does not match object-id in the JSON
          input
  bad_request:
    type: object
    properties:
      errors:
        $ref: '#/definitions/errors_array'
    example:
      errors:
      - title: You do not have permission
        detail: No permission
  forbidden:
    type: object
    properties:
      errors:
        $ref: '#/definitions/errors_array'
  not_found:
    type: object
    properties:
      errors:
        $ref: '#/definitions/errors_array'
    example:
      errors:
      - title: Not found
        detail: Couldn't find Institution with 'id'=[70]
  permittedResourceType:
    type: string
    minLength: 1
    enum:
    - institutions
    - people
    - projects
  policy:
    type: object
    properties:
      access:
        $ref: '#/definitions/accessType'
      permissions:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          properties:
            resource_type:
              $ref: '#/definitions/permittedResourceType'
            resource_id:
              $ref: '#/definitions/nonEmptyString'
            access:
              $ref: '#/definitions/accessType'
          required:
          - resource_type
          - resource_id
          - access
          additionalProperties: false
    required:
    - access
    - permissions
    additionalProperties: false
  accessType:
    type: string
    minLength: 1
    enum:
    - manage
    - edit
    - download
    - view
    - no_access
  anyType:
    type: string
    minLength: 1
    enum:
    - assays
    - content_blobs
    - data_files
    - documents
    - events
    - institutions
    - models
    - organisms
    - people
    - presentations
    - programmes
    - projects
    - publications
    - sample_types
    - sops
    - studies
  contributedTypeAttributes:
    type: object
    properties:
      tags:
        $ref: '#/definitions/tagsType'
      title:
        $ref: '#/definitions/nonEmptyString'
      description:
        $ref: '#/definitions/nullableNonEmptyString'
      license:
        $ref: '#/definitions/nullableLicense'
      latest_version:
        type: number
      versions:
        type: array
        minItems: 1
        uniqueItems: true
        items:
          properties:
            version:
              type: number
            revision_comments:
              $ref: '#/definitions/nullableNonEmptyString'
            url:
              $ref: '#/definitions/uriString'
          required:
          - version
          - revision_comments
          - url
          additionalProperties: false
      version:
        type: number
      revision_comments:
        $ref: '#/definitions/nullableNonEmptyString'
      created_at:
        $ref: '#/definitions/dateTimeString'
      updated_at:
        $ref: '#/definitions/dateTimeString'
      content_blobs:
        $ref: '#/definitions/contentBlobsList'
      policy:
        $ref: '#/definitions/policy'
      other_creators:
        $ref: '#/definitions/nullableOtherCreatorsString'
    required:
    - title
    - license
    - latest_version
    - versions
    - version
    - created_at
    - updated_at
    - content_blobs
    additionalProperties: false
  modelAttributes:
    type: object
    properties:
      tags:
        $ref: '#/definitions/tagsType'
      title:
        $ref: '#/definitions/nonEmptyString'
      description:
        $ref: '#/definitions/nullableNonEmptyString'
      license:
        $ref: '#/definitions/nullableLicense'
      latest_version:
        type: number
      versions:
        type: array
        minItems: 1
        uniqueItems: true
        items:
          properties:
            version:
              type: number
            revision_comments:
              $ref: '#/definitions/nullableNonEmptyString'
            url:
              $ref: '#/definitions/uriString'
          required:
          - version
          - revision_comments
          - url
          additionalProperties: false
      version:
        type: number
      revision_comments:
        $ref: '#/definitions/nullableNonEmptyString'
      created_at:
        $ref: '#/definitions/dateTimeString'
      updated_at:
        $ref: '#/definitions/dateTimeString'
      content_blobs:
        $ref: '#/definitions/contentBlobsList'
      model_type:
        $ref: '#/definitions/nullableNonEmptyString'
      model_format:
        $ref: '#/definitions/nullableNonEmptyString'
      environment:
        $ref: '#/definitions/nullableNonEmptyString'
      policy:
        $ref: '#/definitions/policy'
      other_creators:
        $ref: '#/definitions/nullableOtherCreatorsString'
    required:
    - title
    - license
    - latest_version
    - versions
    - version
    - created_at
    - updated_at
    - content_blobs
    - model_type
    - model_format
    - environment
    additionalProperties: false
  assayType:
    type: string
    minLength: 1
    enum:
    - assays
  assayReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/assayReferences'
    required:
    - data
    additionalProperties: false
  assayAttributes:
    type: object
    properties:
      tags:
        $ref: '#/definitions/tagsType'
      title:
        $ref: '#/definitions/nonEmptyString'
      description:
        $ref: '#/definitions/nullableNonEmptyString'
      assay_class:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
          key:
            $ref: '#/definitions/nonEmptyString'
          description:
            type: string
        required:
        - title
        - key
        additionalProperties: false
      assay_type:
        type: object
        properties:
          label:
            $ref: '#/definitions/nonEmptyString'
          uri:
            $ref: '#/definitions/uriString'
        required:
        - label
        - uri
        additionalProperties: false
      technology_type:
        type: object
        properties:
          label:
            $ref: '#/definitions/nonEmptyString'
          uri:
            $ref: '#/definitions/uriString'
        required:
        - label
        - uri
    required:
    - title
    - description
    - assay_class
    - assay_type
    - technology_type
    additionalProperties: false
  contentBlobType:
    type: string
    minLength: 1
    enum:
    - content_blobs
  dataFileType:
    type: string
    minLength: 1
    enum:
    - data_files
  dataFileReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/dataFileReferences'
    required:
    - data
    additionalProperties: false
  documentType:
    type: string
    minLength: 1
    enum:
    - documents
  documentReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/documentReferences'
    required:
    - data
    additionalProperties: false
  eventType:
    type: string
    minLength: 1
    enum:
    - events
  eventReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/eventReferences'
    required:
    - data
    additionalProperties: false
  investigationType:
    type: string
    minLength: 1
    enum:
    - investigations
  investigationReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/investigationReferences'
    required:
    - data
    additionalProperties: false
  investigationSingletonReference:
    type: object
    properties:
      data:
        $ref: '#/definitions/investigationReference'
    required:
    - data
    additionalProperties: false
  institutionType:
    type: string
    minLength: 1
    enum:
    - institutions
  institutionReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/institutionReferences'
    required:
    - data
    additionalProperties: false
  modelType:
    type: string
    minLength: 1
    enum:
    - models
  modelReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/modelReferences'
    required:
    - data
    additionalProperties: false
  organismType:
    type: string
    minLength: 1
    enum:
    - organisms
  organismReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/organismType'
    required:
    - id
    - type
    additionalProperties: false
  organismReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/organismReferences'
    required:
    - data
    additionalProperties: false
  peopleType:
    type: string
    minLength: 1
    enum:
    - people
  peopleReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/peopleType'
    required:
    - id
    - type
    additionalProperties: false
  peopleReferenceList:
    type: object
    properties:
      data:
        $ref: '#/definitions/peopleReferences'
    required:
    - data
    additionalProperties: false
  presentationType:
    type: string
    minLength: 1
    enum:
    - presentations
  presentationReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/presentationReferences'
    required:
    - data
    additionalProperties: false
  programmeType:
    type: string
    minLength: 1
    enum:
    - programmes
  programmeReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/programmeReferences'
    required:
    - data
    additionalProperties: false
  programmeDataType:
    type: object
    properties:
      avatar:
        $ref: '#/definitions/nullableUriString'
      title:
        $ref: '#/definitions/nonEmptyString'
      description:
        $ref: '#/definitions/nullableNonEmptyString'
      web_page:
        $ref: '#/definitions/nullableUriString'
      funding_details:
        $ref: '#/definitions/nullableNonEmptyString'
      funding_codes:
        $ref: '#/definitions/tagsType'
    required:
    - avatar
    - title
    - description
    - web_page
    - funding_details
    - funding_codes
    additionalProperties: false
  projectType:
    type: string
    minLength: 1
    enum:
    - projects
  projectReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/projectReferences'
    required:
    - data
    additionalProperties: false
  publicationType:
    type: string
    minLength: 1
    enum:
    - publications
  publicationReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/publicationReferences'
    required:
    - data
    additionalProperties: false
  sampleTypeType:
    type: string
    minLength: 1
    enum:
    - sample_types
  sampleTypeReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/sampleTypeType'
    required:
    - id
    - type
    additionalProperties: false
  sampleTypeReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/sampleTypeReferences'
    required:
    - data
    additionalProperties: false
  sopType:
    type: string
    minLength: 1
    enum:
    - sops
  sopReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/sopReferences'
    required:
    - data
    additionalProperties: false
  studyType:
    type: string
    minLength: 1
    enum:
    - studies
  studyReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/studyType'
    required:
    - id
    - type
    additionalProperties: false
  studyReferencesList:
    type: object
    properties:
      data:
        $ref: '#/definitions/studyReferences'
    required:
    - data
    additionalProperties: false
  studySingletonReference:
    type: object
    properties:
      data:
        $ref: '#/definitions/studyReference'
    required:
    - data
    additionalProperties: false
  tagsType:
    $ref: '#/definitions/nullableNonEmptyStringList'
  anySkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/anyType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  anySkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/anySkeleton'
  anyReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/anyType'
    required:
    - id
    - type
    additionalProperties: false
  anySingletonReference:
    type: object
    properties:
      data:
        $ref: '#/definitions/anyReference'
    required:
    - data
    additionalProperties: false
  assayReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/assayType'
    required:
    - id
    - type
    additionalProperties: false
  assayReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/assayReference'
  assaySkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/assayType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  assaySkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/assaySkeleton'
  dataFileReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/dataFileReference'
  dataFileReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/dataFileType'
    required:
    - id
    - type
    additionalProperties: false
  dataFileSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/dataFileType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  dataFileSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/dataFileSkeleton'
  documentReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/documentReference'
  documentReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/documentType'
    required:
    - id
    - type
    additionalProperties: false
  eventReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/eventReference'
  eventReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/eventType'
    required:
    - id
    - type
    additionalProperties: false
  investigationReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/investigationReference'
  investigationReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/investigationType'
    required:
    - id
    - type
    additionalProperties: false
  institutionReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/institutionReference'
  institutionReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/institutionType'
    required:
    - id
    - type
    additionalProperties: false
  modelReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/modelReference'
  modelReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/modelType'
    required:
    - id
    - type
    additionalProperties: false
  organismReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/organismReference'
  peopleReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/peopleReference'
  presentationReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/presentationReference'
  presentationReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/presentationType'
    required:
    - id
    - type
    additionalProperties: false
  programmeReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/programmeReference'
  programmeReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/programmeType'
    required:
    - id
    - type
    additionalProperties: false
  projectReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/projectReference'
  projectReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/projectType'
    required:
    - id
    - type
    additionalProperties: false
  publicationReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/publicationReference'
  publicationReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/publicationType'
    required:
    - id
    - type
    additionalProperties: false
  sampleTypeReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/sampleTypeReference'
  sopReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/sopReference'
  sopReference:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/sopType'
    required:
    - id
    - type
    additionalProperties: false
  studyReferences:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/studyReference'
  searchResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/anySkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      links: {}
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - links
    - meta
    additionalProperties: false
  assayResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/assayType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              assay_class:
                type: object
                properties:
                  title:
                    $ref: '#/definitions/nonEmptyString'
                  key:
                    $ref: '#/definitions/nonEmptyString'
                  description:
                    $ref: '#/definitions/nullableNonEmptyString'
                required:
                - title
                - key
                additionalProperties: false
              assay_type:
                type: object
                properties:
                  label:
                    $ref: '#/definitions/nullableNonEmptyString'
                  uri:
                    $ref: '#/definitions/uriString'
                required:
                - uri
                additionalProperties: false
              technology_type:
                type: object
                properties:
                  label:
                    $ref: '#/definitions/nullableNonEmptyString'
                  uri:
                    $ref: '#/definitions/uriString'
                required:
                - uri
                additionalProperties: false
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            - assay_class
            - assay_type
            - technology_type
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              organisms:
                $ref: '#/definitions/organismReferencesList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigation:
                $ref: '#/definitions/investigationSingletonReference'
              study:
                $ref: '#/definitions/studySingletonReference'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - creators
            - submitter
            - organisms
            - people
            - projects
            - investigation
            - study
            - data_files
            - documents
            - models
            - sops
            - publications
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  assayPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/assayType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              assay_class:
                type: object
                properties:
                  key:
                    $ref: '#/definitions/nonEmptyString'
                required:
                - key
                additionalProperties: false
              assay_type:
                type: object
                properties:
                  uri:
                    $ref: '#/definitions/uriString'
                required:
                - uri
                additionalProperties: false
              technology_type:
                type: object
                properties:
                  uri:
                    $ref: '#/definitions/uriString'
                required:
                - uri
                additionalProperties: false
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            - assay_class
            - assay_type
            - technology_type
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              study:
                $ref: '#/definitions/studySingletonReference'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              organisms:
                $ref: '#/definitions/organismReferencesList'
            required:
            - study
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/assayPost.yml
  assayPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/assayType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              assay_class:
                type: object
                properties:
                  key:
                    $ref: '#/definitions/nonEmptyString'
                required:
                - key
                additionalProperties: false
              assay_type:
                type: object
                properties:
                  uri:
                    $ref: '#/definitions/uriString'
                required:
                - uri
                additionalProperties: false
              technology_type:
                type: object
                properties:
                  uri:
                    $ref: '#/definitions/uriString'
                required:
                - uri
                additionalProperties: false
              policy:
                $ref: '#/definitions/policy'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              study:
                $ref: '#/definitions/studySingletonReference'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              organisms:
                $ref: '#/definitions/organismReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/assayPatch.yml
  getContentBlobsResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/nonEmptyString'
          attributes:
            type: object
            properties:
              original_filename:
                $ref: '#/definitions/nonEmptyString'
              url:
                $ref: '#/definitions/nullableUriString'
              md5sum:
                $ref: '#/definitions/md5sumString'
              sha1sum:
                $ref: '#/definitions/sha1sumString'
              content_type:
                $ref: '#/definitions/contentBlobType'
            required:
            - original_filename
            - md5sum
            - sha1sum
            - content_type
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  dataFileResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/dataFileType'
          attributes:
            $ref: '#/definitions/contributedTypeAttributes'
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - investigations
            - studies
            - assays
            - publications
            - events
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  dataFilePost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/dataFileType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              content_blobs:
                $ref: '#/definitions/contentBlobSlotsList'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            required:
            - title
            - content_blobs
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/dataFilePost.yml
  dataFilePatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/dataFileType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/dataFilePatch.yml
  documentResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/documentType'
          attributes:
            $ref: '#/definitions/contributedTypeAttributes'
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - investigations
            - studies
            - assays
            - publications
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  documentPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/documentType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              content_blobs:
                $ref: '#/definitions/contentBlobSlotsList'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            required:
            - title
            - content_blobs
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/documentPost.yml
  documentPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/documentType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/documentPatch.yml
  eventResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/eventType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              url:
                $ref: '#/definitions/nullableUriString'
              address:
                $ref: '#/definitions/nullableNonEmptyString'
              city:
                $ref: '#/definitions/nullableNonEmptyString'
              country:
                $ref: '#/definitions/nullableCountryString'
              start_date:
                $ref: '#/definitions/dateTimeString'
              end_date:
                $ref: '#/definitions/dateTimeString'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            - description
            - start_date
            - end_date
            additionalProperties: false
          relationships:
            type: object
            properties:
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
            required:
            - projects
            - data_files
            - publications
            - presentations
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  eventPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/eventType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              url:
                $ref: '#/definitions/nullableUriString'
              address:
                $ref: '#/definitions/nullableNonEmptyString'
              city:
                $ref: '#/definitions/nullableNonEmptyString'
              country:
                $ref: '#/definitions/nullableCountryString'
              start_date:
                $ref: '#/definitions/dateTimeString'
              end_date:
                $ref: '#/definitions/dateTimeString'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            - start_date
            additionalProperties: false
          relationships:
            type: object
            properties:
              projects:
                $ref: '#/definitions/projectReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/eventPost.yml
  eventPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/eventType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              url:
                $ref: '#/definitions/nullableUriString'
              address:
                $ref: '#/definitions/nullableNonEmptyString'
              city:
                $ref: '#/definitions/nullableNonEmptyString'
              country:
                $ref: '#/definitions/nullableCountryString'
              start_date:
                $ref: '#/definitions/dateTimeString'
              end_date:
                $ref: '#/definitions/dateTimeString'
              policy:
                $ref: '#/definitions/policy'
            additionalProperties: false
          relationships:
            type: object
            properties:
              projects:
                $ref: '#/definitions/projectReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/eventPatch.yml
  institutionResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/institutionType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              country:
                $ref: '#/definitions/nullableCountryString'
              country_code:
                $ref: '#/definitions/nullableCountryCodeString'
              city:
                $ref: '#/definitions/nullableNonEmptyString'
              address:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
            required:
            - title
            - country
            - city
            - address
            - web_page
            additionalProperties: false
          relationships:
            type: object
            properties:
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
            required:
            - people
            - projects
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  institutionPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/institutionType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              country:
                $ref: '#/definitions/nullableCountryString'
              city:
                $ref: '#/definitions/nullableNonEmptyString'
              address:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
            required:
            - title
            additionalProperties: false
        required:
        - type
        - attributes
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/institutionPost.yml
  institutionPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/institutionType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              country:
                $ref: '#/definitions/nullableCountryString'
              city:
                $ref: '#/definitions/nullableNonEmptyString'
              address:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
            additionalProperties: false
        required:
        - id
        - type
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/institutionPatch.yml
  investigationResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/investigationType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - studies
            - assays
            - data_files
            - documents
            - models
            - sops
            - publications
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  investigationPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/investigationType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              policy:
                $ref: '#/definitions/policy'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/investigationPatch.yml
  investigationPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/investigationType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/investigationPost.yml
  modelResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/modelType'
          attributes:
            $ref: '#/definitions/modelAttributes'
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - investigations
            - studies
            - assays
            - publications
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  modelPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/modelType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              content_blobs:
                $ref: '#/definitions/contentBlobSlotsList'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              model_type:
                $ref: '#/definitions/nullableNonEmptyString'
              model_format:
                $ref: '#/definitions/nullableNonEmptyString'
              environment:
                $ref: '#/definitions/nullableNonEmptyString'
            required:
            - title
            - content_blobs
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/modelPost.yml
  modelPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/modelType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              model_type:
                $ref: '#/definitions/nullableNonEmptyString'
              model_format:
                $ref: '#/definitions/nullableNonEmptyString'
              environment:
                $ref: '#/definitions/nullableNonEmptyString'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/modelPatch.yml
  organismResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/organismType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              concept_uri:
                $ref: '#/definitions/uriString'
              ontology_id:
                $ref: '#/definitions/nonEmptyString'
            required:
            - title
            - concept_uri
            - ontology_id
            additionalProperties: false
          relationships:
            type: object
            properties:
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
            required:
            - projects
            - assays
            - models
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  personResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/peopleType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              first_name:
                $ref: '#/definitions/nullableNonEmptyString'
              last_name:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              orcid:
                $ref: '#/definitions/nullableNonEmptyString'
              mbox_sha1sum:
                $ref: '#/definitions/nullableSha1sumString'
              expertise:
                $ref: '#/definitions/nullableNonEmptyStringList'
              tools:
                $ref: '#/definitions/nullableNonEmptyStringList'
              phone:
                $ref: '#/definitions/nullableNonEmptyString'
              skype_name:
                $ref: '#/definitions/nullableNonEmptyString'
              project_positions:
                $ref: '#/definitions/nullableProjectPositionsList'
            required:
            - title
            - first_name
            - last_name
            - mbox_sha1sum
            additionalProperties: false
          relationships:
            type: object
            properties:
              projects:
                $ref: '#/definitions/projectReferencesList'
              institutions:
                $ref: '#/definitions/institutionReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - projects
            - institutions
            - investigations
            - studies
            - assays
            - data_files
            - documents
            - models
            - sops
            - publications
            - presentations
            - events
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  personPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/peopleType'
          attributes:
            type: object
            properties:
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              first_name:
                $ref: '#/definitions/nullableNonEmptyString'
              last_name:
                $ref: '#/definitions/nullableNonEmptyString'
              email:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              orcid:
                $ref: '#/definitions/nullableNonEmptyString'
              expertise:
                $ref: '#/definitions/nullableNonEmptyStringList'
              tools:
                $ref: '#/definitions/nullableNonEmptyStringList'
              phone:
                $ref: '#/definitions/nullableNonEmptyString'
              skype_name:
                $ref: '#/definitions/nullableNonEmptyString'
              project_positions:
                $ref: '#/definitions/nullableProjectPositionsList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/personPatch.yml
  personPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/peopleType'
          attributes:
            type: object
            properties:
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              first_name:
                $ref: '#/definitions/nullableNonEmptyString'
              last_name:
                $ref: '#/definitions/nullableNonEmptyString'
              email:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              orcid:
                $ref: '#/definitions/nullableNonEmptyString'
              expertise:
                $ref: '#/definitions/nullableNonEmptyStringList'
              tools:
                $ref: '#/definitions/nullableNonEmptyStringList'
              phone:
                $ref: '#/definitions/nullableNonEmptyString'
              skype_name:
                $ref: '#/definitions/nullableNonEmptyString'
            required:
            - first_name
            - last_name
            additionalProperties: false
        required:
        - type
        - attributes
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/personPost.yml
  presentationResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/presentationType'
          attributes:
            $ref: '#/definitions/contributedTypeAttributes'
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - investigations
            - studies
            - assays
            - publications
            - events
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  presentationPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/presentationType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              content_blobs:
                $ref: '#/definitions/contentBlobSlotsList'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            required:
            - title
            - content_blobs
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/presentationPost.yml
  presentationPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/presentationType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/presentationPatch.yml
  programmeResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/programmeType'
          attributes:
            $ref: '#/definitions/programmeDataType'
          relationships:
            type: object
            properties:
              administrators:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              institutions:
                $ref: '#/definitions/institutionReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - people
            - projects
            - institutions
            - investigations
            - studies
            - assays
            - data_files
            - documents
            - models
            - sops
            - publications
            - presentations
            - events
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  programmePost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/programmeType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              funding_details:
                $ref: '#/definitions/nullableNonEmptyString'
              funding_codes:
                $ref: '#/definitions/tagsType'
            required:
            - title
            additionalProperties: false
          relationships:
            type: object
            properties:
              administrators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
            additionalProperties: false
        required:
        - type
        - attributes
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/programmePost.yml
  programmePatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/programmeType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              funding_details:
                $ref: '#/definitions/nullableNonEmptyString'
              funding_codes:
                $ref: '#/definitions/tagsType'
            additionalProperties: false
          relationships:
            type: object
            properties:
              administrators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/programmePatch.yml
  projectResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/projectType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              wiki_page:
                $ref: '#/definitions/nullableUriString'
              default_policy:
                $ref: '#/definitions/policy'
              default_license:
                $ref: '#/definitions/nullableLicense'
            required:
            - title
            - description
            - web_page
            - wiki_page
            additionalProperties: false
          relationships:
            type: object
            properties:
              organisms:
                $ref: '#/definitions/organismReferencesList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              institutions:
                $ref: '#/definitions/institutionReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
              programmes:
                $ref: '#/definitions/programmeReferencesList'
            required:
            - organisms
            - people
            - institutions
            - investigations
            - studies
            - assays
            - data_files
            - documents
            - models
            - sops
            - publications
            - presentations
            - events
            - programmes
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  projectPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/projectType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              wiki_page:
                $ref: '#/definitions/nullableUriString'
              default_policy:
                $ref: '#/definitions/policy'
              default_license:
                $ref: '#/definitions/nullableLicense'
            additionalProperties: false
          relationships:
            type: object
            properties:
              programmes:
                $ref: '#/definitions/programmeReferencesList'
              organisms:
                $ref: '#/definitions/organismReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/projectPatch.yml
  projectPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/projectType'
          attributes:
            type: object
            properties:
              avatar:
                $ref: '#/definitions/nullableUriString'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              web_page:
                $ref: '#/definitions/nullableUriString'
              wiki_page:
                $ref: '#/definitions/nullableUriString'
              default_policy:
                $ref: '#/definitions/policy'
              default_license:
                $ref: '#/definitions/nullableLicense'
            required:
            - title
            additionalProperties: false
          relationships:
            type: object
            properties:
              programmes:
                $ref: '#/definitions/programmeReferencesList'
              organisms:
                $ref: '#/definitions/organismReferencesList'
            additionalProperties: false
        required:
        - type
        - attributes
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/projectPost.yml
  publicationResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/publicationType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              journal:
                $ref: '#/definitions/nullableNonEmptyString'
              published_date:
                $ref: '#/definitions/nonEmptyString'
              doi:
                $ref: '#/definitions/nullableUriString'
              pubmed_id:
                type: number
              abstract:
                $ref: '#/definitions/nullableNonEmptyString'
              citation:
                $ref: '#/definitions/nullableNonEmptyString'
              link_to_pub:
                $ref: '#/definitions/nullableUriString'
              authors:
                $ref: '#/definitions/nullableNonEmptyStringList'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            - journal
            - published_date
            - pubmed_id
            - citation
            - link_to_pub
            additionalProperties: false
          relationships:
            type: object
            properties:
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
              presentations:
                $ref: '#/definitions/presentationReferencesList'
              events:
                $ref: '#/definitions/eventReferencesList'
            required:
            - people
            - projects
            - investigations
            - studies
            - assays
            - data_files
            - models
            - publications
            - presentations
            - events
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  sopResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/sopType'
          attributes:
            $ref: '#/definitions/contributedTypeAttributes'
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigations:
                $ref: '#/definitions/investigationReferencesList'
              studies:
                $ref: '#/definitions/studyReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - investigations
            - studies
            - assays
            - publications
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  sopPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/sopType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              content_blobs:
                $ref: '#/definitions/contentBlobSlotsList'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            required:
            - title
            - content_blobs
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
            required:
            - projects
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/sopPost.yml
  sopPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/sopType'
          attributes:
            type: object
            properties:
              tags:
                $ref: '#/definitions/nullableNonEmptyStringList'
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              license:
                $ref: '#/definitions/nullableLicense'
              policy:
                $ref: '#/definitions/policy'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              assays:
                $ref: '#/definitions/assayReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/sopPatch.yml
  studyResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/studyType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              experimentalists:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              person_responsible_id:
                $ref: '#/definitions/nullableNonEmptyString'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            - person_responsible_id
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              submitter:
                $ref: '#/definitions/peopleReferenceList'
              people:
                $ref: '#/definitions/peopleReferenceList'
              projects:
                $ref: '#/definitions/projectReferencesList'
              investigation:
                $ref: '#/definitions/investigationSingletonReference'
              assays:
                $ref: '#/definitions/assayReferencesList'
              data_files:
                $ref: '#/definitions/dataFileReferencesList'
              documents:
                $ref: '#/definitions/documentReferencesList'
              models:
                $ref: '#/definitions/modelReferencesList'
              sops:
                $ref: '#/definitions/sopReferencesList'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - creators
            - submitter
            - people
            - projects
            - investigation
            - assays
            - data_files
            - documents
            - models
            - sops
            - publications
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
  studyPost:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/studyType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              experimentalists:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              person_responsible_id:
                $ref: '#/definitions/nullableNonEmptyString'
              policy:
                $ref: '#/definitions/policy'
            required:
            - title
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              investigation:
                $ref: '#/definitions/investigationSingletonReference'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            required:
            - investigation
            additionalProperties: false
        required:
        - type
        - attributes
        - relationships
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/studyPost.yml
  studyPatch:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/studyType'
          attributes:
            type: object
            properties:
              title:
                $ref: '#/definitions/nonEmptyString'
              description:
                $ref: '#/definitions/nullableNonEmptyString'
              experimentalists:
                $ref: '#/definitions/nullableNonEmptyString'
              other_creators:
                $ref: '#/definitions/nullableOtherCreatorsString'
              person_responsible_id:
                $ref: '#/definitions/nullableNonEmptyString'
              policy:
                $ref: '#/definitions/policy'
            additionalProperties: false
          relationships:
            type: object
            properties:
              creators:
                $ref: '#/definitions/peopleReferenceList'
              investigation:
                $ref: '#/definitions/investigationSingletonReference'
              publications:
                $ref: '#/definitions/publicationReferencesList'
            additionalProperties: false
        required:
        - id
        - type
        additionalProperties: false
    required:
    - data
    additionalProperties: false
    example:
      $ref: ../examples/studyPatch.yml
  assaysResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/assaySkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  dataFilesResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/dataFileSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  documentSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/documentType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  documentSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/documentSkeleton'
  documentsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/documentSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  eventSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/eventType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  eventSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/eventSkeleton'
  eventsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/eventSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  institutionSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/institutionType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  institutionSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/institutionSkeleton'
  institutionsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/institutionSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  investigationSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/investigationType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  investigationSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/investigationSkeleton'
  investigationsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/investigationSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  modelSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/modelType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  modelSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/modelSkeleton'
  modelsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/modelSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  organismSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/organismType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  organismSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/organismSkeleton'
  organismsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/organismSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  personSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/peopleType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  peopleSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/personSkeleton'
  peopleResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/peopleSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  presentationSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/presentationType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  presentationSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/presentationSkeleton'
  presentationsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/presentationSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  programmeSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/programmeType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  programmeSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/programmeSkeleton'
  programmesResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/programmeSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  projectSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/projectType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  projectSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/projectSkeleton'
  projectsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/projectSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  publicationSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/publicationType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  publicationSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/publicationSkeleton'
  publicationsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/publicationSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  sopSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/sopType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  sopSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/sopSkeleton'
  sopsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/sopSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  sampleTypeSkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/sampleTypeType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  sampleTypeSkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/sampleTypeSkeleton'
  sampleTypesResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/sampleTypeSkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  studySkeleton:
    properties:
      id:
        $ref: '#/definitions/nonEmptyString'
      type:
        $ref: '#/definitions/studyType'
      attributes:
        type: object
        properties:
          title:
            $ref: '#/definitions/nonEmptyString'
        required:
        - title
        additionalProperties: false
      links:
        $ref: '#/definitions/linksType'
    required:
    - id
    - type
    - attributes
    - links
    additionalProperties: false
  studySkeletons:
    type: array
    minItems: 0
    uniqueItems: true
    items:
      $ref: '#/definitions/studySkeleton'
  studiesResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/studySkeletons'
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
      meta:
        $ref: '#/definitions/baseMetaType'
    required:
    - data
    - jsonapi
    - meta
    additionalProperties: false
  ErrorResponse:
    required:
    - message
    additionalProperties: false
    properties:
      message:
        type: string
  contentBlobsList:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/contentBlob'
  contentBlobSlotsList:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/contentBlobSlot'
  contentBlobSlot:
    allOf:
    - $ref: '#/definitions/remoteContentBlob'
    x-nullable: true
  remoteContentBlob:
    properties:
      url:
        $ref: '#/definitions/nullableUriString'
      original_filename:
        $ref: '#/definitions/nullableNonEmptyString'
      content_type:
        $ref: '#/definitions/nullableNonEmptyString'
    required:
    - url
    additionalProperties: false
  contentBlobPlaceholder:
    properties:
      original_filename:
        $ref: '#/definitions/nullableNonEmptyString'
      content_type:
        $ref: '#/definitions/nullableNonEmptyString'
    required:
    - original_filename
    - content_type
    additionalProperties: false
  contentBlob:
    properties:
      original_filename:
        $ref: '#/definitions/nullableNonEmptyString'
      url:
        $ref: '#/definitions/nullableUriString'
      md5sum:
        $ref: '#/definitions/nullableMd5sumString'
      sha1sum:
        $ref: '#/definitions/nullableSha1sumString'
      content_type:
        $ref: '#/definitions/nullableNonEmptyString'
      link:
        $ref: '#/definitions/uriString'
      size:
        $ref: '#/definitions/nullableInteger'
    required:
    - original_filename
    - url
    - md5sum
    - sha1sum
    - content_type
    - link
    - size
    additionalProperties: false
  contentBlobResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            $ref: '#/definitions/nonEmptyString'
          type:
            $ref: '#/definitions/contentBlobType'
          attributes:
            type: object
            properties:
              original_filename:
                $ref: '#/definitions/nullableNonEmptyString'
              url:
                $ref: '#/definitions/nullableUriString'
              md5sum:
                $ref: '#/definitions/nullableMd5sumString'
              sha1sum:
                $ref: '#/definitions/nullableSha1sumString'
              content_type:
                $ref: '#/definitions/nullableNonEmptyString'
              size:
                $ref: '#/definitions/nullableInteger'
            required:
            - original_filename
            - url
            - md5sum
            - sha1sum
            - content_type
            - size
            additionalProperties: false
          relationships:
            type: object
            properties:
              asset:
                $ref: '#/definitions/anySingletonReference'
            required:
            - asset
            additionalProperties: false
          links:
            $ref: '#/definitions/linksType'
          meta:
            $ref: '#/definitions/metaType'
        required:
        - id
        - type
        - attributes
        - relationships
        - links
        - meta
        additionalProperties: false
      jsonapi:
        $ref: '#/definitions/JsonApiVersion'
    required:
    - data
    - jsonapi
    additionalProperties: false
