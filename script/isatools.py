# -*- coding: utf-8 -*-
"""isatools.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sr22PfEdu9zLOkjwZjMWY50NmvgwB9xj
"""

!pip install isatools

from isatools.model import *
from isatools import isatab
from isatools.isajson import ISAJSONEncoder
from isatools import isajson

import requests
import json
import string
import getpass

headers = {"Content-type": "application/vnd.api+json",
           "Accept": "application/vnd.api+json",
           "Accept-Charset": "ISO-8859-1"}

def recreate_url (object_dict):
  url = base_url + '/' + object_dict['type'] + '/' + object_dict['id']
  return url

def read_seek_object (url):
  
    if type(url) is dict:
      url = recreate_url (url)
    
    if not url.endswith(".json"):
      url += ".json"
    
    r = session.get (url)
    
    json = r.json()
    
    merged_dict = {**json['data']['attributes'], **json['data']['relationships'], **json['data']['meta'], 'id' : json['data']['id']}
    
    return merged_dict

def translate_investigation(seek_investigation_url):
  
    global base_url
    
    base_url = seek_investigation_url.split('/investigations')[0]

    seek_investigation = read_seek_object (seek_investigation_url)
    
    investigation = Investigation()
    
    # @id and filename not mapped
    
    investigation.identifier = seek_investigation['id']
    investigation.title = seek_investigation['title']
    investigation.description = seek_investigation['description']
    investigation.submission_date = seek_investigation['created'].split('T')[0]
    investigation.public_release_date = investigation.submission_date
    
    # ontologySourceReferences not yet mapped
    
    # publications not yet mapped
    
    # map people from people
    for seek_person_ref in seek_investigation['people']['data']:
      person = translate_person (seek_person_ref)
      investigation.contacts.append(person)
    
    # map studies from studies
    for seek_study_ref in seek_investigation['studies']['data']:
      study = translate_study (seek_study_ref)
      investigation.studies.append(study)
    
    # comments not yet mapped

    return investigation

def translate_study(seek_study_url):
  
    
    seek_study = read_seek_object (seek_study_url)

    study = Study()
    
    # @id and filename not mapped
    
    study.identifier = seek_study['id']
    study.title = seek_study['title']
    study.description = seek_study['description']
    study.submission_date = seek_study['created'].split('T')[0]
    study.public_release_date = study.submission_date
    
    # publications not yet mapped
    
    # people not yet mapped
       
    # studyDesignDescriptors not yet mapped

    # protocols not yet mapped

    # materials not yet mapped
    
    # processSequence not yet mapped
    
    # map assays from assays
    for seek_assay_ref in seek_study['assays']['data']:
      assay = translate_assay (seek_assay_ref)
      study.assays.append(assay)

    # factors not yet mapped

    # characteristicCategories not yet mapped

    # unitCategories not yet mapped

    # comments not yet mapped

    return study

def translate_assay(seek_assay_url):
  
    seek_assay = read_seek_object (seek_assay_url)

    assay = Assay()
     
    # @id not yet mapped
    
    assay.description = seek_assay['description']
    
       
    # comments not yet mapped
       
    # filename not yet mapped
       
    # measurementType not yet mapped
       
    # technologyType not yet mapped
       
    # technologyPlatform not yet mapped
       
    # dataFiles not yet mapped
       
    # materials not yet mapped
       
    # characteristicCategories not yet mapped
       
    # unitCategories not yet mapped
    
    # processSequence not yet mapped
       
    return assay

def try_set_attr (object, field_name, seek_dict, seek_field_name) :
  try:
    object.setattr(object, field_name, seek_dict['seek_field_name'])
  except KeyError:
    pass

def translate_person(seek_person_url):
  seek_person = read_seek_object (seek_person_url)
  
  person = Person()
  
  # @id not yet mapped
  
  person.last_name = seek_person['last_name']
  person.first_name = seek_person['first_name']
  # midInitials is not mapped
  # eMail is not mapped
  # person.phone = seek_person['data']['attributes']['phone']
  # fax is not mapped
  # address is not mapped
  
  # affiliation is not yet mapped
  
  # roles are not yet mapped
  
  # comments not yet mapped
  
  return person

session = requests.Session()
session.headers.update(headers)

investigation = translate_investigation('https://fairdomhub.org/investigations/255')

json_string = json.dumps(investigation,
                         cls=ISAJSONEncoder,
                         sort_keys=True,
                         indent=4,
                         separators=(',', ': '))

print (json_string)

my_json_report = isajson.validate(json_string)

print (my_json_report)